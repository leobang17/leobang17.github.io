{"version":3,"file":"component---src-templates-article-page-jsx-content-file-path-home-runner-work-leobang-17-github-io-leobang-17-github-io-documents-spring-primitive-type에-non-null을-매핑하는-이유-md-212deda71004ba587488.js","mappings":"oOAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,IAAK,MACLC,IAAK,MACLC,KAAM,OACNC,EAAG,IACHC,WAAY,aACZC,GAAI,KACJC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,MAAsBd,EAAMe,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBf,EAAYG,GAAI,CACnFa,GAAI,OACJC,MAAO,CACLC,SAAU,aAEXH,EAAAA,cAAoBf,EAAYI,EAAG,CACpCe,KAAM,QACN,aAAc,iBACdC,UAAW,uBACVL,EAAAA,cAAoBf,EAAYK,IAAK,CACtCgB,wBAAyB,CACvBC,OAAQ,meAEP,QAAS,KAAMP,EAAAA,cAAoBf,EAAYM,IAAK,KAAMS,EAAAA,cAAoBf,EAAYO,KAAM,KAAM,wIAA2I,KAAMQ,EAAAA,cAAoB,MAAO,KAAMA,EAAAA,cAAoBf,EAAYG,GAAI,CAC/Ta,GAAI,OACJC,MAAO,CACLC,SAAU,aAEXH,EAAAA,cAAoBf,EAAYI,EAAG,CACpCe,KAAM,QACN,aAAc,iBACdC,UAAW,uBACVL,EAAAA,cAAoBf,EAAYK,IAAK,CACtCgB,wBAAyB,CACvBC,OAAQ,meAEP,QAAS,KAAMP,EAAAA,cAAoBf,EAAYQ,EAAG,KAAM,kBAAmBO,EAAAA,cAAoBf,EAAYO,KAAM,KAAM,OAAQ,mCAAoC,KAAMQ,EAAAA,cAAoB,MAAO,KAAMA,EAAAA,cAAoBf,EAAYQ,EAAG,KAAM,QAASO,EAAAA,cAAoBf,EAAYO,KAAM,KAAM,cAAe,iBAAkBQ,EAAAA,cAAoBf,EAAYO,KAAM,KAAM,OAAQ,sBAAuB,KAAMQ,EAAAA,cAAoBf,EAAYM,IAAK,KAAMS,EAAAA,cAAoBf,EAAYO,KAAM,CAC9ea,UAAW,iBACV,mNAAoN,KAAML,EAAAA,cAAoB,MAAO,KAAMA,EAAAA,cAAoBf,EAAYM,IAAK,KAAMS,EAAAA,cAAoBf,EAAYO,KAAM,CAC7Ua,UAAW,iBACV,+TAAkU,KAAML,EAAAA,cAAoB,MAAO,KAAMA,EAAAA,cAAoBf,EAAYQ,EAAG,KAAM,sCAAuC,KAAMO,EAAAA,cAAoBf,EAAYM,IAAK,KAAMS,EAAAA,cAAoBf,EAAYO,KAAM,KAAM,4WAA6W,KAAMQ,EAAAA,cAAoBf,EAAYQ,EAAG,KAAMO,EAAAA,cAAoBf,EAAYO,KAAM,KAAM,kBAAmB,8BAA+B,KAAMQ,EAAAA,cAAoBf,EAAYQ,EAAG,KAAM,4CAA6C,KAAMO,EAAAA,cAAoB,MAAO,KAAMA,EAAAA,cAAoB,MAAO,KAAMA,EAAAA,cAAoBf,EAAYG,GAAI,CACztCa,GAAI,MACJC,MAAO,CACLC,SAAU,aAEXH,EAAAA,cAAoBf,EAAYI,EAAG,CACpCe,KAAM,OACN,aAAc,gBACdC,UAAW,uBACVL,EAAAA,cAAoBf,EAAYK,IAAK,CACtCgB,wBAAyB,CACvBC,OAAQ,meAEP,OAAQ,KAAMP,EAAAA,cAAoBf,EAAYQ,EAAG,KAAMO,EAAAA,cAAoBf,EAAYI,EAAG,CAC7Fe,KAAM,kHACNI,OAAQ,QACRC,IAAK,YACJ,oHAAqH,KAAMT,EAAAA,cAAoBf,EAAYQ,EAAG,KAAM,iBAAkBO,EAAAA,cAAoBf,EAAYO,KAAM,KAAM,UAAW,gCAAiC,KAAMQ,EAAAA,cAAoBf,EAAYQ,EAAG,KAAMO,EAAAA,cAAoBf,EAAYO,KAAM,KAAM,UAAW,+EAAgFQ,EAAAA,cAAoBf,EAAYO,KAAM,KAAM,6BAA8B,aAAc,KAAMQ,EAAAA,cAAoBf,EAAYS,WAAY,KAAM,KAAMM,EAAAA,cAAoBf,EAAYQ,EAAG,KAAM,+EAAgF,MAAO,KAAMO,EAAAA,cAAoBf,EAAYQ,EAAG,KAAMO,EAAAA,cAAoBf,EAAYO,KAAM,KAAM,UAAW,mDAAoDQ,EAAAA,cAAoBf,EAAYO,KAAM,KAAM,WAAY,sBAAuBQ,EAAAA,cAAoBf,EAAYO,KAAM,KAAM,UAAW,0BAA2B,KAAMQ,EAAAA,cAAoBf,EAAYM,IAAK,KAAMS,EAAAA,cAAoBf,EAAYO,KAAM,CAC7mCa,UAAW,iBACV,mHAAoH,KAAML,EAAAA,cAAoBf,EAAYQ,EAAG,KAAM,eAAgB,KAAMO,EAAAA,cAAoBf,EAAYM,IAAK,KAAMS,EAAAA,cAAoBf,EAAYO,KAAM,CAC3Qa,UAAW,iBACV,mGAAoG,KAAML,EAAAA,cAAoB,MAAO,KAAMA,EAAAA,cAAoBf,EAAYQ,EAAG,KAAMO,EAAAA,cAAoBf,EAAYO,KAAM,KAAM,UAAW,+EAAgF,KAAMQ,EAAAA,cAAoBf,EAAYM,IAAK,KAAMS,EAAAA,cAAoBf,EAAYO,KAAM,CACnZa,UAAW,iBACV,gNAAiN,KAAML,EAAAA,cAAoBf,EAAYQ,EAAG,KAAMO,EAAAA,cAAoBf,EAAYO,KAAM,KAAM,YAAa,+CAAgDQ,EAAAA,cAAoBf,EAAYO,KAAM,KAAM,QAAS,sEAAuE,KAAMQ,EAAAA,cAAoBf,EAAYS,WAAY,KAAM,KAAMM,EAAAA,cAAoBf,EAAYQ,EAAG,KAAM,4JAA6J,MAAO,KAAMO,EAAAA,cAAoBf,EAAYQ,EAAG,KAAM,wEAAyE,KAAMO,EAAAA,cAAoB,MAAO,KAAMA,EAAAA,cAAoBf,EAAYG,GAAI,CACp7Ba,GAAI,MACJC,MAAO,CACLC,SAAU,aAEXH,EAAAA,cAAoBf,EAAYI,EAAG,CACpCe,KAAM,OACN,aAAc,gBACdC,UAAW,uBACVL,EAAAA,cAAoBf,EAAYK,IAAK,CACtCgB,wBAAyB,CACvBC,OAAQ,meAEP,OAAQ,KAAMP,EAAAA,cAAoBf,EAAYU,GAAI,CACrDM,GAAI,gBACJC,MAAO,CACLC,SAAU,aAEXH,EAAAA,cAAoBf,EAAYI,EAAG,CACpCe,KAAM,iDACN,aAAc,0BACdC,UAAW,uBACVL,EAAAA,cAAoBf,EAAYK,IAAK,CACtCgB,wBAAyB,CACvBC,OAAQ,meAEP,iBAAkB,KAAMP,EAAAA,cAAoBf,EAAYQ,EAAG,KAAM,sFAAuF,KAAMO,EAAAA,cAAoBf,EAAYM,IAAK,KAAMS,EAAAA,cAAoBf,EAAYO,KAAM,CAClPa,UAAW,iBACV,4IAA6I,KAAML,EAAAA,cAAoB,MAAO,KAAMA,EAAAA,cAAoBf,EAAYQ,EAAG,KAAM,6DAA8D,KAAMO,EAAAA,cAAoBf,EAAYM,IAAK,KAAMS,EAAAA,cAAoBf,EAAYO,KAAM,KAAM,wWAAyW,KAAMQ,EAAAA,cAAoB,MAAO,KAAMA,EAAAA,cAAoB,MAAO,KAAMA,EAAAA,cAAoBf,EAAYG,GAAI,CAC90Ba,GAAI,YACJC,MAAO,CACLC,SAAU,aAEXH,EAAAA,cAAoBf,EAAYI,EAAG,CACpCe,KAAM,aACN,aAAc,sBACdC,UAAW,uBACVL,EAAAA,cAAoBf,EAAYK,IAAK,CACtCgB,wBAAyB,CACvBC,OAAQ,meAEP,aAAc,KAAMP,EAAAA,cAAoBf,EAAYW,GAAI,KAAM,KAAMI,EAAAA,cAAoBf,EAAYY,GAAI,KAAMG,EAAAA,cAAoBf,EAAYI,EAAG,CACpJe,KAAM,kHACNI,OAAQ,QACRC,IAAK,YACJ,oHAAqH,MAC1H,CAKA,MAJA,SAAoBzB,EAAQ,CAAC,GAC3B,MAAO0B,QAASC,GAAazB,OAAOC,OAAO,CAAC,GAAGW,EAAAA,EAAAA,MAAsBd,EAAMe,YAC3E,OAAOY,EAAYX,EAAAA,cAAoBW,EAAW3B,EAAOgB,EAAAA,cAAoBjB,EAAmBC,IAAUD,EAAkBC,EAC9H,E,oEC9GA,MACM4B,EAAc,EAAEC,OAAMC,WAAUC,iBACpC,MAAM,SAACC,EAAQ,SAAEC,GAAYJ,EACvBK,EAAe,IAChBL,EAAKM,IAAIC,YACZC,WAAYR,EAAKM,IAAIG,OAAOD,YAE9B,OAAOrB,EAAAA,cAAoBuB,EAAAA,EAAoB,CAC7CV,KAAMA,GACLb,EAAAA,cAAoBwB,EAAAA,EAAe,KAAMxB,EAAAA,cAAoByB,EAAAA,EAAoBP,GAAelB,EAAAA,cAAoB0B,EAAAA,EAAiB,KAAMZ,GAAWd,EAAAA,cAAoB2B,EAAAA,EAAa,CACxLC,KAAMZ,EACNa,KAAMZ,IACJjB,EAAAA,cAAoB8B,EAAAA,IAAa,EAGxB,SAASC,EAAiB/C,GACvC,OAAOgB,EAAAA,cAAoBY,EAAa5B,EAAOgB,EAAAA,cAAoBgC,EAAqBhD,GAC1F,C","sources":["webpack://gatsby-theme-simplex/./documents/Spring/primitive-type에-non-null을-매핑하는-이유.md","webpack://gatsby-theme-simplex/./src/templates/ArticlePage.jsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    div: \"div\",\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    blockquote: \"blockquote\",\n    h4: \"h4\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, {\n    id: \"what\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#what\",\n    \"aria-label\": \"what permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"What\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"Caused by: org.h2.jdbc.JdbcSQLIntegrityConstraintViolationException: NULL not allowed for column \\\"ARTICLE_CURSOR\\\"; SQL statement:\\n\")), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"when\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#when\",\n    \"aria-label\": \"when permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"When\"), \"\\n\", React.createElement(_components.p, null, \"테스트를 위해 빈 생성자로 \", React.createElement(_components.code, null, \"Nie\"), \"를 생성하고 persist하는 과정에서 에러가 발생했다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, \"값타입인 \", React.createElement(_components.code, null, \"NieContext\"), \"와 값타입을 가지고 있는 \", React.createElement(_components.code, null, \"Nie\"), \"의 엔티티 정의는 다음과 같았다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"@Getter\\n@NoArgsConstructor(access = AccessLevel.PROTECTED)\\n@Embeddable\\npublic class NieContext {\\n\\t@Enumerated(EnumType.STRING)\\n\\tprivate NieProcessType lastProcess;\\n\\tprivate long articleCursor;\\n}\\n\")), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"@Getter\\n@NoArgsConstructor(access = AccessLevel.PROTECTED)\\n@Entity\\npublic class Nie extends BaseEntity {\\n\\t@Id\\n\\t@GeneratedValue(strategy = GenerationType.AUTO)\\n\\t@Column(name = \\\"nie_id\\\")\\n\\tprivate Long id;\\n  // ...\\n\\t@Embedded\\n\\t@Column(updatable = false)\\n\\tprivate NieContext context;\\n\\n  // ...\\n}\\n\")), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, \"hibernate가 매핑한 ddl을 확인해보니 다음과 같았다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"Hibernate: \\n    \\n    create table nie (\\n       nie_id bigint not null,\\n        created_at timestamp,\\n        updated_at timestamp,\\n        article_id bigint not null,\\n        article_cursor bigint not null,  // <--- \\n        last_process varchar(255),\\n        status varchar(255),\\n        group_user_id bigint,\\n        primary key (nie_id)\\n    )\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"article_cursor\"), \" 가 not null로 매핑되고 있었다… 왜지?\"), \"\\n\", React.createElement(_components.p, null, \"심지어 제약조건이 필요한 column도 아니어서 수정이 필요한 상태였다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"why\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#why\",\n    \"aria-label\": \"why permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Why\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://docs.jboss.org/hibernate/orm/6.1/userguide/html_single/Hibernate_User_Guide.html#basic-basic-annotation\",\n    target: \"_self\",\n    rel: \"nofollow\"\n  }, \"https://docs.jboss.org/hibernate/orm/6.1/userguide/html_single/Hibernate_User_Guide.html#basic-basic-annotation\")), \"\\n\", React.createElement(_components.p, null, \"hibernate 문서의 \", React.createElement(_components.code, null, \"@Basic\"), \" 어노테이션 설명을 보면 그 이유가 설명되어 있다.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"@Basic\"), \" 어노테이션은 basic type (Java type과 database column을 매핑하는 타입)을 선언하기 위한 어노테이션으로,  \", React.createElement(_components.code, null, \"jakarta.persistence.Basic\"), \" 에서 제공한다.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"A basic type is a mapping between a Java type and a single database column.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"@Basic\"), \" 어노테이션은 기본적으로 적용되기 때문에 매번 부착해줄 필요가 없다. 우리가 지금껏  \", React.createElement(_components.code, null, \"@Entity\"), \" 를 정의할 때는 사실 각 필드에 \", React.createElement(_components.code, null, \"@Basic\"), \"  어노테이션이 붙은 것과 마찬가지였다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"@Entity\\npublic class Product {\\n  @Id @Basic\\n  private Integer id;\\n  \\n  @Basic\\n  private String sku;\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"는 다음과 동일하다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"@Entity\\npublic class Product {\\n  @Id \\n  private Integer id;\\n  \\n  private String sku;\\n}\\n\")), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"@Basic\"), \" 어노테이션은 2가지 attribute을 정의하는데, 이 중 optional 속성이 이번 trouble shooting과 관련이 있다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"@Target({ElementType.METHOD, ElementType.FIELD})\\n@Retention(RetentionPolicy.RUNTIME)\\npublic @interface Basic {\\n    FetchType fetch() default FetchType.EAGER;\\n    boolean optional() default true;\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"optional\"), \" 속성은 해당 attribute가 null을 허용하는지를 정의한다. 기본값으로 \", React.createElement(_components.code, null, \"true\"), \"가 설정되어있지만, Jakarta Persistence는 primitive type에 대해서는 해당 속성을 무효화한다.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"… Jakarta Persistence also says that it will be ignored if the type is primitive. As long as the type is not primitive, Hibernate will honor this value.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"이에 따라 hibernate는 primitive type에 대해 DDL 매핑시 not null 제약조건을 삽입하는것 같다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"how\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#how\",\n    \"aria-label\": \"how permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"How\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"wrapper-타입-채택\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#wrapper-%ED%83%80%EC%9E%85-%EC%B1%84%ED%83%9D\",\n    \"aria-label\": \"wrapper 타입 채택 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"wrapper 타입 채택\"), \"\\n\", React.createElement(_components.p, null, \"hibernate가 primitive type에 대해 not null 제약조건을 삽입하니, wrapper 타입을 이용하면 null을 허용하게 된다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"public class NieContext {\\n\\t@Enumerated(EnumType.STRING)\\n\\tprivate NieProcessType lastProcess;\\n\\tprivate Integer articleCursor;\\n}\\n\")), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, \"DDL에 not null 제약조건이 사라졌다. 덕분에 빈 생성자를 이용한 테스트 역시 무사히 통과했다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"Hibernate: \\n    \\n    create table nie (\\n       nie_id bigint not null,\\n        created_at timestamp,\\n        updated_at timestamp,\\n        article_id bigint not null,\\n        article_cursor integer,       // <---\\n        last_process varchar(255),\\n        status varchar(255),\\n        group_user_id bigint,\\n        primary key (nie_id)\\n    )\\n\")), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"reference\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#reference\",\n    \"aria-label\": \"reference permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Reference\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://docs.jboss.org/hibernate/orm/6.1/userguide/html_single/Hibernate_User_Guide.html#basic-basic-annotation\",\n    target: \"_self\",\n    rel: \"nofollow\"\n  }, \"https://docs.jboss.org/hibernate/orm/6.1/userguide/html_single/Hibernate_User_Guide.html#basic-basic-annotation\")), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/leobang17.github.io/leobang17.github.io/documents/Spring/primitive-type에-non-null을-매핑하는-이유.md\";\nimport React from 'react';\nimport {graphql} from 'gatsby';\nimport ArticleLayout from 'components/Layout/ArticleLayout';\nimport MarkdownWrapper from 'components/MarkdownWrapper';\nimport ArticleFrontmatter from 'components/ArticleFrontmatter';\nimport ArticlePageContext from 'contexts/ArticlePageContext';\nimport Utterances from 'components/Utterance';\nimport RecentPosts from 'components/RecentPosts/RecentPosts';\nconst isBrowser = typeof window !== undefined;\nconst ArticlePage = ({data, children, serverData}) => {\n  const {prevPost, nextPost} = data;\n  const frontmatters = {\n    ...data.mdx.frontmatter,\n    timeToRead: data.mdx.fields.timeToRead\n  };\n  return React.createElement(ArticlePageContext, {\n    data: data\n  }, React.createElement(ArticleLayout, null, React.createElement(ArticleFrontmatter, frontmatters), React.createElement(MarkdownWrapper, null, children), React.createElement(RecentPosts, {\n    prev: prevPost,\n    next: nextPost\n  }), React.createElement(Utterances)));\n};\nArticlePage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ArticlePage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String, $nextId: String, $prevId: String) {\n    mdx(id: { eq: $id }) {\n      id\n      fields {\n        slug\n        timeToRead\n        categoryDirectory\n      }\n      frontmatter {\n        title\n        createdAt(formatString: \"MMMM DD, YYYY\")\n      }\n      tableOfContents\n    }\n    prevPost: mdx(id: { eq: $prevId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    nextPost: mdx(id: { eq: $nextId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\nexport {ArticlePageHead as Head} from 'components/head';\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","a","div","pre","code","p","blockquote","h4","ul","li","_provideComponents","components","React","id","style","position","href","className","dangerouslySetInnerHTML","__html","target","rel","wrapper","MDXLayout","ArticlePage","data","children","serverData","prevPost","nextPost","frontmatters","mdx","frontmatter","timeToRead","fields","ArticlePageContext","ArticleLayout","ArticleFrontmatter","MarkdownWrapper","RecentPosts","prev","next","Utterances","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}