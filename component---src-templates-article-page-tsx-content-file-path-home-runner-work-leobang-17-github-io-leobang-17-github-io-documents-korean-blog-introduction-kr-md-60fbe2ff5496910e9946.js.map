{"version":3,"file":"component---src-templates-article-page-tsx-content-file-path-home-runner-work-leobang-17-github-io-leobang-17-github-io-documents-korean-blog-introduction-kr-md-60fbe2ff5496910e9946.js","mappings":"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","sources":["webpack://gatsby-theme/./documents/korean/blog-introduction-kr.md","webpack://gatsby-theme/./src/templates/ArticlePage.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    a: \"a\",\n    div: \"div\",\n    p: \"p\",\n    em: \"em\",\n    ul: \"ul\",\n    li: \"li\",\n    h2: \"h2\",\n    blockquote: \"blockquote\",\n    h4: \"h4\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    h3: \"h3\",\n    strong: \"strong\",\n    h5: \"h5\",\n    ol: \"ol\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, {\n    id: \"gatsby-theme-simplex\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#gatsby-theme-simplex\",\n    \"aria-label\": \"gatsby theme simplex permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Gatsby Theme Simplex\"), \"\\n\", React.createElement(_components.p, null, \"Gatsby Theme Simplex는 \", React.createElement(_components.em, null, \"Gatsby 프레임워크\"), \"를 기반으로 구축된 블로그 스타터입니다. 마크다운을 사용하여 글을 작성할 수 있으며, 코드를 수정해 사용자의 필요에 맞게 블로그를 꾸밀 수 있습니다.\"), \"\\n\", React.createElement(_components.p, null, \"Gatsby Theme Simplex는 다음과 같은 기술들을 사용합니다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://www.gatsbyjs.com/docs\",\n    target: \"_self\",\n    rel: \"nofollow\"\n  }, \"GatsbyJS\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://react.dev/reference/react\",\n    target: \"_self\",\n    rel: \"nofollow\"\n  }, \"ReactJS\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://www.typescriptlang.org/docs/\",\n    target: \"_self\",\n    rel: \"nofollow\"\n  }, \"Typescript\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://mui.com/material-ui/getting-started/overview/\",\n    target: \"_self\",\n    rel: \"nofollow\"\n  }, \"MaterialUI\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://emotion.sh/docs/introduction\",\n    target: \"_self\",\n    rel: \"nofollow\"\n  }, \"EmotionJS\")), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"-제공하는-기능\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#-%EC%A0%9C%EA%B3%B5%ED%95%98%EB%8A%94-%EA%B8%B0%EB%8A%A5\",\n    \"aria-label\": \" 제공하는 기능 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"✨ 제공하는 기능\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"MDX\"), \"\\n\", React.createElement(_components.li, null, \"Syntax 하이라이팅\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#gatsby-theme-simplex%EC%9D%98-%EB%AA%A9%EC%B0%A8-table-of-contents\"\n  }, \"목차 (Table Of Contents)\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#gatsby-theme-simplex%EC%9D%98-%EC%B9%B4%ED%85%8C%EA%B3%A0%EB%A6%AC\"\n  }, \"카테고리\")), \"\\n\", React.createElement(_components.li, null, \"수식 지원 (Katex)\"), \"\\n\", React.createElement(_components.li, null, \"반응형 웹\"), \"\\n\", React.createElement(_components.li, null, \"SEO\"), \"\\n\", React.createElement(_components.li, null, \"유저 커스텀\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"-quick-start\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#-quick-start\",\n    \"aria-label\": \" quick start permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"🚀 Quick start\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"️-블로그-설정하기\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EF%B8%8F-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0\",\n    \"aria-label\": \"️ 블로그 설정하기 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"⚙️ 블로그 설정하기\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">blog.config.json</code>\"\n    }\n  }), \" 파일을 통해 블로그의 기본적인 설정을 커스터마이징할 수 있습니다.\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">blog.config.json</code>\"\n    }\n  }), \"은 다음과 같이 구성되어있습니다.\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"json\\\"><pre class=\\\"language-json\\\"><code class=\\\"language-json\\\"><span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property\\\">\\\"metadata\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">\\\"title\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"블로그 제목\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"description\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"블로그에 대한 간략한 설명\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"siteUrl\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"해당 블로그의 site url\\\"</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"social\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">\\\"github\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"작성자의 github 링크\\\"</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"bio\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">\\\"name\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"작성자 이름 (혹은 닉네임)\\\"</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"tableOfContents\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">\\\"maxDepth\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">4</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"category\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">\\\"maxDepth\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">1</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"theme\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">\\\"light\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token property\\\">\\\"main\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"메인으로 이용하고 싶은 색\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token property\\\">\\\"sub\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"서브로 이용하고 싶은 색\\\"</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"각 프로퍼티에 대한 설명과 설정되지 않은 경우의 \", React.createElement(_components.em, null, \"기본값\"), \"은 하단의 \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">프로퍼티 명세</code>\"\n    }\n  }), \"를 참고하십시오.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"프로퍼티를 빈 문자열, 즉 \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">\\\"\\\"</code>\"\n    }\n  }), \"로 남겨두면 \", React.createElement(_components.em, null, \"기본값\"), \"으로 설정됩니다.\"), \"\\n\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"프로퍼티-명세\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0-%EB%AA%85%EC%84%B8\",\n    \"aria-label\": \"프로퍼티 명세 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"프로퍼티 명세\"), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, null, \"프로퍼티\"), React.createElement(_components.th, null, \"설명\"), React.createElement(_components.th, null, \"타입\"), React.createElement(_components.th, null, \"기본값\"))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, null, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">metadata.title</code>\"\n    }\n  })), React.createElement(_components.td, null, \"블로그 제목을 입력합니다.\"), React.createElement(_components.td, null, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">string</code>\"\n    }\n  })), React.createElement(_components.td, null, React.createElement(_components.em, null, \"Blog Simplex\"))), React.createElement(_components.tr, null, React.createElement(_components.td, null, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">metadata.description</code>\"\n    }\n  })), React.createElement(_components.td, null, \"블로그 설명을 입력합니다\"), React.createElement(_components.td, null, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">string</code>\"\n    }\n  })), React.createElement(_components.td, null, React.createElement(_components.em, null, \"Blog created using the “gatsby-theme-simplex” theme. Find on Github.\"))), React.createElement(_components.tr, null, React.createElement(_components.td, null, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">metadata.siteUrl</code>\"\n    }\n  })), React.createElement(_components.td, null, \"해당 블로그의 url을 입력합니다\"), React.createElement(_components.td, null, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">string</code>\"\n    }\n  })), React.createElement(_components.td, null, React.createElement(_components.em, null, React.createElement(_components.a, {\n    href: \"https://github.com/leobang17/gatsby-theme-simplex\",\n    target: \"_self\",\n    rel: \"nofollow\"\n  }, \"https://github.com/leobang17/gatsby-theme-simplex\")))), React.createElement(_components.tr, null, React.createElement(_components.td, null, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">social.github</code>\"\n    }\n  })), React.createElement(_components.td, null, \"작성자의 github 링크를 입력합니다.\"), React.createElement(_components.td, null, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">string</code>\"\n    }\n  })), React.createElement(_components.td, null, React.createElement(_components.em, null, React.createElement(_components.a, {\n    href: \"https://github.com/leobang17/gatsby-theme-simplex\",\n    target: \"_self\",\n    rel: \"nofollow\"\n  }, \"https://github.com/leobang17/gatsby-theme-simplex\")))), React.createElement(_components.tr, null, React.createElement(_components.td, null, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">bio.name</code>\"\n    }\n  })), React.createElement(_components.td, null, \"작성자의 이름 혹은 닉네임을 입력합니다.\"), React.createElement(_components.td, null, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">string</code>\"\n    }\n  })), React.createElement(_components.td, null, React.createElement(_components.em, null, \"“Default Name”\"))), React.createElement(_components.tr, null, React.createElement(_components.td, null, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">tableOfContents.maxDepth</code>\"\n    }\n  })), React.createElement(_components.td, null, \"자동으로 생성되는 \", React.createElement(_components.a, {\n    href: \"#gatsby-theme-simplex%EC%9D%98-%EC%B9%B4%ED%85%8C%EA%B3%A0%EB%A6%AC\"\n  }, \"카테고리\"), \"의 depth를 설정합니다.\"), React.createElement(_components.td, null, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">1 |       2                                                    |                   3  |  4</code>\"\n    }\n  })), React.createElement(_components.td, null, React.createElement(_components.em, null, \"4\"))), React.createElement(_components.tr, null, React.createElement(_components.td, null, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">category.maxDepth</code>\"\n    }\n  })), React.createElement(_components.td, null, \"자동으로 생성되는 \", React.createElement(_components.a, {\n    href: \"#gatsby-theme-simplex%EC%9D%98-%EB%AA%A9%EC%B0%A8-table-of-contents\"\n  }, \"목차\"), \"의 깊이 (depth)를 설정합니다.\"), React.createElement(_components.td, null, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">1       | 2</code>\"\n    }\n  })), React.createElement(_components.td, null, React.createElement(_components.em, null, \"2\"))), React.createElement(_components.tr, null, React.createElement(_components.td, null, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">theme.light.main</code>\"\n    }\n  })), React.createElement(_components.td, null, \"메인으로 이용하고 싶은 색의 Hex 코드를 입력합니다.\"), React.createElement(_components.td, null, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">string</code>\"\n    }\n  })), React.createElement(_components.td, null, React.createElement(_components.em, null, \"#00B7C2\"))), React.createElement(_components.tr, null, React.createElement(_components.td, null, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">theme.light.sub</code>\"\n    }\n  })), React.createElement(_components.td, null, \"서브로 이용하고 싶은 색의 Hex 코드를 입력합니다.\"), React.createElement(_components.td, null, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">string</code>\"\n    }\n  })), React.createElement(_components.td, null, React.createElement(_components.em, null, \"#146C94\"))))), \"\\n\", React.createElement(_components.h2, {\n    id: \"-gatsby-theme-simplex-이해하기\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#-gatsby-theme-simplex-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0\",\n    \"aria-label\": \" gatsby theme simplex 이해하기 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"💡 Gatsby Theme Simplex 이해하기\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"gatsby-theme-simplex의-디렉토리-구조\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#gatsby-theme-simplex%EC%9D%98-%EB%94%94%EB%A0%89%ED%86%A0%EB%A6%AC-%EA%B5%AC%EC%A1%B0\",\n    \"aria-label\": \"gatsby theme simplex의 디렉토리 구조 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Gatsby Theme Simplex의 디렉토리 구조\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">.\\n└── gatsby-theme-simplex/\\n    ├── documents/ ---------------------------------------------------------- 작성글\\n    ├── src/\\n    │   ├── components/ ---------------------------------------------- React 컴포넌트\\n    │   ├── hooks/ ---------------------------------------------------- React Hooks\\n    │   ├── nodeApi/ ----------------------------------- Gatsby Node API와 관련한 함수\\n    │   ├── pages/ ------------------------- File System Route API를 이용해 생성할 페이지\\n    │   ├── styles/ ----------------------- 스타일링 (디자인시스템, css, 반응형, Emotionjs)\\n    │   ├── templates/ ------------------------------ createPage로 생성할 페이지의 템플릿\\n    │   └── utils/ ----------------------------------- vanilla TS utility functions\\n    ├── static/ ----------------------------------------------------------- 정적 파일\\n    ├── blog.config.json ---------------------------------------- 블로그의 기본적인 설정\\n    ├── gatsby-browser.tsx ------------------------------------- Gatsby Browser API\\n    ├── gatsby-config.ts -------------------------------------------- Gatsby 설정파일\\n    ├── gatsby-node.ts ---------------------------------------- Gatsby Node API 구현\\n    └── package.json ------------------------------------------ 프로젝트 의존성 관리 파일</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"모든 수정 사항들은 \", React.createElement(_components.a, {\n    href: \"https://www.gatsbyjs.com/docs\",\n    target: \"_self\",\n    rel: \"nofollow\"\n  }, \"Gatsby 프레임워크\"), \"에 대한 깊은 이해를 바탕으로 이루어지길 권합니다.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"gatsby-theme-simplex의-카테고리\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#gatsby-theme-simplex%EC%9D%98-%EC%B9%B4%ED%85%8C%EA%B3%A0%EB%A6%AC\",\n    \"aria-label\": \"gatsby theme simplex의 카테고리 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Gatsby Theme Simplex의 카테고리\"), \"\\n\", React.createElement(_components.p, null, \"카테고리는 \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">/documents</code>\"\n    }\n  }), \" 내부의 디렉토리 구조에 따라 자동으로 생성됩니다. 즉, \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">/documents</code>\"\n    }\n  }), \" 내에 하위 디렉토리를 생성하여 글을 여러 카테고리로 구성할 수 있습니다.\"), \"\\n\", React.createElement(_components.p, null, \"예를들어, \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">context-switching.mdx</code>\"\n    }\n  }), \" 글을 \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">ComputorScience</code>\"\n    }\n  }), \"라는 이름의 카테고리로 편입시키고 싶다면, 다음과 같은 디렉토리 구조를 형성할 수 있습니다.\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">gatsby-theme-simplex/\\n├── ...\\n├── documents/\\n│   └── ComputorScience/\\n│       └── context-switching.mdx\\n└── ...</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h4, {\n    id: \"재귀적으로-생성되는-서브-카테고리\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EC%9E%AC%EA%B7%80%EC%A0%81%EC%9C%BC%EB%A1%9C-%EC%83%9D%EC%84%B1%EB%90%98%EB%8A%94-%EC%84%9C%EB%B8%8C-%EC%B9%B4%ED%85%8C%EA%B3%A0%EB%A6%AC\",\n    \"aria-label\": \"재귀적으로 생성되는 서브 카테고리 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"재귀적으로 생성되는 서브 카테고리\"), \"\\n\", React.createElement(_components.p, null, \"카테고리 내부의 \", React.createElement(_components.strong, null, \"서브 카테고리\"), \"를 생성해 보다 세분화된 카테고리 구조를 구성할 수 있습니다.\"), \"\\n\", React.createElement(_components.p, null, \"예를들어, \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">ComputorScience</code>\"\n    }\n  }), \"의 하위 카테고리인 \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">OperatingSystem</code>\"\n    }\n  }), \" 아래에 \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">context-switching.mdx</code>\"\n    }\n  }), \" 글을 배치하고 싶은 경우, 다음과 같은 디렉토리 구조를 고려할 수 있습니다.\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">gatsby-theme-simplex/\\n├── ...\\n├── documents/\\n│   └── ComputorScience/\\n│       └── OperatingSystem/\\n│           └── context-switching.mdx\\n└── ...</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"서브 카테고리는 \", React.createElement(_components.strong, null, \"재귀적\"), \"으로 생성됩니다. 생성 가능한 서브 카테고리의 깊이는 \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">blog.config.json</code>\"\n    }\n  }), \" 설정 파일의 \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">category.maxDepth</code>\"\n    }\n  }), \" 프로퍼티에 의해 결정되며, 필요에 맞게 조정할 수 있습니다. 서브 카테고리의 깊이의 기본 값은 \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">2</code>\"\n    }\n  }), \"입니다.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"gatsby-theme-simplex의-목차-table-of-contents\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#gatsby-theme-simplex%EC%9D%98-%EB%AA%A9%EC%B0%A8-table-of-contents\",\n    \"aria-label\": \"gatsby theme simplex의 목차 table of contents permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Gatsby Theme Simplex의 목차 (Table Of Contents)\"), \"\\n\", React.createElement(_components.p, null, \"Gatsby Theme Simplex는 아티클 페이지에서 “목차” 기능을 제공합니다. 목차 기능은 마크다운 문서에 있는 Header 문법을 기반으로 탐색 계층 구조를 Tree로 생성합니다.\"), \"\\n\", React.createElement(_components.p, null, \"목차 Tree의 하위 목차 노드는 \", React.createElement(_components.strong, null, \"재귀적\"), \"으로 생성됩니다. Header의 오름차순에 따라 트리 구조를 만듭니다. \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">H1</code>\"\n    }\n  }), \" 헤더가 루트 노드가 되고, \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">H2</code>\"\n    }\n  }), \" 헤더가 첫 번째 수준의 하위 노드가 되는 식입니다.\"), \"\\n\", React.createElement(_components.p, null, \"사용자는 최대 깊이에 대한 값을 설정하여 \", React.createElement(_components.em, null, \"생성가능한 목차의 최대 깊이\"), \"를 설정할 수 있습니다. 생성 가능한 자식 목차의 최대 깊이는 \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">blog.config.json</code>\"\n    }\n  }), \" 설정 파일의 \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">tableOfContents.maxDepth</code>\"\n    }\n  }), \" 프로퍼티에 의해 결정됩니다.\"), \"\\n\", React.createElement(_components.p, null, \"예를 들어 최대 깊이를 4로 설정하면 Tree에는 \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">H4</code>\"\n    }\n  }), \"까지의 Header만 포함되며 해당 수준을 초과하는 Header는 무시됩니다. 사용자가 \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">H5</code>\"\n    }\n  }), \"까지의 모든 Header를 포함하려면 최대 깊이를 5로 설정하면 됩니다. 하위 목차의 최대 깊이의 기본값은 \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">4</code>\"\n    }\n  }), \"입니다.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"️-글-작성하기\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EF%B8%8F-%EA%B8%80-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0\",\n    \"aria-label\": \"️ 글 작성하기 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"✍️ 글 작성하기\"), \"\\n\", React.createElement(_components.p, null, \"모든 작성 글은 \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">/documents</code>\"\n    }\n  }), \"의 하위 디렉토리에 Markdown 확장자(\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">.md</code>\"\n    }\n  }), \" 혹은 \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">.mdx</code>\"\n    }\n  }), \")로 생성해야합니다. 기초적인 마크다운 문법은 \", React.createElement(_components.a, {\n    href: \"https://www.markdownguide.org/basic-syntax/\",\n    target: \"_self\",\n    rel: \"nofollow\"\n  }, \"마크다운 가이드\"), \" 문서를 참조하십시오.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">/documents</code>\"\n    }\n  }), \"의 하위 디렉토리에 폴더링을 할 경우 자동으로 \", React.createElement(_components.strong, null, \"카테고리\"), \"가 생성되는데, 이에 대한 설명은 \", React.createElement(_components.a, {\n    href: \"#gatsby-theme-simplex%EC%9D%98-%EC%B9%B4%ED%85%8C%EA%B3%A0%EB%A6%AC\"\n  }, \"Gatsby Theme Simplex의 카테고리\"), \" 항목을 참조하십시오.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"frontmatter-입력하기\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#frontmatter-%EC%9E%85%EB%A0%A5%ED%95%98%EA%B8%B0\",\n    \"aria-label\": \"frontmatter 입력하기 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Frontmatter 입력하기\"), \"\\n\", React.createElement(_components.p, null, \"모든 마크다운 글은 본문 작성에 앞서 Frontmatter를 입력해야합니다. 입력해야하는 폼은 다음과 같습니다.\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"md\\\"><pre class=\\\"language-md\\\"><code class=\\\"language-md\\\"><span class=\\\"token front-matter-block\\\"><span class=\\\"token punctuation\\\">---</span>\\n<span class=\\\"token front-matter yaml language-yaml\\\">title: 글의 제목\\ncreatedAt: YYYY-mm-dd (글의 작성일자)</span>\\n<span class=\\\"token punctuation\\\">---</span></span>\\n\\n... 본문</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h4, {\n    id: \"frontmatter-입력폼을-위한-vscode-스니펫-post\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#frontmatter-%EC%9E%85%EB%A0%A5%ED%8F%BC%EC%9D%84-%EC%9C%84%ED%95%9C-vscode-%EC%8A%A4%EB%8B%88%ED%8E%AB-post\",\n    \"aria-label\": \"frontmatter 입력폼을 위한 vscode 스니펫 post permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Frontmatter 입력폼을 위한 VSCode 스니펫 “post”\"), \"\\n\", React.createElement(_components.p, null, \"Gatsby Theme Simplex에는 Frontmatter의 입력 양식을 자동완성하는 \", React.createElement(_components.strong, null, \"스니펫\"), \"이 준비되어 있습니다. VSCode로 작성하는 경우 이 기능을 이용할 수 있습니다. 새로운 마크다운 파일을 생성하고 \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">post</code>\"\n    }\n  }), \"를 입력하여 가장 상단에 나타나는 스니펫을 사용할 수 있습니다.\"), \"\\n\", React.createElement(_components.p, null, \"해당 스니펫은 사용자 PC의 시스템 타임을 참조하여 \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">createdAt</code>\"\n    }\n  }), \" 항목을 자동으로 완성시킵니다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h5, {\n    id: \"마크다운-파일에서-스니펫-기능이-동작하지-않을-경우\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EB%A7%88%ED%81%AC%EB%8B%A4%EC%9A%B4-%ED%8C%8C%EC%9D%BC%EC%97%90%EC%84%9C-%EC%8A%A4%EB%8B%88%ED%8E%AB-%EA%B8%B0%EB%8A%A5%EC%9D%B4-%EB%8F%99%EC%9E%91%ED%95%98%EC%A7%80-%EC%95%8A%EC%9D%84-%EA%B2%BD%EC%9A%B0\",\n    \"aria-label\": \"마크다운 파일에서 스니펫 기능이 동작하지 않을 경우 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"마크다운 파일에서 스니펫 기능이 동작하지 않을 경우\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">settings.json</code>\"\n    }\n  }), \"에 다음 내용을 추가합니다.\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"json\\\"><pre class=\\\"language-json\\\"><code class=\\\"language-json\\\"><span class=\\\"token comment\\\">// settings.json</span>\\n<span class=\\\"token property\\\">\\\"[markdown]\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token property\\\">\\\"editor.quickSuggestions\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h3, {\n    id: \"글-본문에-이미지-첨부하기\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EA%B8%80-%EB%B3%B8%EB%AC%B8%EC%97%90-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%B2%A8%EB%B6%80%ED%95%98%EA%B8%B0\",\n    \"aria-label\": \"글 본문에 이미지 첨부하기 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"글 본문에 이미지 첨부하기\"), \"\\n\", React.createElement(_components.p, null, \"Gatsby Theme Simplex는 이미지 첨부 기능을 지원합니다. 이미지를 첨부하는 방식은 두 가지가 있습니다.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EB%82%B4%EB%B6%80%EC%97%90-%EC%A0%80%EC%9E%A5%EB%90%9C-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%B2%A8%EB%B6%80%ED%95%98%EA%B8%B0-recommended\"\n  }, \"프로젝트의 내부 파일 시스템에 이미지를 저장하거나\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#%EC%99%B8%EB%B6%80-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EB%A7%81%ED%81%AC%EB%A5%BC-%ED%86%B5%ED%95%B4-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%B2%A8%EB%B6%80%ED%95%98%EA%B8%B0\"\n  }, \"외부 링크를 사용하여 이미지를 출력할 수 있습니다\")), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"현재 외부 링크를 통한 이미지 출력은 caption 기능을 지원하지 않으므로 프로젝트 내부에 저장하는 것을 권장합니다.\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"프로젝트-내부에-저장된-이미지-첨부하기-권장\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EB%82%B4%EB%B6%80%EC%97%90-%EC%A0%80%EC%9E%A5%EB%90%9C-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%B2%A8%EB%B6%80%ED%95%98%EA%B8%B0-%EA%B6%8C%EC%9E%A5\",\n    \"aria-label\": \"프로젝트 내부에 저장된 이미지 첨부하기 권장 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"프로젝트 내부에 저장된 이미지 첨부하기 (권장)\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"다음의 디렉토리 구조를 따라하길 권장합니다.\"), \" 작성하려는 글과 동일한 위치에 \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">/imgs</code>\"\n    }\n  }), \" 폴더를 생성합니다. 이 \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">/imgs</code>\"\n    }\n  }), \" 폴더는 해당 폴더가 위치한 바로 상위의 카테고리에 속하는 글의 모든 이미지를 저장하는 데 사용됩니다.\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">gatsby-theme-simplex/\\n├── ...\\n├── documents/ ---------------------------------------------------------- 작성글\\n│   └── ExampleCategory/ ------------------------------------------  예시 카테고리\\n│       ├── imgs/ -------------------- ExampleCategory 하위의 글들이 이용할 이미지 경로\\n│       │   └── example-image.png ------------------------------------ 예시 이미지\\n│       └── example-article.mdx ---------------------------------------- 예시 글\\n└── ...\\n</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"예를들어, \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">OperatingSystem</code>\"\n    }\n  }), \" 카테고리 하위에 \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">context-switching.mdx</code>\"\n    }\n  }), \"와 \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">Paterson-solution.mdx</code>\"\n    }\n  }), \"의 두 글이 존재한다고 가정합니다. \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">/documents/OperatingSystem/imgs</code>\"\n    }\n  }), \" 디렉토리 하위에는 \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">OperatingSystem</code>\"\n    }\n  }), \" 카테고리에 직접 속하는 글들과 연관한 이미지들을 저장합니다.\"), \"\\n\", React.createElement(_components.p, null, \"위의 디렉토리 구조를 채택할 경우, 다음의 마크다운 문법을 이용해 저장된 이미지를 글에 출력할 수 있습니다.\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"md\\\"><pre class=\\\"language-md\\\"><code class=\\\"language-md\\\"><span class=\\\"token url\\\"><span class=\\\"token operator\\\">!</span>[<span class=\\\"token content\\\">Image description</span>](<span class=\\\"token url\\\">./imgs/example-image1.png</span>)</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">alt</code>\"\n    }\n  }), \"에 해당하는 텍스트는 첨부되는 이미지의 caption으로 하단에 표시됩니다.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"위의 디렉토리 구조를 채택하지 않을수도 있습니다.\"), \" 이 경우 글에 첨부하려는 이미지가 저장된 위치의 상대 경로를 계산하여 괄호 \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">()</code>\"\n    }\n  }), \" 안에 입력하면 됩니다.\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"외부-이미지-링크를-통해-이미지-첨부하기\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EC%99%B8%EB%B6%80-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EB%A7%81%ED%81%AC%EB%A5%BC-%ED%86%B5%ED%95%B4-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%B2%A8%EB%B6%80%ED%95%98%EA%B8%B0\",\n    \"aria-label\": \"외부 이미지 링크를 통해 이미지 첨부하기 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"외부 이미지 링크를 통해 이미지 첨부하기\"), \"\\n\", React.createElement(_components.p, null, \"다음의 마크다운 문법을 이용해 외부 이미지 링크의 이미지를 출력합니다.\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"md\\\"><pre class=\\\"language-md\\\"><code class=\\\"language-md\\\"><span class=\\\"token url\\\"><span class=\\\"token operator\\\">!</span>[<span class=\\\"token content\\\">Image description</span>](<span class=\\\"token url\\\">https://example-image-url.com/</span>)</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"현재 외부 이미지 링크에서 이미지를 출력하는 방식은 이미지에 대한 caption 기능을 제공하지 않습니다.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"수식-입력하기\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EC%88%98%EC%8B%9D-%EC%9E%85%EB%A0%A5%ED%95%98%EA%B8%B0\",\n    \"aria-label\": \"수식 입력하기 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"수식 입력하기\"), \"\\n\", React.createElement(_components.p, null, \"Gatsby Theme Simplex는 수식 기능을 지원합니다.\"), \"\\n\", React.createElement(_components.p, null, \"다음과 같은 문법을 이용해 \", React.createElement(_components.strong, null, \"수식 블록\"), \"을 작성할 수 있습니다.\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"mdx\\\"><pre class=\\\"language-mdx\\\"><code class=\\\"language-mdx\\\">$$\\na^2 + b^2 = c^2\\n$$</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"다음과 같은 문법을 이용해 \", React.createElement(_components.strong, null, \"인라인 수식\"), \"을 작성할 수 있습니다.\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"mdx\\\"><pre class=\\\"language-mdx\\\"><code class=\\\"language-mdx\\\">$a^2 + b^2 = c^2$</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"수식 문법은 \", React.createElement(_components.a, {\n    href: \"https://en.wikipedia.org/wiki/TeX\",\n    target: \"_self\",\n    rel: \"nofollow\"\n  }, \"TeX\"), \" 문법을 준수하며, \", React.createElement(_components.a, {\n    href: \"https://www.gatsbyjs.com/plugins/gatsby-remark-katex/?=katex\",\n    target: \"_self\",\n    rel: \"nofollow\"\n  }, \"gatsby remark katex\"), \" 플러그인을 이용해 \", React.createElement(_components.a, {\n    href: \"https://github.com/KaTeX/KaTeX\",\n    target: \"_self\",\n    rel: \"nofollow\"\n  }, \"KaTeX 라이브러리\"), \"를 지원합니다.\"), \"\\n\", React.createElement(_components.p, null, \"수식 작성 방식에 대한 더 많은 정보는 \", React.createElement(_components.a, {\n    href: \"https://katex.org/docs/support_table.html\",\n    target: \"_self\",\n    rel: \"nofollow\"\n  }, \"KaTeX에서 지원하는 TeX 문법\"), \"를 참고하십시오.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"-deploy\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#-deploy\",\n    \"aria-label\": \" deploy permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"💫 Deploy\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/leobang17.github.io/leobang17.github.io/documents/korean/blog-introduction-kr.md\";\nimport React from 'react';\nimport {graphql} from 'gatsby';\nimport ArticleLayout from 'components/Layout/ArticleLayout';\nimport MarkdownWrapper from 'components/MarkdownWrapper';\nimport ArticleFrontmatter from 'components/ArticleFrontmatter';\nimport ArticlePageContext from 'contexts/ArticlePageContext';\nconst ArticlePage = ({data, children}) => {\n  const frontmatters = {\n    ...data.mdx.frontmatter,\n    timeToRead: data.mdx.fields.timeToRead\n  };\n  return React.createElement(ArticlePageContext, {\n    data: data\n  }, React.createElement(ArticleLayout, null, React.createElement(ArticleFrontmatter, frontmatters), React.createElement(MarkdownWrapper, null, children)));\n};\nArticlePage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ArticlePage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String) {\n    mdx(id: { eq: $id }) {\n      id\n      fields {\n        slug\n        timeToRead\n        categoryDirectory\n      }\n      frontmatter {\n        title\n        createdAt(formatString: \"MMMM DD, YYYY\")\n      }\n      tableOfContents\n    }\n  }\n`;\nexport {ArticlePageHead as Head} from 'components/head';\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","div","p","em","ul","li","h2","blockquote","h4","table","thead","tr","th","tbody","td","h3","strong","h5","ol","_provideComponents","components","React","id","style","position","href","className","dangerouslySetInnerHTML","__html","target","rel","wrapper","MDXLayout","ArticlePage","_ref","data","children","frontmatters","mdx","frontmatter","timeToRead","fields","ArticlePageContext","ArticleLayout","ArticleFrontmatter","MarkdownWrapper","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}