{"version":3,"file":"component---src-templates-article-page-jsx-content-file-path-home-runner-work-leobang-17-github-io-leobang-17-github-io-documents-algorithm-55-jump-game-md-fa9ef26db7e3d6eccfb3.js","mappings":"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","sources":["webpack://gatsby-theme-simplex/./documents/Algorithm/55.Jump-Game.md","webpack://gatsby-theme-simplex/./src/templates/ArticlePage.jsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    div: \"div\",\n    p: \"p\",\n    code: \"code\",\n    h4: \"h4\",\n    ul: \"ul\",\n    li: \"li\",\n    ol: \"ol\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, {\n    id: \"문제\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EB%AC%B8%EC%A0%9C\",\n    \"aria-label\": \"문제 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"문제\"), \"\\n\", React.createElement(_components.p, null, \"정수 배열 \", React.createElement(_components.code, null, \"nums\"), \"가 주어진다. 배열의 첫번째 인덱스로부터 시작해 jump해서 마지막 인덱스까지 도달하면 게임에서 승리한다.\\n\", React.createElement(_components.code, null, \"nums\"), \"의 각 원소는 최대 jump 거리를 나타낸다. (최대 jump 거리보다 적게 jump하는 것을 선택할 수도 있다.)\"), \"\\n\", React.createElement(_components.p, null, \"마지막 인덱스에 도달할 수 있다면 \", React.createElement(_components.code, null, \"True\"), \"를 반환하고, 그렇지 않다면 \", React.createElement(_components.code, null, \"False\"), \"를 반환하라.\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"constraints\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#constraints\",\n    \"aria-label\": \"constraints permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Constraints\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"1 <= nums.length <= 10^4\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"0 <= nums[i] <= 10^5\")), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"approach---greedy1-내-풀이\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#approach---greedy1-%EB%82%B4-%ED%92%80%EC%9D%B4\",\n    \"aria-label\": \"approach   greedy1 내 풀이 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Approach - Greedy1 (내 풀이)\"), \"\\n\", React.createElement(_components.p, null, \"게임의 승리 조건은 다음과 같다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"배열의 마지막 index, 혹은 그 이상을 갈 수 있을 경우\\n게임의 패배 조건은 다음과 같다.\"), \"\\n\", React.createElement(_components.li, null, \"도착한 index의 jump 가능 거리가 \", React.createElement(_components.code, null, \"0\"), \"일 경우\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"while 문을 이용해 pointer를 옮겨가며 배열을 순회한다.\\n포인터가 가리키는 다음 index를 계산하는 알고리즘은 다음과 같았다.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"해당 index에서 옮겨갈 수 있는 모든 노드를 for문으로 순차적으로 확인한다.\"), \"\\n\", React.createElement(_components.li, null, \"각 노드가 갈 수 있는 최대 거리를 확인한 후, 가장 멀리갈 수 있는 노드를 다음 pointer로 갱신한다.\"), \"\\n\", React.createElement(_components.li, null, \"이 때 최대 거리가 같다면 현재 index로부터 가장 먼 노드를 선택한다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"while문으로 순회하면서 그 안에서도 for loop을 돌기 때문에 \", React.createElement(_components.code, null, \"O(N^2)\"), \"의 시간 복잡도를 가진다고 생각할 수도 있지만 pointer가 한번 방문했던 곳을 다시 방문하는 일은 최대 2번이므로 (최대 거리를 체크할 때 한번, 앞선 노드가 최대 거리일 경우 for loop을 돌 때 다시 한번) \", React.createElement(_components.code, null, \"O(N)\"), \"의 시간복잡도를 가진다.\"), \"\\n\", React.createElement(_components.p, null, \"방문 표시로 최대 거리 노드에서 탈락한 인덱스들을 표시해준다면 완벽히 \", React.createElement(_components.code, null, \"O(N)\"), \"의 시간복잡도를 가질 수 있을 듯?\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"complexity\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#complexity\",\n    \"aria-label\": \"complexity permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Complexity\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"time complexity: \", React.createElement(_components.code, null, \"O(N)\")), \"\\n\", React.createElement(_components.li, null, \"space complexity: \", React.createElement(_components.code, null, \"O(1)\")), \"\\n\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"code\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#code\",\n    \"aria-label\": \"code permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Code\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"class Solution:\\n    def canJump(self, nums: List[int]) -> bool:\\n        ptr = 0 \\n        \\n        # O(N)\\n        while ptr < len(nums):\\n            if ptr == len(nums) - 1:  # 성공 \\n                return True\\n            elif nums[ptr] == 0:  # 실패\\n                return False\\n            \\n            biggest = 0 # 가장 멀리 갈 수 있는 노드는 어디까지 갈 수 있는지\\n            \\n            if ptr + nums[ptr] >= len(nums):\\n                return True\\n                \\n            for i in range(ptr + 1, ptr + nums[ptr] + 1):\\n                if i + nums[i] >= biggest:\\n                    biggest = i + nums[i]\\n                    ptr = i\\n            \\n        return True\\n\")), \"\\n\", React.createElement(_components.h2, {\n    id: \"approach---greedy2-neetcode-솔루션\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#approach---greedy2-neetcode-%EC%86%94%EB%A3%A8%EC%85%98\",\n    \"aria-label\": \"approach   greedy2 neetcode 솔루션 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Approach - Greedy2 (NeetCode 솔루션)\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://www.youtube.com/watch?v=Yan0cv2cLy8\",\n    target: \"_self\",\n    rel: \"nofollow\"\n  }, \"NeetCode의 greedy 해결법\"), \"을 찾아보았다.\"), \"\\n\", React.createElement(_components.p, null, \"로직은 훨씬 단순하다. 배열의 마지막에서부터 순회하며 성공지점을 계속해서 앞당기는 방식이다.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"배열의 마지막에서부터 처음으로 순회한다.\"), \"\\n\", React.createElement(_components.li, null, \"순회하는 노드에서 성공지점에 도달할 수 있다면, 해당 노드를 성공지점으로 갱신한다.\"), \"\\n\", React.createElement(_components.li, null, \"순회가 끝난 후 성공지점이 0이라면 출발점에서 끝까지 도달할 수 있다는 것을 뜻하므로 \", React.createElement(_components.code, null, \"True\"), \"를 반환하고, 그 외에는 \", React.createElement(_components.code, null, \"False\"), \"를 반환한다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"깔끔..\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"complexity-1\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#complexity-1\",\n    \"aria-label\": \"complexity 1 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Complexity\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"time complexity: \", React.createElement(_components.code, null, \"O(N)\")), \"\\n\", React.createElement(_components.li, null, \"space complexity: \", React.createElement(_components.code, null, \"O(1)\")), \"\\n\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"code-1\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#code-1\",\n    \"aria-label\": \"code 1 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Code\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"class Solution:\\n    def canJump(self, nums: List[int]) -> bool:\\n        ptr = len(nums) - 2 # 순회 포인터\\n        goal = len(nums) - 1  # 성공지점\\n        \\n        while ptr >= 0:\\n            if goal <= ptr + nums[ptr]:\\n                goal = ptr\\n            ptr -= 1\\n            \\n        if goal == 0:\\n            return True\\n        else:\\n            return False\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/leobang17.github.io/leobang17.github.io/documents/Algorithm/55.Jump-Game.md\";\nimport React from 'react';\nimport {graphql} from 'gatsby';\nimport ArticleLayout from 'components/Layout/ArticleLayout';\nimport MarkdownWrapper from 'components/MarkdownWrapper';\nimport ArticleFrontmatter from 'components/ArticleFrontmatter';\nimport ArticlePageContext from 'contexts/ArticlePageContext';\nimport Utterances from 'components/Utterance';\nimport RecentPosts from 'components/RecentPosts/RecentPosts';\nconst isBrowser = typeof window !== undefined;\nconst ArticlePage = ({data, children, serverData}) => {\n  const {prevPost, nextPost} = data;\n  const frontmatters = {\n    ...data.mdx.frontmatter,\n    timeToRead: data.mdx.fields.timeToRead\n  };\n  return React.createElement(ArticlePageContext, {\n    data: data\n  }, React.createElement(ArticleLayout, null, React.createElement(ArticleFrontmatter, frontmatters), React.createElement(MarkdownWrapper, null, children), React.createElement(RecentPosts, {\n    prev: prevPost,\n    next: nextPost\n  }), React.createElement(Utterances)));\n};\nArticlePage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ArticlePage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String, $nextId: String, $prevId: String) {\n    mdx(id: { eq: $id }) {\n      id\n      fields {\n        slug\n        timeToRead\n        categoryDirectory\n      }\n      frontmatter {\n        title\n        createdAt(formatString: \"MMMM DD, YYYY\")\n      }\n      tableOfContents\n    }\n    prevPost: mdx(id: { eq: $prevId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    nextPost: mdx(id: { eq: $nextId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\nexport {ArticlePageHead as Head} from 'components/head';\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","a","div","p","code","h4","ul","li","ol","pre","_provideComponents","components","React","id","style","position","href","className","dangerouslySetInnerHTML","__html","target","rel","wrapper","MDXLayout","ArticlePage","data","children","serverData","prevPost","nextPost","frontmatters","mdx","frontmatter","timeToRead","fields","ArticlePageContext","ArticleLayout","ArticleFrontmatter","MarkdownWrapper","RecentPosts","prev","next","Utterances","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}