{"version":3,"file":"component---src-templates-article-page-jsx-content-file-path-users-leobang-blog-starter-documents-blog-git-actions-md-5350fe15e907515c8447.js","mappings":"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","sources":["webpack://gatsby-theme-simplex/./documents/blog/git-actions.md","webpack://gatsby-theme-simplex/./src/templates/ArticlePage.jsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    a: \"a\",\n    div: \"div\",\n    p: \"p\",\n    code: \"code\",\n    h2: \"h2\",\n    ol: \"ol\",\n    li: \"li\",\n    em: \"em\",\n    ul: \"ul\",\n    pre: \"pre\",\n    h3: \"h3\",\n    strong: \"strong\",\n    h4: \"h4\",\n    h5: \"h5\",\n    blockquote: \"blockquote\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, {\n    id: \"\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#\",\n    \"aria-label\": \" permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  }))), \"\\n\", React.createElement(_components.p, null, \"깃허브는 workflow를 실행할 Linux, Windows, 그리고 macOS 가상머신을 제공한다. 혹은 직접 본인의 데이터센터나 클라우드 인프라에서 self-hosted runners를 호스팅할 수도 있다.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"workflow\"), \"란 하나 이상의 \", React.createElement(_components.code, null, \"job\"), \"을 실행하는 자동화된 process를 말한다.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"workflow의-구성요소\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#workflow%EC%9D%98-%EA%B5%AC%EC%84%B1%EC%9A%94%EC%86%8C\",\n    \"aria-label\": \"workflow의 구성요소 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"workflow의 구성요소\"), \"\\n\", React.createElement(_components.p, null, \"workflow는 다음의 기본적인 요소들을 포함해야한다.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"해당 workflow를 실행할 하나 이상의 \", React.createElement(_components.em, null, \"event\")), \"\\n\", React.createElement(_components.li, null, \"Runner 가상머신에서 실행할 하나 이상의 \", React.createElement(_components.em, null, \"job\"), \". (각 job은 하나 이상의 \", React.createElement(_components.em, null, \"step\"), \"으로 구성된다.)\"), \"\\n\", React.createElement(_components.li, null, \"각 \", React.createElement(_components.em, null, \"step\"), \"은 직접 정의한 script를 실행하거나, action을 실행할 수 있다.\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"workflow는-어떻게-trigger될까\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#workflow%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-trigger%EB%90%A0%EA%B9%8C\",\n    \"aria-label\": \"workflow는 어떻게 trigger될까 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"workflow는 어떻게 trigger될까?\"), \"\\n\", React.createElement(_components.p, null, \"workflow를 trigger하는 event는 다음과 같다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"workflow의 repository에서 발생하는 Event\"), \"\\n\", React.createElement(_components.li, null, \"GitHub 바깥에서 발생하여 \", React.createElement(_components.code, null, \"repository_dispatch\"), \" Event를 발생시키는 Event\"), \"\\n\", React.createElement(_components.li, null, \"정해진 스케줄\"), \"\\n\", React.createElement(_components.li, null, \"수동으로 trigger\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"workflow trigger는 \", React.createElement(_components.code, null, \"on\"), \"으로 정의된다.\"), \"\\n\", React.createElement(_components.p, null, \"다음 단계를 통해 workflow 실행이 trigger된다\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Repository에서 이벤트가 발생한다. Event는 관련된 커밋 SHA나 깃 참조를 가지고 있다.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"GitHub는 \", React.createElement(_components.code, null, \".github/workflow\"), \" 디렉토리에서 Event와 연결된 커밋 SHA나 깃 참조에  workflow를 정의한 파일이 있는지 확인한다.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"on:\"), \" 값이 이벤트와 일치하는 모든 workflow에 대해서 실행시킨다. 어떤 이벤트는 workflow 파일이 default branch에 존재하는지 확인하고 실행시키기도 한다.\"), \"\\n\", React.createElement(_components.p, null, \"각 workflow는 이벤트와 연관된 커밋 SHA나 깃 참조에 존재하는 workflow 버전을 이용해 실행한다. workflow가 실행되면 GitHub는 \", React.createElement(_components.code, null, \"GITHUB_SHA\"), \" (커밋 해시)와 \", React.createElement(_components.code, null, \"GITHUB_REF\"), \"를 Runner의 환경변수로 설정한다.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"workflow-이벤트-정의하기\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#workflow-%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%A0%95%EC%9D%98%ED%95%98%EA%B8%B0\",\n    \"aria-label\": \"workflow 이벤트 정의하기 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"workflow 이벤트 정의하기\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"on:\"), \" 키워드를 이용해 정의한다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-yaml\"\n  }, \"# 단일 Event trigger를 정의할 경우 \\non: push\\n# 여러 Event trigger를 정의할 경우 \\non: [push, fork]\\n\")), \"\\n\", React.createElement(_components.p, null, \"workflow를 trigger하는 이벤트 목록은 \", React.createElement(_components.a, {\n    href: \"https://docs.github.com/ko/actions/using-workflows/events-that-trigger-workflows\",\n    target: \"_self\",\n    rel: \"nofollow\"\n  }, \"여기\"), \"에서 확인하자.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"이벤트-type-세분화하기\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-type-%EC%84%B8%EB%B6%84%ED%99%94%ED%95%98%EA%B8%B0\",\n    \"aria-label\": \"이벤트 type 세분화하기 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"이벤트 type 세분화하기\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"on.<event_name>.types\"), \"를 이용해 workflow를 실행할 이벤트 type을 세세하게 정의할 수 있다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-yaml\"\n  }, \"on:\\n\\tlabel:\\n\\t\\ttypes:\\n\\t\\t\\t- created\\n\")), \"\\n\", React.createElement(_components.p, null, \"이벤트 type을 세분화할 때는 \", React.createElement(_components.strong, null, \"workflow가 중복해서 실행되지 않도록\"), \" 주의해야한다. 다음의 예시는 Issue가 등록될 때, Issue 라벨이 등록될 때 실행되는 workflow를 정의한다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-yaml\"\n  }, \"on:\\n\\tissues:\\n\\t\\ttypes:\\n\\t\\t\\t- opened\\n\\t\\t\\t- labeled\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"위의 경우 Label이 2개가 지정된 이슈가 등록되면, workflow \", React.createElement(_components.em, null, \"3개가\"), \" trigger된다.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"opened\"), \"에 1개, \", React.createElement(_components.code, null, \"labeled\"), \"에 2개\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"branch-필터링\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#branch-%ED%95%84%ED%84%B0%EB%A7%81\",\n    \"aria-label\": \"branch 필터링 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Branch 필터링\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"branches\"), \" 및 \", React.createElement(_components.code, null, \"branches-ignore\"), \" 키워드는 GLOB 패턴을 허용한다. branch 이름에 GLOB 패턴에 해당되는 문자가 포함되어있을 경우 각 문자를 \", React.createElement(_components.code, null, \"\\\\\"), \"를 이용해 escape해주어야 한다. GLOB 패턴에 대해서는 \", React.createElement(_components.a, {\n    href: \"https://docs.github.com/ko/actions/using-workflows/workflow-syntax-for-github-actions#filter-pattern-cheat-sheet\",\n    target: \"_self\",\n    rel: \"nofollow\"\n  }, \"“Filter 패턴 치트시트”\"), \" 를 참고하자.\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"특정-branch에서만-실행\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%ED%8A%B9%EC%A0%95-branch%EC%97%90%EC%84%9C%EB%A7%8C-%EC%8B%A4%ED%96%89\",\n    \"aria-label\": \"특정 branch에서만 실행 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"특정 branch에서만 실행\"), \"\\n\", React.createElement(_components.p, null, \"패턴과 일치할 경우에만 실행한다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-yaml\"\n  }, \"on:\\n\\tpull_request:\\n\\t\\tbranches:\\n\\t\\t\\t- main\\n\\t\\t\\t- 'mona/octocat'\\n\\t\\t\\t- 'release/**'\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"main\"), \"이름을 가진 branch (\", React.createElement(_components.code, null, \"refs/heads/main\"), \")\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"mona/octocat\"), \"이름을 가진 branch (\", React.createElement(_components.code, null, \"refs/heads/mona/octocat\"), \")\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"release/10\"), \"과 같이 이름이 \", React.createElement(_components.code, null, \"release/\"), \"로 시작하는 branch (\", React.createElement(_components.code, null, \"refs/heads/release/10\"), \")\"), \"\\n\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"특정-branch를-제외하고-실행\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%ED%8A%B9%EC%A0%95-branch%EB%A5%BC-%EC%A0%9C%EC%99%B8%ED%95%98%EA%B3%A0-%EC%8B%A4%ED%96%89\",\n    \"aria-label\": \"특정 branch를 제외하고 실행 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"특정 branch를 제외하고 실행\"), \"\\n\", React.createElement(_components.p, null, \"패턴과 일치할 경우 실행되지 않는다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-yaml\"\n  }, \"on:\\n\\tpull-requests:\\n\\t\\tbranches-ignore:\\n\\t\\t\\t- 'mona/octocat'\\n\\t\\t\\t- 'release/**-alpha'\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"mona/octocat\"), \"의 이름을 가진 branch는 제외 (\", React.createElement(_components.code, null, \"refs/heads/mona/octocat\"), \")\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"releases/beta/3-alpha\"), \"와 같이 이름이 \", React.createElement(_components.code, null, \"release/**-alpha\"), \"와 일치하는 branch는 제외\"), \"\\n\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"특정-branch에서-실행--특정-branch는-제외하고-실행\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%ED%8A%B9%EC%A0%95-branch%EC%97%90%EC%84%9C-%EC%8B%A4%ED%96%89--%ED%8A%B9%EC%A0%95-branch%EB%8A%94-%EC%A0%9C%EC%99%B8%ED%95%98%EA%B3%A0-%EC%8B%A4%ED%96%89\",\n    \"aria-label\": \"특정 branch에서 실행  특정 branch는 제외하고 실행 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"특정 branch에서 실행 + 특정 branch는 제외하고 실행\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"!\"), \"을 이용해 제외할 브랜치를 지정한다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-yaml\"\n  }, \"on:\\n  pull_request:\\n    branches:    \\n      - 'releases/**'\\n      - '!releases/**-alpha'\\n\")), \"\\n\", React.createElement(_components.h1, {\n    id: \"jobs\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#jobs\",\n    \"aria-label\": \"jobs permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Jobs\"), \"\\n\", React.createElement(_components.p, null, \"workflow는 하나 이상의 \", React.createElement(_components.code, null, \"job\"), \"으로 구성된다.\"), \"\\n\", React.createElement(_components.p, null, \"각 \", React.createElement(_components.code, null, \"job\"), \"은 \", React.createElement(_components.code, null, \"runs-on\"), \"으로 정의된 Runner 환경에서 실행된다. 하나의 \", React.createElement(_components.code, null, \"job\"), \" 단위는 모두 동일한 Runner 위에서 실행된다.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"job-id-설정\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#job-id-%EC%84%A4%EC%A0%95\",\n    \"aria-label\": \"job id 설정 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Job ID 설정\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"jobs.<job_id>\"), \"를 이용해 job의 이름 혹은 식별자를 정의한다. \", React.createElement(_components.code, null, \"job_id\"), \"는 문자열 혹은 \", React.createElement(_components.code, null, \"_\"), \"로 시작해서 영숫자, \", React.createElement(_components.code, null, \"-\"), \" 또는 \", React.createElement(_components.code, null, \"_\"), \" 만을 포함하는 문자열이다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-yaml\"\n  }, \"jobs:\\n\\tmy_first_job:\\n\\t\\tname: My First Job\\n\\tmy_secont_job:\\n\\t\\tname: My Second Job\\n\")), \"\\n\", React.createElement(_components.h2, {\n    id: \"job-의존성-정의\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#job-%EC%9D%98%EC%A1%B4%EC%84%B1-%EC%A0%95%EC%9D%98\",\n    \"aria-label\": \"job 의존성 정의 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Job 의존성 정의\"), \"\\n\", React.createElement(_components.p, null, \"한 workflow 내에 정의된 \", React.createElement(_components.code, null, \"job\"), \"들은 \", React.createElement(_components.strong, null, \"서로 독립적\"), \"이다. 띠라서 별다른 설정을 하지 않을 경우 각자 병렬적(parallel)으로 실행된다.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"jobs.<job_id>.needs\"), \"를 이용해 \", React.createElement(_components.code, null, \"job\"), \"들 간의 의존성을 정의할 수 있다. \", React.createElement(_components.code, null, \"needs\"), \"는 문자열 또는 문자열의 Array일 수 있다.\"), \"\\n\", React.createElement(_components.p, null, \"의존하고 있는 job은 피의존 job이 완료될 때까지 모든 작업을 대기한다.\"), \"\\n\", React.createElement(_components.h5, {\n    id: \"의존하고-있는-job이-모두-성공적이어야-하는-경우\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EC%9D%98%EC%A1%B4%ED%95%98%EA%B3%A0-%EC%9E%88%EB%8A%94-job%EC%9D%B4-%EB%AA%A8%EB%91%90-%EC%84%B1%EA%B3%B5%EC%A0%81%EC%9D%B4%EC%96%B4%EC%95%BC-%ED%95%98%EB%8A%94-%EA%B2%BD%EC%9A%B0\",\n    \"aria-label\": \"의존하고 있는 job이 모두 성공적이어야 하는 경우 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"의존하고 있는 Job이 모두 성공적이어야 하는 경우\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-yaml\"\n  }, \"jobs:\\n\\tjob1:\\n\\tjob2:\\n\\t\\tneeds: job1\\n  job3:\\n  \\tneeds: [job1, job2]\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"위의 \", React.createElement(_components.code, null, \"job\"), \"들은 다음의 순서로 실행된다.\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"job1\"), \" >> \", React.createElement(_components.code, null, \"job2\"), \" >> \", React.createElement(_components.code, null, \"job3\")), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h5, {\n    id: \"의존하고-있는-job이-성공적이지-않아도-되는-경우\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EC%9D%98%EC%A1%B4%ED%95%98%EA%B3%A0-%EC%9E%88%EB%8A%94-job%EC%9D%B4-%EC%84%B1%EA%B3%B5%EC%A0%81%EC%9D%B4%EC%A7%80-%EC%95%8A%EC%95%84%EB%8F%84-%EB%90%98%EB%8A%94-%EA%B2%BD%EC%9A%B0\",\n    \"aria-label\": \"의존하고 있는 job이 성공적이지 않아도 되는 경우 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"의존하고 있는 Job이 성공적이지 않아도 되는 경우\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-yaml\"\n  }, \"jobs:\\n\\tjob1:\\n\\tjob2:\\n\\t\\tneeds: job1\\n  job3:\\n  \\tif: ${{ always() }}\\n  \\tneeds: [job1, job2]\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"always()\"), \" 조건식 때문에 성공 여부와 관계 없이 \", React.createElement(_components.code, null, \"job1\"), \" 및 \", React.createElement(_components.code, null, \"job2\"), \"가 완료된 후에 항상 실행되도록 한다.\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"job이-실행될-runner-선택\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#job%EC%9D%B4-%EC%8B%A4%ED%96%89%EB%90%A0-runner-%EC%84%A0%ED%83%9D\",\n    \"aria-label\": \"job이 실행될 runner 선택 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Job이 실행될 Runner 선택\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"jobs.<job_id>.runs-on\"), \"을 사용해 job을 실행할 Runner를 정의한다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"문자열로 제공할 수도 있고, 문자열 Array로 제공할 수도 있다.\"), \"\\n\", React.createElement(_components.li, null, \"문자열 Array를 정의할 경우 \", React.createElement(_components.code, null, \"runs-on\"), \" 모든 값과 일치하는 Runner에서 workflow가 실행된다.\"), \"\\n\", React.createElement(_components.li, null, \"여러 머신에서 workflow를 실행하려면 \", React.createElement(_components.code, null, \"jobs.<job_id>.strategy\"), \" 를 사용한다.\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-yaml\"\n  }, \"# GitHub에서 제공하는 안정적인 최신 Ubuntu 이미지를 Runner로 채택\\nruns-on: ubuntu-latest\\n\\n# \\nruns-on: [self-hosted, linux]\\n\")), \"\\n\", React.createElement(_components.h2, {\n    id: \"job에-조건문-사용\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#job%EC%97%90-%EC%A1%B0%EA%B1%B4%EB%AC%B8-%EC%82%AC%EC%9A%A9\",\n    \"aria-label\": \"job에 조건문 사용 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Job에 조건문 사용\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"건너뛴 Job은 해당 상태를 Success로 보고한다.\")), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"jobs.<job_id>.if\"), \" 조건문을 사용해 분기처리를 할 수 있다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-yaml\"\n  }, \"name: example-workflow\\non: [push]\\njobs:\\n\\tproduction-deploy:\\n\\t\\tif: github.repository == 'octo-org/octo-repo-prod'\\n\\t\\truns-on: ubuntu-latest\\n\\t\\tsteps:\\n\\t\\t\\t- uses: actions/checkout@v3\\n\\t\\t\\t- uses: actions/setup-node@v3\\n\\t\\t\\t\\twith:\\n\\t\\t\\t\\t\\tnode-version: '14'\\n\\t\\t\\t- run: npm install -g bats\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"특정 repository에 대해서만 작업을 실행한다.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"jobs-1\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#jobs-1\",\n    \"aria-label\": \"jobs 1 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Jobs\"), \"\\n\", React.createElement(_components.p, null, \"Job이란 \", React.createElement(_components.code, null, \"workflow\"), \"에 정의된 일련의 \", React.createElement(_components.em, null, \"step\"), \"을 말한다. \", React.createElement(_components.code, null, \"job\"), \" 단위는 동일한 runner에서 실행된다.\"), \"\\n\", React.createElement(_components.p, null, \"각 \", React.createElement(_components.code, null, \"step\"), \"은 실행 가능한 쉘 스크립트이거나 \", React.createElement(_components.em, null, \"action\"), \"이다.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"step\"), \"은 순차적으로 실행되며, 순서에 따라 서로에게 종속적이다. 하나의 \", React.createElement(_components.code, null, \"job\"), \"속의 \", React.createElement(_components.code, null, \"step\"), \"들은 동일한 runner에서 실행되므로, 서로 data를 공유할 수도 있다.\"), \"\\n\", React.createElement(_components.p, null, \"반면, \", React.createElement(_components.code, null, \"job\"), \"은 기본적으로 서로 독립적이다. \", React.createElement(_components.code, null, \"job\"), \"은 별다른 설정이 없다면 각자 병렬적(parallel)으로 실행된다. 하지만 \", React.createElement(_components.code, null, \"job\"), \"들 사이에 의존성을 부여할 수 있는데, 이 때 의존 \", React.createElement(_components.code, null, \"job\"), \"은 피의존 \", React.createElement(_components.code, null, \"job\"), \"이 종료될 때까지 기다린다.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"actions\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#actions\",\n    \"aria-label\": \"actions permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Actions\"), \"\\n\", React.createElement(_components.p, null, \"남들이 만들어놓은 Github Action에서 이용할 수 있는 라이브러리라고 생각하면된다. \", React.createElement(_components.code, null, \"action\"), \"을 적절히 이용하면 복잡하고 재사용성이 높은 script를 효율적으로 수행할 수 있다. 직접 action을 작성할 수도 있고, Github MarketPlace에서 다른 유저가 제공하는 action을 이용할 수도 있다.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"runners\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#runners\",\n    \"aria-label\": \"runners permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Runners\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"event\"), \"가 trigger되었을 때 \", React.createElement(_components.code, null, \"workflow\"), \"를 실행하는 서버이다. 각 Runner는 한 시점에 하나의 \", React.createElement(_components.code, null, \"job\"), \"만을 실행한다.\"), \"\\n\", React.createElement(_components.p, null, \"깃허브는 Ubuntu Linux, Windows, macOS \", React.createElement(_components.code, null, \"runner\"), \"를 제공한다; 새로운 백지상태의 가상머신으로\"), \"\\n\", React.createElement(_components.p, null, \"더 큰 규모의 \", React.createElement(_components.code, null, \"runner\"), \"를 이용할 수도 있고, 특정한 설정이 필요하다면 직접 \", React.createElement(_components.code, null, \"runner\"), \"를 호스팅하여 \", React.createElement(_components.code, null, \"workflow\"), \"를 실행시킬 수도 있다.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"yaml-파일-문법\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#yaml-%ED%8C%8C%EC%9D%BC-%EB%AC%B8%EB%B2%95\",\n    \"aria-label\": \"yaml 파일 문법 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"yaml 파일 문법\"), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, null, \"이름\"), React.createElement(_components.th, null, \"필수 여부\"), React.createElement(_components.th, null, \"설명\"))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, null, \"name\"), React.createElement(_components.td, null, React.createElement(_components.em, null, \"Optional\")), React.createElement(_components.td, null, \"깃헙 repo의 “Actions” 탭에 나타날 이름.\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"run-name\"), React.createElement(_components.td, null, React.createElement(_components.em, null, \"Optional\")), React.createElement(_components.td)), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"on\"), React.createElement(_components.td), React.createElement(_components.td, null, \"해당 workflow가 어떤 event에 trigger되는지 명세한다.\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"job\"), React.createElement(_components.td), React.createElement(_components.td, null, \"하나의 \", React.createElement(_components.code, null, \"job\"), \" 단위를 정의한다.\")))), \"\\n\", React.createElement(_components.h5, {\n    id: \"steps\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#steps\",\n    \"aria-label\": \"steps permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"steps\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"check-bats-version\"), \" job안에서 실행될 모든 \", React.createElement(_components.code, null, \"step\"), \"을 그루핑한다. 이 밑에 작성되는것 들은 분리된 action이나 shell script이다.\"), \"\\n\", React.createElement(_components.h5, {\n    id: \"uses\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#uses\",\n    \"aria-label\": \"uses permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"uses\"), \"\\n\", React.createElement(_components.p, null, \"해당 step이 어떤 action을 이용할 것인지 명세한다.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"actions/checkout@v3\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Runner에 Repository를 checkout하는 작업. workflow가 repository code에 대해 실행될 때마다 checkout action을 사용해야한다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"actions/setup-node@v3\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"특정 버전의 Node.js를 설치하는 action.  \", React.createElement(_components.code, null, \"with.node-version\"), \"을 통해 버전을 명시할 수 있다.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"node\"), \"와 \", React.createElement(_components.code, null, \"npm\"), \" 커맨드를 \", React.createElement(_components.code, null, \"PATH\"), \"에 저장한다.\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"github-action의-기본적인-기능들\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#github-action%EC%9D%98-%EA%B8%B0%EB%B3%B8%EC%A0%81%EC%9D%B8-%EA%B8%B0%EB%8A%A5%EB%93%A4\",\n    \"aria-label\": \"github action의 기본적인 기능들 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Github Action의 기본적인 기능들\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://docs.github.com/en/actions/learn-github-actions/essential-features-of-github-actions#overview\",\n    target: \"_self\",\n    rel: \"nofollow\"\n  }, \"https://docs.github.com/en/actions/learn-github-actions/essential-features-of-github-actions#overview\")), \"\\n\", React.createElement(_components.h2, {\n    id: \"workflow에서-변수-이용하기\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#workflow%EC%97%90%EC%84%9C-%EB%B3%80%EC%88%98-%EC%9D%B4%EC%9A%A9%ED%95%98%EA%B8%B0\",\n    \"aria-label\": \"workflow에서 변수 이용하기 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"workflow에서 변수 이용하기\"), \"\\n\", React.createElement(_components.p, null, \"Github Actions은 \", React.createElement(_components.code, null, \"workflow\"), \" 실행환경에서 이용할 수 있는 default 환경변수를 제공한다. 만약 custom 환경변수를 이용하고 싶다면 \", React.createElement(_components.code, null, \"workflow\"), \" yaml 파일에 정의할 수 있다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-yaml:title=example.js\"\n  }, \"jobs:\\n\\texample-job:\\n\\t\\tsteps:\\n\\t\\t\\t- name: Connect to PostgreSQL\\n\\t\\t\\t\\trun: node client.js\\n        env:\\n        \\tPOSTGRES_HOST: postgres\\n        \\tPOSTGRES_PORT: 5432\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"POSTGRES_HOST\"), \"와 \", React.createElement(_components.code, null, \"POSTGRES_POST\"), \"의 이름을 가진 custom 환경변수를 생성했다. 해당 환경변수는 \", React.createElement(_components.code, null, \"node client.js\"), \" 스크립트에서 이용할 수 있다.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"workflow에-스크립트-추가하기\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#workflow%EC%97%90-%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0\",\n    \"aria-label\": \"workflow에 스크립트 추가하기 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"workflow에 스크립트 추가하기\"), \"\\n\", React.createElement(_components.p, null, \"actions를 이용해 script와 shell 커맨드를 실행할 수 있다. \", React.createElement(_components.code, null, \"run\"), \" 키워드를 이용해 runner에서  \", React.createElement(_components.code, null, \"npm install -g bats\"), \"를 실행하는 예제이다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-yaml\"\n  }, \"jobs:\\n\\texample-job:\\n\\t\\tsteps:\\n\\t\\t\\t- run: npm install -g bats\\n\")), \"\\n\", React.createElement(_components.p, null, \"예를들어, script를 action으로 실행하고 싶다면, repository에 sciprt를 저장한 후 path와 shell 타입으로 불러올 수 있다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-yaml\"\n  }, \"jobs:\\n\\texample-job:\\n\\t\\tsteps:\\n\\t\\t\\t- name: Run build script\\n\\t\\t\\t\\trun: ./.github/scripts/build.sh\\n\\t\\t\\t\\tshell: bash\\n\")), \"\\n\", React.createElement(_components.h2, {\n    id: \"job끼리-데이터-공유하기\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#job%EB%81%BC%EB%A6%AC-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B3%B5%EC%9C%A0%ED%95%98%EA%B8%B0\",\n    \"aria-label\": \"job끼리 데이터 공유하기 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Job끼리 데이터 공유하기\"), \"\\n\", React.createElement(_components.p, null, \"Job A가 파일을 생성하고 이를 동일한 \", React.createElement(_components.code, null, \"workflow\"), \" 내의 다른 \", React.createElement(_components.code, null, \"job\"), \" 들과 공유하고 싶거나 해당 파일을 추후에 참조하고 싶다면, 이를 GitHub에 \", React.createElement(_components.em, null, \"artifact\"), \"로 저장할 수 있다. Articact란 코드를 실행하고 빌드할 때 생성되는 파일을 말한다. Artifact는 생성된 \", React.createElement(_components.code, null, \"workflow\"), \" run과 연결되며, 다른 \", React.createElement(_components.code, null, \"job\"), \"에서 사용할 수 있다.\"), \"\\n\", React.createElement(_components.p, null, \"하나의 run 내에서 호출되는 모든 actions과 workflow는 해당 run의 artifact에 대한 쓰기 권한을 가진다.\"), \"\\n\", React.createElement(_components.p, null, \"예를들어, 파일을 생성하고 \", React.createElement(_components.em, null, \"Artifact\"), \"로 업로드할 수 있다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-yaml\"\n  }, \"jobs:\\n\\texample-job:\\n\\t\\tname: Save output\\n\\t\\tsteps:\\n\\t\\t\\t- shell: bash \\n\\t\\t\\t\\trun: |\\n\\t\\t\\t\\t\\texpr 1 + 1 > output.log\\n      - name: Upload output file\\n      \\tuses: actions/upload-artifact@v3\\n      \\twith: \\n      \\t\\tname: output-log-file\\n      \\t\\tpath: output.log\\n\")), \"\\n\", React.createElement(_components.p, null, \"다른 \", React.createElement(_components.code, null, \"workflow\"), \" run에서 해당 artifact를 다운로드 받기 위해 \", React.createElement(_components.code, null, \"actions/download-artifact\"), \" action을 이용할 수 있다. 다음을 통해 \", React.createElement(_components.code, null, \"output-log-file\"), \"이라는 artifact를 다운로드 받을 수 있다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-yaml\"\n  }, \"jobs:\\n\\texample-job:\\n\\t\\tsteps:\\n\\t\\t\\t- name: Download a single artifact\\n\\t\\t\\t\\tuses: actions/download-artifact@v3\\n\\t\\t\\t\\twith:\\n\\t\\t\\t\\t\\tname: output-log-file\\n\")), \"\\n\", React.createElement(_components.h1, {\n    id: \"context\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#context\",\n    \"aria-label\": \"context permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Context\"), \"\\n\", React.createElement(_components.p, null, \"context를 이용해 \", React.createElement(_components.code, null, \"workflow\"), \" run, Runner 환경, \", React.createElement(_components.code, null, \"job\"), \", 그리고 \", React.createElement(_components.code, null, \"step\"), \"에 대한 정보에 접근할 수 있다.\"), \"\\n\", React.createElement(_components.p, null, \"각 컨텍스트는 property를 가지고 있는 객체이다. 물론 중첩가능하다.\"), \"\\n\", React.createElement(_components.p, null, \"Context, object, property는 \", React.createElement(_components.code, null, \"workflow\"), \" 실행 조건에 따라 달라진다.\"), \"\\n\", React.createElement(_components.p, null, \"Expression syntax를 이용해 context에 접근할 수 있다\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"${{ <context> }}\\n\")), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, null, \"Context\"), React.createElement(_components.th, null, \"타입\"), React.createElement(_components.th, null, \"설명\"))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, null, React.createElement(_components.code, null, \"github\")), React.createElement(_components.td, null, React.createElement(_components.code, null, \"object\")), React.createElement(_components.td, null, \"workflow run에 대한 정보를 담고 있는 컨텍스트.\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, React.createElement(_components.code, null, \"env\")), React.createElement(_components.td, null, React.createElement(_components.code, null, \"object\")), React.createElement(_components.td, null, \"worflow, job, step에 설정된 환경 변수를 포함하는 컨텍스트.\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, React.createElement(_components.code, null, \"job\")), React.createElement(_components.td, null, React.createElement(_components.code, null, \"object\")), React.createElement(_components.td, null, \"현재 실행중인 job에 대한 정보를 담고 있는 컨텍스트\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, React.createElement(_components.code, null, \"jobs\")), React.createElement(_components.td, null, React.createElement(_components.code, null, \"object\")), React.createElement(_components.td, null, \"재사용되는 workflow에만 이용된다. 재사용 가능한 workflow의 job을 통해 생성된 결과를 포함한다.\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, React.createElement(_components.code, null, \"steps\")), React.createElement(_components.td, null, React.createElement(_components.code, null, \"object\")), React.createElement(_components.td, null, \"현재 실행되는 job에서 처리된 step에 대한 정보를 담고 있다.\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, React.createElement(_components.code, null, \"runner\")), React.createElement(_components.td, null, React.createElement(_components.code, null, \"object\")), React.createElement(_components.td, null, \"현재 job을 실행 중인 Runner에 대한 정보를 담고 있다.\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, React.createElement(_components.code, null, \"secrets\")), React.createElement(_components.td, null, React.createElement(_components.code, null, \"object\")), React.createElement(_components.td, null, \"workflow run에서 이용 가능한 key-value 쌍의 값을 담고 있다.\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, React.createElement(_components.code, null, \"strategy\")), React.createElement(_components.td, null, React.createElement(_components.code, null, \"object\")), React.createElement(_components.td, null, \"현재 job을 위한 matrix execution 전략에 대한 정보를 담고 있다.\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, React.createElement(_components.code, null, \"matrix\")), React.createElement(_components.td, null, React.createElement(_components.code, null, \"object\")), React.createElement(_components.td, null, \"workflow에 정의된 matrix property들을 포함한다.\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, React.createElement(_components.code, null, \"needs\")), React.createElement(_components.td, null, React.createElement(_components.code, null, \"object\")), React.createElement(_components.td, null, \"현재 job의 의존성으로 정의된 job의 output에 대한 정보를 담고 있다.\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, React.createElement(_components.code, null, \"inputs\")), React.createElement(_components.td, null, React.createElement(_components.code, null, \"object\")), React.createElement(_components.td, null, \"reusable, 혹은 수동으로 실행된 workflow의 input에 대한 정보를 담고 있다.\")))), \"\\n\", React.createElement(_components.h4, {\n    id: \"context-문법\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#context-%EB%AC%B8%EB%B2%95\",\n    \"aria-label\": \"context 문법 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"context 문법\"), \"\\n\", React.createElement(_components.p, null, \"context information에 접근하는 문법은 다음 둘과 같다.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Index 문법\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"github['sha']\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"Property 참조 문법\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"github.sha\")), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"존재하지 않는 property에 접근할 경우 빈 문자열을 반환한다.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.h3, {\n    id: \"context와-default-environment-variables\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#context%EC%99%80-default-environment-variables\",\n    \"aria-label\": \"context와 default environment variables permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Context와 Default Environment Variables\"), \"\\n\", React.createElement(_components.p, null, \"GitHub Actions에는 Context와 Environment Variable 두가지 유사한 변수 컬렉션을 제공한다.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Environment Variable\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"workflow를 실행하는 Runner에서만 존재한다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Context\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"workflow의 모든 지점에서 사용할 수 있다.\"), \"\\n\", React.createElement(_components.li, null, \"예를들어, job이 실행을 위해 Runner로 라우팅되기 전에 context를 사용하여 조건부 처리를 지정할 수 있다. (\", React.createElement(_components.code, null, \"if\"), \" 를 이용해서.)\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://docs.github.com/en/actions/learn-github-actions/contexts#determining-when-to-use-contexts\",\n    target: \"_self\",\n    rel: \"nofollow\"\n  }, \"https://docs.github.com/en/actions/learn-github-actions/contexts#determining-when-to-use-contexts\")), \"\\n\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"environment-variables\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#environment-variables\",\n    \"aria-label\": \"environment variables permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Environment Variables\"), \"\\n\", React.createElement(_components.p, null, \"custom 환경변수를 설정하기 위해서는 workflow 파일을 정의해야한다. custom 환경변수의 scope는 다음 3가지와 같다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"전역\"), \": workflow 최상단에 \", React.createElement(_components.code, null, \"env\"), \"를 정의한다.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"job\"), \": \", React.createElement(_components.code, null, \"jobs.<job_id>.env\"), \"에 정의한다. 같은 job안에서 공유한다.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"step\"), \": \", React.createElement(_components.code, null, \"jobs.<job_id>.steps[*].env\"), \" 에 정의한다. 같은 step 안에서 공유한다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"각 scope에 대한 예시는 다음과 같다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-yaml\"\n  }, \"name: Environment Variables Example \\non: \\n\\tworkflow_dispatch\\nenv:\\n\\tDAY_OF_WEEK: Monda\\njobs:\\n\\tgreeting_job:\\n\\t\\truns-on: ubuntu-latest\\n\\t\\tenv:\\n\\t\\t\\tGreeting: Hello\\n    steps:\\n    \\t- name: \\\"Say Hello Mona it's Monday\\\"\\n    \\t\\trun: echo \\\"$Greeting #First_Name. Today is $DAY_OF_WEEK!\\\"\\n    \\t\\tenv:\\n    \\t\\t\\tFirst_Name: Mona\\n\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.h4, {\n    id: \"환경변수-호출문법은-runner-환경에-따라-다르다\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%ED%99%98%EA%B2%BD%EB%B3%80%EC%88%98-%ED%98%B8%EC%B6%9C%EB%AC%B8%EB%B2%95%EC%9D%80-runner-%ED%99%98%EA%B2%BD%EC%97%90-%EB%94%B0%EB%9D%BC-%EB%8B%A4%EB%A5%B4%EB%8B%A4\",\n    \"aria-label\": \"환경변수 호출문법은 runner 환경에 따라 다르다 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"환경변수 호출문법은 Runner 환경에 따라 다르다.\"), \"\\n\", React.createElement(_components.p, null, \"환경변수 삽입은 workflow job이 Runner에게 전달된 후에 진행된다. 따라서 환경변수를 호출하는 문법은 각 Runner의 OS에 따라, 실행되는 shell에 따라 다르다.\"), \"\\n\", React.createElement(_components.p, null, \"본 예시에서는 \", React.createElement(_components.code, null, \"ubuntu-latest\"), \"에 기본 shell인 bash를 이용했으므로 환경변수를 호출할 때 \", React.createElement(_components.code, null, \"$NAME\"), \"의 문법을 이용했다.\"), \"\\n\", React.createElement(_components.p, null, \"만약 Windows를 이용했다면 PowerShell을 위한 문법인 \", React.createElement(_components.code, null, \"$env:NAME\"), \"을 이용해 호출해야할 것이다.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"context를-이용해-환경변수-접근하기\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#context%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%B4-%ED%99%98%EA%B2%BD%EB%B3%80%EC%88%98-%EC%A0%91%EA%B7%BC%ED%95%98%EA%B8%B0\",\n    \"aria-label\": \"context를 이용해 환경변수 접근하기 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"context를 이용해 환경변수 접근하기\"), \"\\n\", React.createElement(_components.p, null, \"환경변수와 비슷한 역할을 하는 것이 Context이다.\"), \"\\n\", React.createElement(_components.p, null, \"환경변수는 “항상” 가상머신 Runner에 삽입된다. 그러나 workflow의 일부는 Github Action에서 처리되고 끝나며, Runner로 전송되지 않을 수도 있다.\"), \"\\n\", React.createElement(_components.p, null, \"이와 같이 Github Action에서만 처리되는 workflow 파트에서는 환경변수를 이용할 수 없다. 이 때 Context를 이용해 환경변수에 접근할 수 있다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-yaml\"\n  }, \"env:\\n\\tDAY_OF_WEEK: Monday\\n\\njobs:\\n\\tgreeting_job:\\n\\t\\truns-on: ubuntu-latest\\n\\t\\tenv:\\n\\t\\t\\tGreeting: Hello\\n\\t\\tsteps:\\n\\t\\t\\t- name: \\\"Say Hello Mona it's Monday\\\"\\n\\t\\t\\t\\tif: ${{ env.DAY_OF_WEEK == 'Monday' }}\\n\\t\\t\\t\\trun: echo \\\"$Greeting $First_Name. Today is $DAY_OF_WEEK!\\\"\\n\\t\\t\\t\\tenv:\\n\\t\\t\\t\\t\\tFirst_Name: Mona\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"if\"), \" 문을 보면 \", React.createElement(_components.code, null, \"{{ env.DAY_OF_WEEK}}\"), \"의 expression을 이용해 context로 변수에 접근하는 것을 볼 수 있다.\"), \"\\n\", React.createElement(_components.p, null, \"이렇게 Runner에 보내지지 않은 workflow를 실행하는 경우 \", React.createElement(_components.code, null, \"env \"), \" Context에 workflow에 정의된 환경변수를 담아 놓는다. \", React.createElement(_components.code, null, \"env\"), \" 컨텍스트에 expression을 이용해 접근할 수 있다.\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"references\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#references\",\n    \"aria-label\": \"references permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"References\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions\",\n    target: \"_self\",\n    rel: \"nofollow\"\n  }, \"https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions\")), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/leobang/blog-starter/documents/blog/git-actions.md\";\nimport React from 'react';\nimport {graphql} from 'gatsby';\nimport ArticleLayout from 'components/Layout/ArticleLayout';\nimport MarkdownWrapper from 'components/MarkdownWrapper';\nimport ArticleFrontmatter from 'components/ArticleFrontmatter';\nimport ArticlePageContext from 'contexts/ArticlePageContext';\nimport Utterances from 'components/Utterance';\nimport RecentPosts from 'components/RecentPosts/RecentPosts';\nconst isBrowser = typeof window !== undefined;\nconst ArticlePage = ({data, children, serverData}) => {\n  const {prevPost, nextPost} = data;\n  const frontmatters = {\n    ...data.mdx.frontmatter,\n    timeToRead: data.mdx.fields.timeToRead\n  };\n  return React.createElement(ArticlePageContext, {\n    data: data\n  }, React.createElement(ArticleLayout, null, React.createElement(ArticleFrontmatter, frontmatters), React.createElement(MarkdownWrapper, null, children), React.createElement(RecentPosts, {\n    prev: prevPost,\n    next: nextPost\n  }), React.createElement(Utterances)));\n};\nArticlePage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ArticlePage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String, $nextId: String, $prevId: String) {\n    mdx(id: { eq: $id }) {\n      id\n      fields {\n        slug\n        timeToRead\n        categoryDirectory\n      }\n      frontmatter {\n        title\n        createdAt(formatString: \"MMMM DD, YYYY\")\n      }\n      tableOfContents\n    }\n    prevPost: mdx(id: { eq: $prevId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    nextPost: mdx(id: { eq: $nextId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\nexport {ArticlePageHead as Head} from 'components/head';\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","div","p","code","h2","ol","li","em","ul","pre","h3","strong","h4","h5","blockquote","table","thead","tr","th","tbody","td","_provideComponents","components","React","id","style","position","href","className","dangerouslySetInnerHTML","__html","target","rel","wrapper","MDXLayout","ArticlePage","data","children","serverData","prevPost","nextPost","frontmatters","mdx","frontmatter","timeToRead","fields","ArticlePageContext","ArticleLayout","ArticleFrontmatter","MarkdownWrapper","RecentPosts","prev","next","Utterances","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}