{"version":3,"file":"component---src-templates-article-page-jsx-content-file-path-home-runner-work-leobang-17-github-io-leobang-17-github-io-documents-algorithm-122-best-time-to-buy-and-sell-stock-ii-md-14f9de035f4287826e4b.js","mappings":"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","sources":["webpack://gatsby-theme-simplex/./documents/Algorithm/122.Best-Time-to-Buy-and-Sell-Stock-II.md","webpack://gatsby-theme-simplex/./src/templates/ArticlePage.jsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    div: \"div\",\n    p: \"p\",\n    code: \"code\",\n    h4: \"h4\",\n    ul: \"ul\",\n    li: \"li\",\n    blockquote: \"blockquote\",\n    ol: \"ol\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, {\n    id: \"문제\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EB%AC%B8%EC%A0%9C\",\n    \"aria-label\": \"문제 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"문제\"), \"\\n\", React.createElement(_components.p, null, \"주식시장에서 주식을 거래하려고 한다. 주식 시장의 일별 가격을 나타내는 정수 배열 \", React.createElement(_components.code, null, \"prices\"), \"가 주어진다. \", React.createElement(_components.code, null, \"prices[i]\"), \"는 \", React.createElement(_components.code, null, \"i\"), \"번째 날의 주식 가격을 나타낸다.\\n거래자는 주식을 언제든지 사고 팔 수 있지만 하루에 2개 이상의 주식을 보유할 수는 없다. (같은 날에도 구매와 판매를 여러 번 반복할 수 있음.)\\n주어진 주식시장동안 낼 수 있는 최대의 차익을 구하라.\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"constraints\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#constraints\",\n    \"aria-label\": \"constraints permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Constraints\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"1 <= prices.length <= 3 * 10^4\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"0 <= prices[i] <= 104\")), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"approach1-two-pointer\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#approach1-two-pointer\",\n    \"aria-label\": \"approach1 two pointer permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Approach1: Two Pointer\"), \"\\n\", React.createElement(_components.p, null, \"이전 문제와 동일하게 two pointer로 접근했다.\\n\", React.createElement(_components.code, null, \"n = 30,000\"), \" 이었으므로 조합이나 이중 for 문으로는 풀 수 없는 문제.\"), \"\\n\", React.createElement(_components.p, null, \"접근법은 다음과 같다.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"left, right 포인터와 구간동안의 최대 차익인 \", React.createElement(_components.code, null, \"maxP\"), \", 수익실현 후 전체 최대 차익인 \", React.createElement(_components.code, null, \"total\"), \"을 저장한다.\"), \"\\n\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"left와 right 포인터로 주식 가격 배열을 순회한다. left는 구매, right는 판매를 뜻한다.\"), \"\\n\", React.createElement(_components.li, null, \"현재 left(구매)보다 더 낮은 가격으로 구매할 수 있다면 수익을 실현한다.\"), \"\\n\", React.createElement(_components.li, null, \"만약 현재 right(판매)가 \", React.createElement(_components.code, null, \"maxP\"), \"의 최대 값을 갱신할 수 없다면 수익을 실현한다.\"), \"\\n\", React.createElement(_components.li, null, \"현재 right (판매)가 \", React.createElement(_components.code, null, \"maxP\"), \"의 최대 값보다 크다면 값을 갱신한다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"사실 2번 조건은 3번 조건 안에 포함된다. left(구매)보다 right가 작다면 항상 최대값을 갱신할 수 없으니까.\\n또한 3번 조건과 4번 조건은 완전히 대립되는 조건이므로 간단하게 다음과 같이 줄일 수 있었다.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"left와 right 포인터로 주식 가격 배열을 순회한다. left는 구매, right는 판매를 뜻한다.\"), \"\\n\", React.createElement(_components.li, null, \"현재 right (판매)가 \", React.createElement(_components.code, null, \"maxP\"), \"의 최대 값보다 크다면 갱신한다.\"), \"\\n\", React.createElement(_components.li, null, \"아닐 경우 수익을 실현한다.\"), \"\\n\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"complexity\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#complexity\",\n    \"aria-label\": \"complexity permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Complexity\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"time complexity: \", React.createElement(_components.code, null, \"O(N)\")), \"\\n\", React.createElement(_components.li, null, \"space complexity: \", React.createElement(_components.code, null, \"O(1)\")), \"\\n\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"code\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#code\",\n    \"aria-label\": \"code permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Code\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"class Solution:\\n    def maxProfit(self, prices: List[int]) -> int:\\n        left, right = 0, 1 \\n        total = 0 # 전체 실현한 수익\\n        maxP = 0 # 구간 최대 수익 \\n        \\n        # O(N) = 30,000\\n        while right < len(prices):\\n            profit = prices[right] - prices[left]\\n            if profit > maxP:\\n                maxP = profit\\n            else:\\n                # 수익실현\\n                left = right\\n                total += maxP\\n                maxP = 0\\n\\n            right += 1\\n\\n        return total + maxP\\n\")), \"\\n\", React.createElement(_components.h2, {\n    id: \"approach-2-greedy\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#approach-2-greedy\",\n    \"aria-label\": \"approach 2 greedy permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Approach 2: Greedy\"), \"\\n\", React.createElement(_components.p, null, \"121번 문제를 풀고 two pointer로 어렵게 생각했었지만, 사실 훨씬 간단하게 greedy로 해결할 수 있는 문제였다.\"), \"\\n\", React.createElement(_components.p, null, \"정말 단순하게 수익이 나는 모든 순간마다 수익실현을 하면 되는… 그런 그리디 알고리즘.\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"complexity-1\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#complexity-1\",\n    \"aria-label\": \"complexity 1 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Complexity\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"time complexity: \", React.createElement(_components.code, null, \"O(N)\")), \"\\n\", React.createElement(_components.li, null, \"space complexity: \", React.createElement(_components.code, null, \"O(1)\")), \"\\n\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"code-1\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#code-1\",\n    \"aria-label\": \"code 1 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Code\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"class Solution:\\n    def maxProfit(self, prices: List[int]) -> int:\\n        profit = 0 \\n        \\n        for i in range(1, len(prices)):\\n            # 수익 실현이 가능할 경우 매번 수익 실현한다.\\n            profit += max(prices[i]- prices[i - 1], 0)\\n\\n        return profit\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/leobang17.github.io/leobang17.github.io/documents/Algorithm/122.Best-Time-to-Buy-and-Sell-Stock-II.md\";\nimport React from 'react';\nimport {graphql} from 'gatsby';\nimport ArticleLayout from 'components/Layout/ArticleLayout';\nimport MarkdownWrapper from 'components/MarkdownWrapper';\nimport ArticleFrontmatter from 'components/ArticleFrontmatter';\nimport ArticlePageContext from 'contexts/ArticlePageContext';\nimport Utterances from 'components/Utterance';\nimport RecentPosts from 'components/RecentPosts/RecentPosts';\nconst isBrowser = typeof window !== undefined;\nconst ArticlePage = ({data, children, serverData}) => {\n  const {prevPost, nextPost} = data;\n  const frontmatters = {\n    ...data.mdx.frontmatter,\n    timeToRead: data.mdx.fields.timeToRead\n  };\n  return React.createElement(ArticlePageContext, {\n    data: data\n  }, React.createElement(ArticleLayout, null, React.createElement(ArticleFrontmatter, frontmatters), React.createElement(MarkdownWrapper, null, children), React.createElement(RecentPosts, {\n    prev: prevPost,\n    next: nextPost\n  }), React.createElement(Utterances)));\n};\nArticlePage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ArticlePage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String, $nextId: String, $prevId: String) {\n    mdx(id: { eq: $id }) {\n      id\n      fields {\n        slug\n        timeToRead\n        categoryDirectory\n      }\n      frontmatter {\n        title\n        createdAt(formatString: \"MMMM DD, YYYY\")\n      }\n      tableOfContents\n    }\n    prevPost: mdx(id: { eq: $prevId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    nextPost: mdx(id: { eq: $nextId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\nexport {ArticlePageHead as Head} from 'components/head';\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","a","div","p","code","h4","ul","li","blockquote","ol","pre","_provideComponents","components","React","id","style","position","href","className","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","ArticlePage","data","children","serverData","prevPost","nextPost","frontmatters","mdx","frontmatter","timeToRead","fields","ArticlePageContext","ArticleLayout","ArticleFrontmatter","MarkdownWrapper","RecentPosts","prev","next","Utterances","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}