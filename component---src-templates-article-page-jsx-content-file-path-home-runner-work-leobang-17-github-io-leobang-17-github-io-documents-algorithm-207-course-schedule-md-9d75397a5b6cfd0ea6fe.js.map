{"version":3,"file":"component---src-templates-article-page-jsx-content-file-path-home-runner-work-leobang-17-github-io-leobang-17-github-io-documents-algorithm-207-course-schedule-md-9d75397a5b6cfd0ea6fe.js","mappings":"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","sources":["webpack://gatsby-theme-simplex/./documents/Algorithm/207.Course-Schedule.md","webpack://gatsby-theme-simplex/./src/templates/ArticlePage.jsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    div: \"div\",\n    p: \"p\",\n    code: \"code\",\n    h4: \"h4\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\",\n    blockquote: \"blockquote\",\n    ol: \"ol\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, {\n    id: \"문제\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EB%AC%B8%EC%A0%9C\",\n    \"aria-label\": \"문제 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"문제\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://leetcode.com/problems/course-schedule/?envType=study-plan-v2&envId=top-interview-150\",\n    target: \"_self\",\n    rel: \"nofollow\"\n  }, \"207. Course Schedule\")), \"\\n\", React.createElement(_components.p, null, \"수강해야하는 과목들을 나타내는 정수 \", React.createElement(_components.code, null, \"numCourses\"), \"가 주어진다. \", React.createElement(_components.code, null, \"0\"), \" ~ \", React.createElement(_components.code, null, \"numCourses - 1\"), \"까지가 수강해아햐는 과목이다. \", React.createElement(_components.code, null, \"[Ai, Bi]\"), \"로 이루어진 배열 \", React.createElement(_components.code, null, \"prerequisites\"), \"은 선수강과목에 대한 정보를 나타낸다.\\n\", React.createElement(_components.code, null, \"[Ai, Bi]\"), \"는 \", React.createElement(_components.code, null, \"Ai\"), \" 과목을 수강하기 위해서는 \", React.createElement(_components.code, null, \"Bi\"), \"를 먼저 수강해야한다는 뜻이다.\"), \"\\n\", React.createElement(_components.p, null, \"모든 과목을 수강할 수 있다면 \", React.createElement(_components.code, null, \"True\"), \"를 반환하고 그렇지 않다면 \", React.createElement(_components.code, null, \"False\"), \"를 반환하라.\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"constraints\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#constraints\",\n    \"aria-label\": \"constraints permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Constraints\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"1 <= numCourses <= 2000\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"0 <= prerequisites.length <= 5000\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"prerequisites[i].length == 2\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"0 <= ai, bi < numCourses\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"All the pairs prerequisites[i] are unique.\")), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"approach---graph-bfs\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#approach---graph-bfs\",\n    \"aria-label\": \"approach   graph bfs permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Approach - Graph: BFS\"), \"\\n\", React.createElement(_components.p, null, \"더 쉽게 풀 수 있는 방법이 있을 것 같은데.. 내 방식대로 구현하느라 귀찮은 구현사항들이 많았다.\"), \"\\n\", React.createElement(_components.p, null, \"각 수강과목들의 선수강 관계와 해당 과목을 수강했다면 다음에 어떤 과목을 수강할 수 있는지에 대한 정보를 담은 graph를 저장한다.\\n수강과목 \", React.createElement(_components.code, null, \"i\"), \"에 대해서 \", React.createElement(_components.code, null, \"graph[i]\"), \" = \", React.createElement(_components.code, null, \"[next, required]\"), \"가 저장되는데 \", React.createElement(_components.code, null, \"next\"), \"는 \", React.createElement(_components.code, null, \"i\"), \" 강의를 수강한 후에 수강할 수 있는 강의들을 담은 배열이고 \", React.createElement(_components.code, null, \"required\"), \"는 \", React.createElement(_components.code, null, \"i\"), \"강의를 듣기 위해서 선수강해야하는 강의들을 담은 배열이다.\"), \"\\n\", React.createElement(_components.p, null, \"그리고 선수강과목이 필요없는 = 언제든지 첫번째로 수강할 수 있는 강의를 \", React.createElement(_components.code, null, \"root\"), \" 스택에 담아준다.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"root\"), \" 스택에서 1개씩 pop하며 강의수강을 시작한다. 강의수강은 그래프 탐색 (BFS)를 따른다.\\n인접노드 (= 다음에 수강할 강의)가 선수강과목을 모두 수강했는지 확인한다. \", React.createElement(_components.code, null, \"visited[required]\"), \"가 모두 True일 경우에만 해당 노드를 queue에 넣고, 아직 선수강과목을 수강하지 않은 상태라면 \", React.createElement(_components.code, null, \"root\"), \" 스택에 있는 언제든 처음 들을 수 있는 강의를 대신 queue에 넣는다.\"), \"\\n\", React.createElement(_components.p, null, \"그리고 마지막으로 \", React.createElement(_components.code, null, \"visited\"), \" 배열을 방문하며 모든 강의가 방문처리되었는지 확인한다.\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"complexity\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#complexity\",\n    \"aria-label\": \"complexity permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Complexity\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"time complexity:\"), \"\\n\", React.createElement(_components.li, null, \"space complexity:\"), \"\\n\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"code\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#code\",\n    \"aria-label\": \"code permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Code\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"from collections import deque\\n\\nclass Solution:\\n    def canFinish(self, numCourses: int, prerequisites: List[List[int]]) -> bool:\\n        graph = [[[],[]] for _ in range(numCourses)]\\n        visited = [False for _ in range(numCourses)]\\n        root = []\\n        for c, r in prerequisites:\\n            graph[r][0].append(c)\\n            graph[c][1].append(r)\\n\\n        # 선수강 과목이 없는 강의들을 root에 저장\\n        for i, v in enumerate(graph):\\n            if len(v[1]) == 0:\\n                root.append(i)\\n\\n        while root:\\n            r = root.pop()\\n            q = deque([r])\\n            visited[r] = True\\n            \\n            while q:\\n                node = q.popleft()\\n                \\n                for adj in graph[node][0]:\\n                    next = adj\\n                    all_solved = True\\n                    # 방문하지 않은 인접 노드 \\n                    if not visited[adj]:\\n                        for k in graph[adj][1]:\\n                            if not visited[k]:\\n                                all_solved = False\\n                        # + 선수강 과목까지 모두 들었다면 해당 인접 노드를 queue에 추가\\n                        # 선수강 과목을 모두 듣지 않았다면 다른 root node를 queue에 추가\\n                        if not all_solved:\\n                            if root:\\n                                next = root.pop()\\n                            else:\\n                                continue\\n                        q.append(next)\\n                        visited[next] = True\\n        \\n        for v in visited:\\n            if not v:\\n                return False\\n        return True\\n\")), \"\\n\", React.createElement(_components.h2, {\n    id: \"approach---graph-topological-sort-위상정렬\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#approach---graph-topological-sort-%EC%9C%84%EC%83%81%EC%A0%95%EB%A0%AC\",\n    \"aria-label\": \"approach   graph topological sort 위상정렬 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Approach - Graph: Topological Sort (위상정렬)\"), \"\\n\", React.createElement(_components.p, null, \"위상정렬 키워드를 확인하고 해당 알고리즘을 배운 후에 다시 풀어봤다.\\n위상정렬이란 방향성이 있는 그래프를 방향성이 어긋나지 않도록 순차대로 방문하도록 하는 정렬방식이다.\"), \"\\n\", React.createElement(_components.p, null, \"생각보다 방법은 간단한데, 그래프 정보와 함깨 각 노드의 \", React.createElement(_components.code, null, \"진입차수(indegree)\"), \" 정보를 저장한다.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"진입차수 (indegree)\\n해당 노드에게로 들어오는 간선 (edge)의 갯수. 이 문제에서는 선수강해야하는 과목으로부터의 edge가 진입차수들이 되겠다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"그리고 진입차수가 0인 노드들을 queue에 담고, 해당 queue가 빌 때까지 다음의 과정을 수행한다.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"queue에서 노드 하나를 뺀 후 해당 노드의 인접노드들에 대해\"), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"인접노드의 indegree 값을 1 뺀다.\"), \"\\n\", React.createElement(_components.li, null, \"인접노드의 indegree 값이 0이 되었을 경우 queue에 넣는다. (root 노드로의 자격이 되므로)\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"해당 문제의 경우에는 cycle이 발생하는 경우를 확인해야하므로 \", React.createElement(_components.code, null, \"visited\"), \" 배열로 방문했는지도 확인해주었다.\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"complexity-1\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#complexity-1\",\n    \"aria-label\": \"complexity 1 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Complexity\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"time complexity:\"), \"\\n\", React.createElement(_components.li, null, \"space complexity:\"), \"\\n\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"code-1\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#code-1\",\n    \"aria-label\": \"code 1 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Code\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"class Solution:\\n    def canFinish(self, numCourses: int, prerequisites: List[List[int]]) -> bool:\\n        graph = [[] for _ in range(numCourses)]\\n        visited = [False for _ in range(numCourses)]\\n        topology = [0 for _ in range(numCourses)]\\n\\n        for a, b in prerequisites:\\n            graph[b].append(a)\\n            topology[a] += 1\\n        \\n        root = deque([])\\n        for i, v in enumerate(topology):\\n            if v == 0:\\n                root.append(i)\\n                visited[i] = True\\n        \\n        while root:\\n            node = root.popleft()\\n            \\n            for adj in graph[node]:\\n                topology[adj] -= 1\\n                if topology[adj] == 0 and not visited[adj]:\\n                    root.append(adj)\\n                    visited[adj] = True\\n        \\n        for v in visited:\\n            if not v:\\n                return False\\n        \\n        return True\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/leobang17.github.io/leobang17.github.io/documents/Algorithm/207.Course-Schedule.md\";\nimport React from 'react';\nimport {graphql} from 'gatsby';\nimport ArticleLayout from 'components/Layout/ArticleLayout';\nimport MarkdownWrapper from 'components/MarkdownWrapper';\nimport ArticleFrontmatter from 'components/ArticleFrontmatter';\nimport ArticlePageContext from 'contexts/ArticlePageContext';\nimport Utterances from 'components/Utterance';\nimport RecentPosts from 'components/RecentPosts/RecentPosts';\nconst isBrowser = typeof window !== undefined;\nconst ArticlePage = ({data, children, serverData}) => {\n  const {prevPost, nextPost} = data;\n  const frontmatters = {\n    ...data.mdx.frontmatter,\n    timeToRead: data.mdx.fields.timeToRead\n  };\n  return React.createElement(ArticlePageContext, {\n    data: data\n  }, React.createElement(ArticleLayout, null, React.createElement(ArticleFrontmatter, frontmatters), React.createElement(MarkdownWrapper, null, children), React.createElement(RecentPosts, {\n    prev: prevPost,\n    next: nextPost\n  }), React.createElement(Utterances)));\n};\nArticlePage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ArticlePage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String, $nextId: String, $prevId: String) {\n    mdx(id: { eq: $id }) {\n      id\n      fields {\n        slug\n        timeToRead\n        categoryDirectory\n      }\n      frontmatter {\n        title\n        createdAt(formatString: \"MMMM DD, YYYY\")\n      }\n      tableOfContents\n    }\n    prevPost: mdx(id: { eq: $prevId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    nextPost: mdx(id: { eq: $nextId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\nexport {ArticlePageHead as Head} from 'components/head';\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","a","div","p","code","h4","ul","li","pre","blockquote","ol","_provideComponents","components","React","id","style","position","href","className","dangerouslySetInnerHTML","__html","target","rel","wrapper","MDXLayout","ArticlePage","data","children","serverData","prevPost","nextPost","frontmatters","mdx","frontmatter","timeToRead","fields","ArticlePageContext","ArticleLayout","ArticleFrontmatter","MarkdownWrapper","RecentPosts","prev","next","Utterances","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}