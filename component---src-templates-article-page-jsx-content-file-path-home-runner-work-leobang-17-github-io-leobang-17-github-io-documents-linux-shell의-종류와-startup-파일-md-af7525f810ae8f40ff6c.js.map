{"version":3,"file":"component---src-templates-article-page-jsx-content-file-path-home-runner-work-leobang-17-github-io-leobang-17-github-io-documents-linux-shell의-종류와-startup-파일-md-af7525f810ae8f40ff6c.js","mappings":"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","sources":["webpack://gatsby-theme-simplex/./documents/Linux/shell의-종류와-startup-파일.md","webpack://gatsby-theme-simplex/./src/templates/ArticlePage.jsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    a: \"a\",\n    div: \"div\",\n    p: \"p\",\n    strong: \"strong\",\n    em: \"em\",\n    blockquote: \"blockquote\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\",\n    h2: \"h2\",\n    pre: \"pre\",\n    h3: \"h3\",\n    ol: \"ol\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, {\n    id: \"shell\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#shell\",\n    \"aria-label\": \"shell permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Shell\"), \"\\n\", React.createElement(_components.p, null, \"shell은 유저 input 커맨드를 받아들여 kernel이 이해할 수 있는 형태로 전달하는 역할을 한다. 즉, \", React.createElement(_components.strong, null, \"유저와 OS의 kernel 사이의 통역사 역할\"), \"이 shell 프로그램의 본질이다.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Shell의 종류와 Startup 파일의 역할\")), \"\\n\", React.createElement(_components.p, null, \"Shell이 실행되는 환경은 \", React.createElement(_components.em, null, \"interactivity와 login 여부\"), \"에 따라서 그 종류를 나눌 수 있다.\"), \"\\n\", React.createElement(_components.p, null, \"Shell이 시작될 때, 해당 shell을 이용하기 위한 환경을 구성해주는 작업이 필요하다. startup 파일은 shell이 시작될 때 실행할 수 있는 커맨드를 포함하는 파일이다. Shell이 시작될 때 shell은 이 startup 파일들을 읽어들여 shell 환경을 구성하게 된다.\"), \"\\n\", React.createElement(_components.p, null, \"shell의 종류마다 읽어들이는 startup 파일이 다르며, 이 글을 통해 shell의 종류와 각 상황에서 읽어들이는 startup 파일에 대해 알아보겠당.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"startup 파일\")), \"\\n\", React.createElement(_components.p, null, \"대부분 Linux 배포판에 default로 제공하는 bash shell의 경우 다음과 같은 startup 파일들이 있다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"/etc/profile\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"/etc/bash.bashrc\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"~/.bash_profile\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"~/.bash_login\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"~/.profile\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"~/.bashrc\")), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"interactive-shell-vs-non-interactive-shell\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#interactive-shell-vs-non-interactive-shell\",\n    \"aria-label\": \"interactive shell vs non interactive shell permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Interactive Shell vs Non-Interactive Shell\"), \"\\n\", React.createElement(_components.p, null, \"Shell이 실행되는 환경을 user와의 상호작용(Interaction)이 필요한지 여부에 따라 두 가지로 나누어 볼 수 있다.\"), \"\\n\", React.createElement(_components.p, null, \"Interactive Shell인지 아닌지는 다음 커맨드를 통해서 확인할 수 있다. Interactive Shell의 경우 직접 커맨드를 입력하면 되고, Non-Interactive Shell의 경우 스크립트에 다음 커맨드를 추가하면 된다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"$ [[ $- == *i* ]] && echo ‘Interactive’ || echo ‘not-interactive’\\n\")), \"\\n\", React.createElement(_components.h3, {\n    id: \"interactive-shell\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#interactive-shell\",\n    \"aria-label\": \"interactive shell permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Interactive Shell\"), \"\\n\", React.createElement(_components.p, null, \"user input과 같이 user와 상호작용(interact)이 필요한 shell 환경을 interactive shell이라고 한다. prompt에 커맨드를 입력하는 shell은 모두 Interactive Shell.\"), \"\\n\", React.createElement(_components.p, null, \"Interactive Shell의 경우 \", React.createElement(_components.strong, null, \"shell이 실제로 사용되기 전에 shell environment를 설정하기 위한 startup 파일이 필요\"), \"하다.\"), \"\\n\", React.createElement(_components.p, null, \"이 startup 파일들은 후술할 login shell인지, non-login shell인지에 따라 로드되는 대상이 달라진다. 후술할 항목 참조.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"non-interactive-shell\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#non-interactive-shell\",\n    \"aria-label\": \"non interactive shell permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Non-Interactive Shell\"), \"\\n\", React.createElement(_components.p, null, \"shell \", React.createElement(_components.strong, null, \"script 파일\"), \"을 실행하는 경우는 항상 non-interactive shell이다. 예를들어, \", React.createElement(_components.code, null, \".sh\"), \" 스크립트를 실행하기 위해 child shell을 fork하는 경우, fork 된 child shell은 non-interactive shell이다.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"non-interactive shell은 startup 파일을 실행(source)하지 않으며\"), \", 부모 shell의 설정 값을 상속받게 된다. 그리고 \", React.createElement(_components.code, null, \"BASH_ENV\"), \"의 환경 변수 값을 이용하게 된다.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"login-shell-vs-non-login-shell\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#login-shell-vs-non-login-shell\",\n    \"aria-label\": \"login shell vs non login shell permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Login Shell vs Non-login Shell\"), \"\\n\", React.createElement(_components.p, null, \"shell을 시작할 때 로그인 과정이 필요한지 여부에 따라서 두 가지로 분류할 수 있다.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"login-shell\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#login-shell\",\n    \"aria-label\": \"login shell permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Login Shell\"), \"\\n\", React.createElement(_components.p, null, \"remote host에 \", React.createElement(_components.em, null, \"로그인 과정을 거쳐 사용하게 되는 shell\"), \" 환경을 Login Shell이라고 한다.\"), \"\\n\", React.createElement(_components.p, null, \"Login Shell의 좋은 예시는 \", React.createElement(_components.a, {\n    href: \"https://linux.die.net/man/1/ssh\",\n    target: \"_self\",\n    rel: \"nofollow\"\n  }, \"ssh\"), \"이다. ssh client를 이용해서 remote host에 로그인하면 Login Shell이 시작된다.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"SSH란\")), \"\\n\", React.createElement(_components.p, null, \"ssh은 Secure Shell의 약어로, \", React.createElement(_components.strong, null, \"remote machine에 안전하게 접속하기 위해 사용되는 보안 프로토콜\"), \"이다. local machine과 remote machine간에 오고가는 패킷의 내용을 ssh key를 이용해 암/복호화하는 기술이 ssh 프로토콜의 핵심이다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"interactive login shell이 시작될 때, shell은 다음의 startup 파일들을 순서대로 찾아서 실행한다:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"/etc/profile\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"~/.bash_profile\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"~/.bash_login\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"~/.profile\")), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"2, 3, 4의 경우 그 순서대로 가장 먼저 발견되는 startup 파일만 source하고, 나머지는 무시한다.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \".profile\"), \" 과 \", React.createElement(_components.code, null, \".bash_profile\"), \"이 두 가지가 존재하는 이유는 \", React.createElement(_components.code, null, \"sh\"), \"와 \", React.createElement(_components.code, null, \"bash\"), \"를 구분하기 위해서이다. bash가 사용될 경우, \", React.createElement(_components.code, null, \".bash_profile\"), \"이 존재하면 \", React.createElement(_components.code, null, \".profile\"), \"은 실행되지 않는다.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"non-login-shell\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#non-login-shell\",\n    \"aria-label\": \"non login shell permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Non-login Shell\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"터미널 프로그램을 실행시켜 사용하는 shell\"), \"을 Interactive Non-Login Shell 환경 이라고 한다. prompt가 보이고 유저가 커맨드를 입력해 shell과 상호작용할 수 있지만 shell을 열 때 로그인 과정이 필요하지는 않다.\"), \"\\n\", React.createElement(_components.p, null, \"Non-login shell이 시작될 때, shell은 다음의 startup 파일을 순서대로 찾아서 실행한다:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"/etc/bash.bashrc\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"~/.bashrc\")), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"각-shell-환경의-조합\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EA%B0%81-shell-%ED%99%98%EA%B2%BD%EC%9D%98-%EC%A1%B0%ED%95%A9\",\n    \"aria-label\": \"각 shell 환경의 조합 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"각 Shell 환경의 조합\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Interactive Login Sell\"), \": ssh나 telnet을 이용해 remote host에 접근하는 상황\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Interactive Non-Login Shell\"), \": 새 터미널을 열었을 때\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Non-Interactive Login Shell\"), \": non-interactive하게 login 과정을 거칠일은 자연스러운 상황에서는 드물다… \", React.createElement(_components.code, null, \"echo command |ssh server\"), \" 이런 식으로\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Non-Interactive Non-Login Shell\"), \": 거의 모든 non-interactive shell은 non-login shell이다. script가 실행되거나 자동화된 프로세스가 실행되는 shell 환경.\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"references\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#references\",\n    \"aria-label\": \"references permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"References\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://www.baeldung.com/linux/bashrc-vs-bash-profile-vs-profile\",\n    target: \"_self\",\n    rel: \"nofollow\"\n  }, \"Baeldung: Difference between .bashrc, .bash_profile, and .profile\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://www.geeksforgeeks.org/shell-scripting-interactive-and-non-interactive-shell/\",\n    target: \"_self\",\n    rel: \"nofollow\"\n  }, \"Geeks for geeks: Shell Scripting - Interactive and Non-Interactive Shell\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://askubuntu.com/questions/879364/differentiate-interactive-login-and-non-interactive-non-login-shell\",\n    target: \"_self\",\n    rel: \"nofollow\"\n  }, \"ask Ubuntu: Differentiate Interactive login and non-interactive non-login shell\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://mug896.github.io/bash-shell/login_non-login.html\",\n    target: \"_self\",\n    rel: \"nofollow\"\n  }, \"BASH shell script: Login vs Non-Login Shell\")), \"\\n\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/leobang17.github.io/leobang17.github.io/documents/Linux/shell의-종류와-startup-파일.md\";\nimport React from 'react';\nimport {graphql} from 'gatsby';\nimport ArticleLayout from 'components/Layout/ArticleLayout';\nimport MarkdownWrapper from 'components/MarkdownWrapper';\nimport ArticleFrontmatter from 'components/ArticleFrontmatter';\nimport ArticlePageContext from 'contexts/ArticlePageContext';\nimport Utterances from 'components/Utterance';\nimport RecentPosts from 'components/RecentPosts/RecentPosts';\nconst isBrowser = typeof window !== undefined;\nconst ArticlePage = ({data, children, serverData}) => {\n  const {prevPost, nextPost} = data;\n  const frontmatters = {\n    ...data.mdx.frontmatter,\n    timeToRead: data.mdx.fields.timeToRead\n  };\n  return React.createElement(ArticlePageContext, {\n    data: data\n  }, React.createElement(ArticleLayout, null, React.createElement(ArticleFrontmatter, frontmatters), React.createElement(MarkdownWrapper, null, children), React.createElement(RecentPosts, {\n    prev: prevPost,\n    next: nextPost\n  }), React.createElement(Utterances)));\n};\nArticlePage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ArticlePage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String, $nextId: String, $prevId: String) {\n    mdx(id: { eq: $id }) {\n      id\n      fields {\n        slug\n        timeToRead\n        categoryDirectory\n      }\n      frontmatter {\n        title\n        createdAt(formatString: \"MMMM DD, YYYY\")\n      }\n      tableOfContents\n    }\n    prevPost: mdx(id: { eq: $prevId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    nextPost: mdx(id: { eq: $nextId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\nexport {ArticlePageHead as Head} from 'components/head';\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","div","p","strong","em","blockquote","ul","li","code","h2","pre","h3","ol","_provideComponents","components","React","id","style","position","href","className","dangerouslySetInnerHTML","__html","target","rel","wrapper","MDXLayout","ArticlePage","data","children","serverData","prevPost","nextPost","frontmatters","mdx","frontmatter","timeToRead","fields","ArticlePageContext","ArticleLayout","ArticleFrontmatter","MarkdownWrapper","RecentPosts","prev","next","Utterances","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}