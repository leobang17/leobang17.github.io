"use strict";(self.webpackChunkgatsby_theme_simplex=self.webpackChunkgatsby_theme_simplex||[]).push([[6941],{295:function(e,t,l){l.r(t),l.d(t,{Head:function(){return p.py},default:function(){return E}});var n=l(1151),a=l(7294);function r(e){const t=Object.assign({h2:"h2",a:"a",div:"div",p:"p",code:"code",h4:"h4",ul:"ul",li:"li",blockquote:"blockquote",ol:"ol",pre:"pre"},(0,n.ah)(),e.components);return a.createElement(a.Fragment,null,a.createElement(t.h2,{id:"문제",style:{position:"relative"}},a.createElement(t.a,{href:"#%EB%AC%B8%EC%A0%9C","aria-label":"문제 permalink",className:"header-links before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"문제"),"\n",a.createElement(t.p,null,"주식시장에서 주식을 거래하려고 한다. 주식 시장의 일별 가격을 나타내는 정수 배열 ",a.createElement(t.code,null,"prices"),"가 주어진다. ",a.createElement(t.code,null,"prices[i]"),"는 ",a.createElement(t.code,null,"i"),"번째 날의 주식 가격을 나타낸다.\n거래자는 주식을 언제든지 사고 팔 수 있지만 하루에 2개 이상의 주식을 보유할 수는 없다. (같은 날에도 구매와 판매를 여러 번 반복할 수 있음.)\n주어진 주식시장동안 낼 수 있는 최대의 차익을 구하라."),"\n",a.createElement(t.h4,{id:"constraints",style:{position:"relative"}},a.createElement(t.a,{href:"#constraints","aria-label":"constraints permalink",className:"header-links before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Constraints"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.code,null,"1 <= prices.length <= 3 * 10^4")),"\n",a.createElement(t.li,null,a.createElement(t.code,null,"0 <= prices[i] <= 104")),"\n"),"\n",a.createElement(t.h2,{id:"approach1-two-pointer",style:{position:"relative"}},a.createElement(t.a,{href:"#approach1-two-pointer","aria-label":"approach1 two pointer permalink",className:"header-links before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Approach1: Two Pointer"),"\n",a.createElement(t.p,null,"이전 문제와 동일하게 two pointer로 접근했다.\n",a.createElement(t.code,null,"n = 30,000")," 이었으므로 조합이나 이중 for 문으로는 풀 수 없는 문제."),"\n",a.createElement(t.p,null,"접근법은 다음과 같다."),"\n",a.createElement(t.blockquote,null,"\n",a.createElement(t.p,null,"left, right 포인터와 구간동안의 최대 차익인 ",a.createElement(t.code,null,"maxP"),", 수익실현 후 전체 최대 차익인 ",a.createElement(t.code,null,"total"),"을 저장한다."),"\n"),"\n",a.createElement(t.ol,null,"\n",a.createElement(t.li,null,"left와 right 포인터로 주식 가격 배열을 순회한다. left는 구매, right는 판매를 뜻한다."),"\n",a.createElement(t.li,null,"현재 left(구매)보다 더 낮은 가격으로 구매할 수 있다면 수익을 실현한다."),"\n",a.createElement(t.li,null,"만약 현재 right(판매)가 ",a.createElement(t.code,null,"maxP"),"의 최대 값을 갱신할 수 없다면 수익을 실현한다."),"\n",a.createElement(t.li,null,"현재 right (판매)가 ",a.createElement(t.code,null,"maxP"),"의 최대 값보다 크다면 값을 갱신한다."),"\n"),"\n",a.createElement(t.p,null,"사실 2번 조건은 3번 조건 안에 포함된다. left(구매)보다 right가 작다면 항상 최대값을 갱신할 수 없으니까.\n또한 3번 조건과 4번 조건은 완전히 대립되는 조건이므로 간단하게 다음과 같이 줄일 수 있었다."),"\n",a.createElement(t.ol,null,"\n",a.createElement(t.li,null,"left와 right 포인터로 주식 가격 배열을 순회한다. left는 구매, right는 판매를 뜻한다."),"\n",a.createElement(t.li,null,"현재 right (판매)가 ",a.createElement(t.code,null,"maxP"),"의 최대 값보다 크다면 갱신한다."),"\n",a.createElement(t.li,null,"아닐 경우 수익을 실현한다."),"\n"),"\n",a.createElement(t.h4,{id:"complexity",style:{position:"relative"}},a.createElement(t.a,{href:"#complexity","aria-label":"complexity permalink",className:"header-links before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Complexity"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,"time complexity: ",a.createElement(t.code,null,"O(N)")),"\n",a.createElement(t.li,null,"space complexity: ",a.createElement(t.code,null,"O(1)")),"\n"),"\n",a.createElement(t.h4,{id:"code",style:{position:"relative"}},a.createElement(t.a,{href:"#code","aria-label":"code permalink",className:"header-links before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Code"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-python"},"class Solution:\n    def maxProfit(self, prices: List[int]) -> int:\n        left, right = 0, 1 \n        total = 0 # 전체 실현한 수익\n        maxP = 0 # 구간 최대 수익 \n        \n        # O(N) = 30,000\n        while right < len(prices):\n            profit = prices[right] - prices[left]\n            if profit > maxP:\n                maxP = profit\n            else:\n                # 수익실현\n                left = right\n                total += maxP\n                maxP = 0\n\n            right += 1\n\n        return total + maxP\n")),"\n",a.createElement(t.h2,{id:"approach-2-greedy",style:{position:"relative"}},a.createElement(t.a,{href:"#approach-2-greedy","aria-label":"approach 2 greedy permalink",className:"header-links before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Approach 2: Greedy"),"\n",a.createElement(t.p,null,"121번 문제를 풀고 two pointer로 어렵게 생각했었지만, 사실 훨씬 간단하게 greedy로 해결할 수 있는 문제였다."),"\n",a.createElement(t.p,null,"정말 단순하게 수익이 나는 모든 순간마다 수익실현을 하면 되는… 그런 그리디 알고리즘."),"\n",a.createElement(t.h4,{id:"complexity-1",style:{position:"relative"}},a.createElement(t.a,{href:"#complexity-1","aria-label":"complexity 1 permalink",className:"header-links before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Complexity"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,"time complexity: ",a.createElement(t.code,null,"O(N)")),"\n",a.createElement(t.li,null,"space complexity: ",a.createElement(t.code,null,"O(1)")),"\n"),"\n",a.createElement(t.h4,{id:"code-1",style:{position:"relative"}},a.createElement(t.a,{href:"#code-1","aria-label":"code 1 permalink",className:"header-links before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Code"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-python"},"class Solution:\n    def maxProfit(self, prices: List[int]) -> int:\n        profit = 0 \n        \n        for i in range(1, len(prices)):\n            # 수익 실현이 가능할 경우 매번 수익 실현한다.\n            profit += max(prices[i]- prices[i - 1], 0)\n\n        return profit\n")))}var c=function(e={}){const{wrapper:t}=Object.assign({},(0,n.ah)(),e.components);return t?a.createElement(t,e,a.createElement(r,e)):r(e)},i=l(5670),o=l(1326),h=l(4517),m=l(698),s=l(8627),d=l(662),p=l(1873);const u=({data:e,children:t,serverData:l})=>{const{prevPost:n,nextPost:r}=e,c={...e.mdx.frontmatter,timeToRead:e.mdx.fields.timeToRead};return a.createElement(m.Z,{data:e},a.createElement(i.Z,null,a.createElement(h.Z,c),a.createElement(o.Z,null,t),a.createElement(d.Z,{prev:n,next:r}),a.createElement(s.Z)))};function E(e){return a.createElement(u,e,a.createElement(c,e))}}}]);
//# sourceMappingURL=component---src-templates-article-page-jsx-content-file-path-home-runner-work-leobang-17-github-io-leobang-17-github-io-documents-algorithm-122-best-time-to-buy-and-sell-stock-ii-md-6b9ed5f7f79d62050f7e.js.map