{"version":3,"file":"component---src-templates-category-page-tsx-ad3e62a11c71717b174d.js","mappings":"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","sources":["webpack://gatsby-theme-simplex/./src/components/LeftStack/BioAndCategories/index.tsx","webpack://gatsby-theme-simplex/./src/components/ArticleBox/ArticleBoxTitle.tsx","webpack://gatsby-theme-simplex/./src/utils/getCategoriesWithCategoryLinks.ts","webpack://gatsby-theme-simplex/./src/components/ArticleBox/ArticleBoxCategoryLink.tsx","webpack://gatsby-theme-simplex/./src/components/ArticleBox/index.tsx","webpack://gatsby-theme-simplex/./src/components/Layout/CategoryLayout.tsx","webpack://gatsby-theme-simplex/./src/utils/pageApi/filterArticleByCategories.ts","webpack://gatsby-theme-simplex/./src/contexts/CategoryPageContext.tsx","webpack://gatsby-theme-simplex/./src/templates/CategoryPage.tsx"],"sourcesContent":["/** @jsx jsx */\nimport { css, jsx } from '@emotion/react'\n\nimport CategoryTable from 'components/CategoryTable'\n\nconst style = css`\n  position: -webkit-sticky;\n  position: sticky;\n  align-self: start;\n  top: 5rem;\n  max-height: calc(100vh - 5rem);\n  overflow: auto;\n`\n\nconst BioAndCategories = () => {\n  return (\n    <div css={style}>\n      <CategoryTable />\n    </div>\n  )\n}\n\nexport default BioAndCategories\n","/** @jsx jsx */\n\nimport { FC } from 'react'\nimport { jsx } from '@emotion/react'\nimport { Typography } from '@mui/material'\nimport { Link } from 'gatsby'\n\nimport { PAGE_PREFIX } from 'constants/PageConsts'\nimport { makeStyles } from 'tss-react/mui'\n\nexport type ArticleBoxTitleProps = {\n  slug: string\n  title: string\n}\n\nconst useStyles = makeStyles()(theme => ({\n  root: {\n    transition: 'all 0.1s ease',\n    fontSize: '1.5rem',\n    marginBlock: '0.2em',\n\n    ':hover': {\n      color:\n        theme.palette.mode === 'dark'\n          ? theme.palette.primary.light\n          : theme.palette.primary.main,\n    },\n  },\n}))\n\nconst ArticleBoxTitle: FC<ArticleBoxTitleProps> = ({ slug, title }) => {\n  const { classes } = useStyles()\n  return (\n    <Link to={PAGE_PREFIX.ARTICLE + slug}>\n      <Typography\n        // color={themeMainContrast('plainText')}\n        className={classes.root}\n      >\n        {title}\n      </Typography>\n    </Link>\n  )\n}\n\nexport default ArticleBoxTitle\n","import { PAGE_PREFIX } from 'constants/PageConsts'\nimport CategoryStrings from 'datastructures/category/CategoryStrings'\nimport { slugify } from './slug'\n\nexport default function getCategoriesWithCategoryLinks(\n  categoryString: CategoryStrings,\n): Array<[string, string]> {\n  const categoryWithCategoryLinks = createCategoriesWithCategoryLinks(\n    categoryString.categories,\n  )\n\n  return categoryWithCategoryLinks\n}\n\nfunction createCategoriesWithCategoryLinks(categories: string[]) {\n  return categories.map((category, index) => {\n    const slicedCategories = copySlicedListofCategory(categories, index)\n    const categoryLink = createCategoryLink(slicedCategories)\n    return [category, categoryLink] as [string, string]\n  })\n}\n\nfunction copySlicedListofCategory(categories: string[], end: number) {\n  return categories.slice(0, end + 1)\n}\n\nfunction createCategoryLink(categories: string[]) {\n  return categories.reduce((prev, curr) => {\n    return prev + '/' + slugify(curr)\n  }, PAGE_PREFIX.CATEGORY)\n}\n","/** @jsx jsx */\n\nimport { jsx } from '@emotion/react'\nimport { PAGE_PREFIX } from 'constants/PageConsts'\nimport CategoryStrings from 'datastructures/category/CategoryStrings'\nimport { Link } from 'gatsby'\nimport { FC } from 'react'\nimport getCategoriesWithCategoryLinks from 'utils/getCategoriesWithCategoryLinks'\nimport { Typography } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { themeMainLight } from 'styles/theme/colorProcessor'\n\ntype ArticleCategoryLinkProps = {\n  categoryString: CategoryStrings\n}\n\nconst useStyles = makeStyles()({\n  root: {},\n})\n\nconst ArticleBoxCategoryLink: FC<ArticleCategoryLinkProps> = ({\n  categoryString,\n}) => {\n  const { classes } = useStyles()\n  const categoriesWithCategoryLinks =\n    getCategoriesWithCategoryLinks(categoryString)\n\n  return (\n    <Typography\n      color={themeMainLight('primary')}\n      variant=\"subtitle2\"\n      className={classes.root}\n    >\n      <Link to={PAGE_PREFIX.CATEGORY}>total</Link>\n      {categoriesWithCategoryLinks.map((categoryWithCategoryLink, id) => {\n        const [category, categoryLink] = categoryWithCategoryLink\n        return (\n          <span key={id}>\n            {' > '}\n            <Link to={categoryLink}>{category}</Link>\n          </span>\n        )\n      })}\n    </Typography>\n  )\n}\n\nexport default ArticleBoxCategoryLink\n","/** @jsx jsx */\n\nimport { jsx } from '@emotion/react'\nimport { FC } from 'react'\n\nimport { MdxNode } from 'types/mdx-types'\nimport ArticleBoxTitle from './ArticleBoxTitle'\nimport ArticleBoxCategoryLink from './ArticleBoxCategoryLink'\nimport CategoryStrings from 'datastructures/category/CategoryStrings'\n\nimport { Box, Typography } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { themeMainLight } from 'styles/theme/colorProcessor'\n\nconst useStyles = makeStyles()({\n  root: {\n    marginBlock: '3rem',\n  },\n  title: {\n    marginBlock: '1em',\n  },\n  summary: {\n    display: 'block',\n  },\n  createdAt: {\n    marginTop: '0.5rem',\n  },\n})\n\nconst ArticleBox: FC<MdxNode> = ({\n  fields: { slug, categoryDirectory },\n  frontmatter: { title, createdAt },\n  excerpt,\n}) => {\n  const { classes } = useStyles()\n  return (\n    <Box component=\"section\" className={classes.root}>\n      <ArticleBoxCategoryLink\n        categoryString={CategoryStrings.initialize(categoryDirectory)}\n      />\n      <ArticleBoxTitle slug={slug} title={title} />\n\n      <Typography\n        component=\"summary\"\n        variant=\"body1\"\n        // color={themeMainContrast('plainText')}\n        className={classes.summary}\n      >\n        {excerpt}\n      </Typography>\n\n      <Typography\n        component=\"time\"\n        variant=\"body2\"\n        color={themeMainLight('subText')}\n        className={classes.createdAt}\n      >\n        {createdAt}\n      </Typography>\n    </Box>\n  )\n}\n\nexport default ArticleBox\n","import BioAndCategories from 'components/LeftStack/BioAndCategories'\nimport React, { FC } from 'react'\nimport { ChildrenProps } from 'types/react-types'\nimport Layout from '.'\nimport { Container } from '@mui/material'\n\ntype CategoryLayoutProps = {} & ChildrenProps\n\nconst layoutProps = {\n  leftStack: <BioAndCategories />,\n}\n\nconst CategoryLayout: FC<CategoryLayoutProps> = ({ children }) => {\n  return (\n    <Layout {...layoutProps}>\n      <Container>{children}</Container>\n    </Layout>\n  )\n}\n\nexport default CategoryLayout\n","import { MdxNode } from 'types/mdx-types'\nimport CategoryStrings from 'datastructures/category/CategoryStrings'\n\nexport default function filterArticleByCategories(\n  nodes: MdxNode[],\n  categoryString: CategoryStrings,\n) {\n  return nodes.filter(node => isSubDirectory(node, categoryString))\n}\n\nfunction isSubDirectory(node: MdxNode, categoryString: CategoryStrings) {\n  const iteratingCategory = CategoryStrings.initialize(\n    node.fields.categoryDirectory,\n  )\n  return categoryString.isParentOf(iteratingCategory)\n}\n","import React, { FC } from 'react'\n\nimport CategoryContextProvider, {\n  CategoryContextProviderProps,\n} from './category/CategoryContextProvider'\nimport ThemeContextProvider from './theme/ThemeContextProvider'\n\ntype CategoryPageContextProps = {} & CategoryContextProviderProps\n\nconst CategoryPageContext: FC<CategoryPageContextProps> = ({\n  children,\n  categoryDirectory,\n}) => {\n  return (\n    <>\n      <ThemeContextProvider>\n        <CategoryContextProvider categoryDirectory={categoryDirectory}>\n          {children}\n        </CategoryContextProvider>\n      </ThemeContextProvider>\n    </>\n  )\n}\n\nexport default CategoryPageContext\n","import { graphql, PageProps } from 'gatsby'\nimport React, { FC } from 'react'\n\nimport ArticleBox from 'components/ArticleBox'\nimport { AllMdxQuery } from 'types/mdx-types'\nimport CategoryLayout from 'components/Layout/CategoryLayout'\nimport filterArticleByCategories from 'utils/pageApi/filterArticleByCategories'\nimport CategoryStrings from 'datastructures/category/CategoryStrings'\nimport CategoryPageContext from 'contexts/CategoryPageContext'\n\nexport type CategoryPageContext = {\n  categoryDirectory: string\n}\n\nconst CategoryPage: FC<PageProps<AllMdxQuery, CategoryPageContext>> = ({\n  data,\n  pageContext: { categoryDirectory },\n}) => {\n  const categoryString = CategoryStrings.initialize(categoryDirectory)\n  const articles = filterArticleByCategories(data.allMdx.nodes, categoryString)\n\n  return (\n    <CategoryPageContext categoryDirectory={categoryDirectory}>\n      <CategoryLayout>\n        {articles.map((article, id) => {\n          return <ArticleBox key={id} {...article} />\n        })}\n      </CategoryLayout>\n    </CategoryPageContext>\n  )\n}\n\nexport default CategoryPage\n\nexport const query = graphql`\n  query allMdx {\n    allMdx(sort: { frontmatter: { createdAt: DESC } }) {\n      nodes {\n        id\n        fields {\n          slug\n          categoryDirectory\n        }\n        frontmatter {\n          title\n          createdAt(formatString: \"MMMM DD, YYYY\")\n        }\n        excerpt(pruneLength: 150)\n      }\n    }\n  }\n`\n\nexport { CategoryPageHead as Head } from 'components/head'\n"],"names":["style","jsx","css","CategoryTable","useStyles","makeStyles","theme","root","transition","fontSize","marginBlock","color","palette","mode","primary","light","main","slug","title","classes","Link","to","PAGE_PREFIX","Typography","className","getCategoriesWithCategoryLinks","categoryString","categoryWithCategoryLinks","categories","map","category","index","slicedCategories","end","slice","copySlicedListofCategory","categoryLink","reduce","prev","curr","slugify","createCategoryLink","categoriesWithCategoryLinks","themeMainLight","variant","categoryWithCategoryLink","id","key","summary","display","createdAt","marginTop","fields","categoryDirectory","frontmatter","excerpt","Box","component","ArticleBoxCategoryLink","CategoryStrings","ArticleBoxTitle","layoutProps","leftStack","___EmotionJSX","BioAndCategories","children","Layout","Container","filterArticleByCategories","nodes","filter","node","iteratingCategory","isParentOf","isSubDirectory","ThemeContextProvider","CategoryContextProvider","data","pageContext","articles","allMdx","CategoryPageContext","CategoryLayout","article","ArticleBox"],"sourceRoot":""}