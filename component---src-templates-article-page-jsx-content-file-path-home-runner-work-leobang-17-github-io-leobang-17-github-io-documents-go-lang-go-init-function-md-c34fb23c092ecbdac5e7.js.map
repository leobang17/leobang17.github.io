{"version":3,"file":"component---src-templates-article-page-jsx-content-file-path-home-runner-work-leobang-17-github-io-leobang-17-github-io-documents-go-lang-go-init-function-md-c34fb23c092ecbdac5e7.js","mappings":"oOAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,KAAM,OACNC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,EAAG,IACHC,IAAK,MACLC,OAAQ,SACRC,IAAK,MACLC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,MAAsBhB,EAAMiB,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBjB,EAAYG,EAAG,KAAM,UAAWc,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,QAAS,oEAAqEa,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,QAAS,qBAAsB,KAAMa,EAAAA,cAAoBjB,EAAYK,GAAI,KAAM,KAAMY,EAAAA,cAAoBjB,EAAYM,GAAI,KAAMW,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,QAAS,qDAAsD,KAAMa,EAAAA,cAAoBjB,EAAYM,GAAI,KAAMW,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,QAAS,mEAAoE,KAAMa,EAAAA,cAAoBjB,EAAYM,GAAI,KAAM,qBAAsBW,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,QAAS,sBAAuB,KAAMa,EAAAA,cAAoBjB,EAAYM,GAAI,KAAMW,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,QAAS,qCAAsC,KAAMa,EAAAA,cAAoBjB,EAAYM,GAAI,KAAMW,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,QAAS,QAASa,EAAAA,cAAoBjB,EAAYO,GAAI,KAAM,oBAAqB,+BAAgC,MAAO,KAAMU,EAAAA,cAAoBjB,EAAYQ,GAAI,CACvrCU,GAAI,iBACJC,MAAO,CACLC,SAAU,aAEXH,EAAAA,cAAoBjB,EAAYS,EAAG,CACpCY,KAAM,0EACN,aAAc,2BACdC,UAAW,uBACVL,EAAAA,cAAoBjB,EAAYU,IAAK,CACtCa,wBAAyB,CACvBC,OAAQ,meAEP,kBAAmB,KAAMP,EAAAA,cAAoBjB,EAAYG,EAAG,KAAMc,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,QAAS,2EAA4Ea,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,QAAS,6BAA8B,KAAMa,EAAAA,cAAoBjB,EAAYG,EAAG,KAAMc,EAAAA,cAAoBjB,EAAYW,OAAQ,KAAM,+CAAgD,KAAMM,EAAAA,cAAoBjB,EAAYG,EAAG,KAAMc,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,QAAS,wEAAyEa,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,QAAS,iBAAkB,KAAMa,EAAAA,cAAoBjB,EAAYG,EAAG,KAAM,WAAYc,EAAAA,cAAoBjB,EAAYO,GAAI,KAAM,2BAA4B,6CAA8CU,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,UAAW,mBAAoBa,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,QAAS,+BAAgC,KAAMa,EAAAA,cAAoBjB,EAAYG,EAAG,KAAM,qDAAsD,KAAMc,EAAAA,cAAoBjB,EAAYY,IAAK,KAAMK,EAAAA,cAAoBjB,EAAYI,KAAM,CACrqCkB,UAAW,eACV,sHAA6H,KAAML,EAAAA,cAAoBjB,EAAYY,IAAK,KAAMK,EAAAA,cAAoBjB,EAAYI,KAAM,CACrNkB,UAAW,eACV,6FAA8F,KAAML,EAAAA,cAAoBjB,EAAYG,EAAG,KAAM,sBAAuBc,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,QAAS,cAAea,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,SAAU,KAAMa,EAAAA,cAAoBjB,EAAYO,GAAI,KAAM,UAAW,6BAA8B,KAAMU,EAAAA,cAAoBjB,EAAYa,GAAI,KAAM,KAAMI,EAAAA,cAAoBjB,EAAYM,GAAI,KAAMW,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,SAAU,aAAca,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,QAAS,OAAQ,KAAMa,EAAAA,cAAoBjB,EAAYM,GAAI,KAAMW,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,QAAS,aAAca,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,QAAS,OAAQ,KAAMa,EAAAA,cAAoBjB,EAAYM,GAAI,KAAMW,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,QAAS,UAAW,KAAMa,EAAAA,cAAoBjB,EAAYM,GAAI,KAAMW,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,eAAgB,OAAQ,MAAO,KAAMa,EAAAA,cAAoBjB,EAAYG,EAAG,KAAM,aAAcc,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,QAAS,KAAMa,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,QAAS,cAAea,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,QAAS,KAAMa,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,eAAgB,cAAea,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,SAAU,6CAA8Ca,EAAAA,cAAoB,IAAK,KAAMA,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,QAAS,0BAA2B,iHAAkH,KAAMa,EAAAA,cAAoBjB,EAAYG,EAAG,KAAMc,EAAAA,cAAoBjB,EAAYW,OAAQ,KAAM,6CAA8C,KAAMM,EAAAA,cAAoBjB,EAAYY,IAAK,KAAMK,EAAAA,cAAoBjB,EAAYI,KAAM,CAC71DkB,UAAW,eACV,mJAAwJ,KAAML,EAAAA,cAAoBjB,EAAYG,EAAG,KAAMc,EAAAA,cAAoBjB,EAAYW,OAAQ,KAAM,+CAAgD,mBAAoBM,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,QAAS,QAASa,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,QAAS,mBAAoBa,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,QAAS,mBAAoBa,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,QAAS,WAAYa,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,QAAS,oBAAqB,KAAMa,EAAAA,cAAoBjB,EAAYQ,GAAI,CAC/rBU,GAAI,sCACJC,MAAO,CACLC,SAAU,aAEXH,EAAAA,cAAoBjB,EAAYS,EAAG,CACpCY,KAAM,uLACN,aAAc,gDACdC,UAAW,uBACVL,EAAAA,cAAoBjB,EAAYU,IAAK,CACtCa,wBAAyB,CACvBC,OAAQ,meAEP,0CAA2C,KAAMP,EAAAA,cAAoBjB,EAAYG,EAAG,KAAM,gCAAiC,KAAMc,EAAAA,cAAoBjB,EAAYY,IAAK,KAAMK,EAAAA,cAAoBjB,EAAYI,KAAM,CACrNkB,UAAW,eACV,mQAAwQ,KAAML,EAAAA,cAAoBjB,EAAYG,EAAG,KAAM,uCAAwC,KAAMc,EAAAA,cAAoBjB,EAAYa,GAAI,KAAM,KAAMI,EAAAA,cAAoBjB,EAAYM,GAAI,KAAM,KAAMW,EAAAA,cAAoBjB,EAAYG,EAAG,KAAMc,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,QAAS,sBAAuBa,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,QAAS,sDAAuDa,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,SAAU,WAAYa,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,SAAU,kCAAmCa,EAAAA,cAAoB,IAAK,KAAM,8CAA+C,mCAAoCA,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,SAAU,uCAAwCa,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,QAAS,gDAAiD,MAAO,KAAMa,EAAAA,cAAoBjB,EAAYM,GAAI,KAAM,KAAMW,EAAAA,cAAoBjB,EAAYG,EAAG,KAAM,6BAA8B,KAAMc,EAAAA,cAAoBjB,EAAYG,EAAG,KAAM,QAASc,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,QAAS,0BAA2Ba,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,QAAS,iDAAkDa,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,QAAS,kCAAmC,KAAMa,EAAAA,cAAoBjB,EAAYG,EAAG,KAAM,oDAAqDc,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,QAAS,wCAAyC,KAAMa,EAAAA,cAAoBjB,EAAYG,EAAG,KAAMc,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,QAAS,sHAAuH,MAAO,KAAMa,EAAAA,cAAoBjB,EAAYM,GAAI,KAAM,KAAMW,EAAAA,cAAoBjB,EAAYG,EAAG,KAAMc,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,QAAS,uBAAwBa,EAAAA,cAAoBjB,EAAYO,GAAI,KAAM,mBAAoB,aAAc,KAAMU,EAAAA,cAAoBjB,EAAYG,EAAG,KAAM,2HAA4H,KAAMc,EAAAA,cAAoBjB,EAAYG,EAAG,KAAM,4DAA6D,MAAO,MAAO,KAAMc,EAAAA,cAAoBjB,EAAYG,EAAG,KAAM,qDAAsD,KAAMc,EAAAA,cAAoBjB,EAAYY,IAAK,KAAMK,EAAAA,cAAoBjB,EAAYI,KAAM,CAChsFkB,UAAW,eACV,4NAA+N,KAAML,EAAAA,cAAoBjB,EAAYK,GAAI,KAAM,KAAMY,EAAAA,cAAoBjB,EAAYM,GAAI,KAAM,sDAAuD,KAAMW,EAAAA,cAAoBjB,EAAYM,GAAI,KAAM,gDAAiD,KAAMW,EAAAA,cAAoBjB,EAAYM,GAAI,KAAM,yEAA0E,MAAO,KAAMW,EAAAA,cAAoBjB,EAAYQ,GAAI,CACnoBU,GAAI,mBACJC,MAAO,CACLC,SAAU,aAEXH,EAAAA,cAAoBjB,EAAYS,EAAG,CACpCY,KAAM,4FACN,aAAc,6BACdC,UAAW,uBACVL,EAAAA,cAAoBjB,EAAYU,IAAK,CACtCa,wBAAyB,CACvBC,OAAQ,meAEP,oBAAqB,KAAMP,EAAAA,cAAoBjB,EAAYG,EAAG,KAAMc,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,QAAS,+BAAgCa,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,QAAS,eAAgBa,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,QAAS,uBAAwB,KAAMa,EAAAA,cAAoBjB,EAAYK,GAAI,KAAM,KAAMY,EAAAA,cAAoBjB,EAAYM,GAAI,KAAMW,EAAAA,cAAoBjB,EAAYO,GAAI,KAAM,mBAAoB,qBAAsB,KAAMU,EAAAA,cAAoBjB,EAAYM,GAAI,KAAMW,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,QAAS,wCAAyC,MAAO,KAAMa,EAAAA,cAAoBjB,EAAYG,EAAG,KAAM,MAAOc,EAAAA,cAAoBjB,EAAYS,EAAG,CAChtBY,KAAM,yEACNI,OAAQ,QACRC,IAAK,YACJ,WAAY,wBAAyBT,EAAAA,cAAoBjB,EAAYI,KAAM,KAAM,QAAS,kBAAmB,KAAMa,EAAAA,cAAoBjB,EAAYY,IAAK,KAAMK,EAAAA,cAAoBjB,EAAYI,KAAM,CACrMkB,UAAW,eACV,woBAAgqB,KAAML,EAAAA,cAAoBjB,EAAYG,EAAG,KAAM,yEAA0E,KAAMc,EAAAA,cAAoBjB,EAAYG,EAAG,KAAM,iCAAkCc,EAAAA,cAAoBjB,EAAYW,OAAQ,KAAM,yCAA0C,aAAc,KAAMM,EAAAA,cAAoBjB,EAAYc,GAAI,CAC3/BI,GAAI,MACJC,MAAO,CACLC,SAAU,aAEXH,EAAAA,cAAoBjB,EAAYS,EAAG,CACpCY,KAAM,OACN,aAAc,gBACdC,UAAW,uBACVL,EAAAA,cAAoBjB,EAAYU,IAAK,CACtCa,wBAAyB,CACvBC,OAAQ,meAEP,OAAQ,KAAMP,EAAAA,cAAoBjB,EAAYK,GAAI,KAAM,KAAMY,EAAAA,cAAoBjB,EAAYM,GAAI,KAAM,yCAA0C,MACzJ,CAKA,MAJA,SAAoBP,EAAQ,CAAC,GAC3B,MAAO4B,QAASC,GAAa3B,OAAOC,OAAO,CAAC,GAAGa,EAAAA,EAAAA,MAAsBhB,EAAMiB,YAC3E,OAAOY,EAAYX,EAAAA,cAAoBW,EAAW7B,EAAOkB,EAAAA,cAAoBnB,EAAmBC,IAAUD,EAAkBC,EAC9H,E,oEClFA,MACM8B,EAAc,EAAEC,OAAMC,WAAUC,iBACpC,MAAM,SAACC,EAAQ,SAAEC,GAAYJ,EACvBK,EAAe,IAChBL,EAAKM,IAAIC,YACZC,WAAYR,EAAKM,IAAIG,OAAOD,YAE9B,OAAOrB,EAAAA,cAAoBuB,EAAAA,EAAoB,CAC7CV,KAAMA,GACLb,EAAAA,cAAoBwB,EAAAA,EAAe,KAAMxB,EAAAA,cAAoByB,EAAAA,EAAoBP,GAAelB,EAAAA,cAAoB0B,EAAAA,EAAiB,KAAMZ,GAAWd,EAAAA,cAAoB2B,EAAAA,EAAa,CACxLC,KAAMZ,EACNa,KAAMZ,IACJjB,EAAAA,cAAoB8B,EAAAA,IAAa,EAGxB,SAASC,EAAiBjD,GACvC,OAAOkB,EAAAA,cAAoBY,EAAa9B,EAAOkB,EAAAA,cAAoBgC,EAAqBlD,GAC1F,C","sources":["webpack://gatsby-theme-simplex/./documents/GoLang/Go-init-function.md","webpack://gatsby-theme-simplex/./src/templates/ArticlePage.jsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\",\n    em: \"em\",\n    h4: \"h4\",\n    a: \"a\",\n    div: \"div\",\n    strong: \"strong\",\n    pre: \"pre\",\n    ol: \"ol\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Go언어에서 \", React.createElement(_components.code, null, \"init\"), \" 함수는 특별한 용도를 가진 함수이다. 이름 그대로 package에 대한 초기화 작업을 수행할 때 주로 이용된다.  \", React.createElement(_components.code, null, \"init\"), \"  함수의 특징은 다음과 같다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"init\"), \" 함수는 package에 대한 initializer로, 모든 일반 함수에 앞서 수행된다.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"init\"), \" 함수는 package 단위로 실행되며, 그 순서는 package의 dependency tree에 의해 결정된다.\"), \"\\n\", React.createElement(_components.li, null, \"각 package에는 여러 개의 \", React.createElement(_components.code, null, \"init\"), \"함수가 중복해서 선언될 수 있다.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"init\"), \" 함수는 argument도 return 값도 가지지 않는다.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"init\"), \" 함수는 \", React.createElement(_components.em, null, \"개발자가 직접 호출할 수 없다\"), \". 오직 Go 런타임 시스템에 의해서만 호출된다.\"), \"\\n\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"init-함수의-실행-순서\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#init-%ED%95%A8%EC%88%98%EC%9D%98-%EC%8B%A4%ED%96%89-%EC%88%9C%EC%84%9C\",\n    \"aria-label\": \"init 함수의 실행 순서 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"init 함수의 실행 순서\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"init\"), \" 함수는 package 별로, 그리고 동일한 namespace를 가진 package 내에서도 중복해서 선언할 수 있다. 그렇기에 \", React.createElement(_components.code, null, \"init\"), \" 함수의 실행 순서를 알아두는 것은 중요하다.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"1. 서로 다른 패키지의 경우, 패키지 의존성에 따라 실행 순서가 결정된다.\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"init\"), \" 함수는 package 단위로 실행된다. 한 package가 다른 package에 의존하고있다면, 의존되는 package의 \", React.createElement(_components.code, null, \"init\"), \" 함수가 먼저 실행된다.\"), \"\\n\", React.createElement(_components.p, null, \"정확히 말하면 \", React.createElement(_components.em, null, \"package dependency tree\"), \"에 의해 결정되지만, 패키지간 의존성이 복잡하지 않은 단순한 프로젝트에서는 \", React.createElement(_components.code, null, \"import\"), \" 하고 있는 package의 \", React.createElement(_components.code, null, \"init\"), \"을 먼저 실행한다고 생각하는 편이 이해하기 쉽다.\"), \"\\n\", React.createElement(_components.p, null, \"예를들어, main package가 redis package를 의존하고 있다고 가정하자:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-go\"\n  }, \"// main.go\\nimport \\\"redis\\\"\\n\\nfunc init() {\\n  // \\n}\\n\\nfunc main() {\\n  err := redis.Store(\\\"leo\\\", \\\"bang\\\") \\n}\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-go\"\n  }, \"// redis.go \\nfunc init() {\\n  //\\n}\\n\\nfunc Store(key, value string) error { /** */ }\\n\")), \"\\n\", React.createElement(_components.p, null, \"프로그램의 entry point인 \", React.createElement(_components.code, null, \"main\"), \" package에서 \", React.createElement(_components.code, null, \"redis\"), \"를 \", React.createElement(_components.em, null, \"import\"), \"하고 있다. 따라서 실행 순서는 다음과 같다:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"redis\"), \" package의 \", React.createElement(_components.code, null, \"init\"), \" 함수\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"main\"), \" package의 \", React.createElement(_components.code, null, \"init\"), \" 함수\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"main\"), \" 함수 호출\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"redis.Store\"), \" 호출\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"단순하게 생각하면 \", React.createElement(_components.code, null, \"main\"), \"의 \", React.createElement(_components.code, null, \"init\"), \"을 먼저 수행하고, \", React.createElement(_components.code, null, \"main\"), \"이 \", React.createElement(_components.code, null, \"redis.Store\"), \"를 호출한 시점에서 \", React.createElement(_components.code, null, \"redis\"), \" package를 초기화하는 것 아닌가? 라고 생각할 수 있지만 아니다.  \", React.createElement(\"u\", null, React.createElement(_components.code, null, \"init\"), \" 함수는 어떠한 일반 함수보다 먼저 실행\"), \"된다. package의 의존성 순서에 따라, package의 초기화 작업을 완료한 후 일반 함수를 실행하게 되므로 위와 같은 lazy init의 케이스는 직접 구현하지 않는 이상 발생하지 않는다.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"2. 동일한 패키지 and 동일한 파일의 경우 선언된 순서대로 실행된다.\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-go\"\n  }, \"func init() {\\n  fmt.Println(\\\"init 1\\\")\\n}\\n\\nfunc init() {\\n  fmt.Println(\\\"init 2\\\")\\n}\\n\\nfunc main() { /** */ }\\n// init 1 > init 2 순서대로 실행\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"3. 동일한 패키지 but 파일이 다를 경우 파일의 알파벳 순서대로 실행된다.\"), \"\\n예를들어, 어떤 패키지가 \", React.createElement(_components.code, null, \"a.go\"), \" 파일과 \", React.createElement(_components.code, null, \"b.go\"), \" 파일로 구성되어있고 둘 다 \", React.createElement(_components.code, null, \"init\"), \" 함수가 정의되어 있을 경우 \", React.createElement(_components.code, null, \"a.go\"), \" 파일에 있는 \", React.createElement(_components.code, null, \"init\"), \" 함수(들)가 먼저 실행된다.\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"init-함수의-한계--init-함수를-사용할-때-주의해야할-점\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#init-%ED%95%A8%EC%88%98%EC%9D%98-%ED%95%9C%EA%B3%84--init-%ED%95%A8%EC%88%98%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%A0-%EB%95%8C-%EC%A3%BC%EC%9D%98%ED%95%B4%EC%95%BC%ED%95%A0-%EC%A0%90\",\n    \"aria-label\": \"init 함수의 한계  init 함수를 사용할 때 주의해야할 점 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"init 함수의 한계 (= init 함수를 사용할 때 주의해야할 점)\"), \"\\n\", React.createElement(_components.p, null, \"먼저, 잘못된 예시를 확인하고 이를 통해 배워보자.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-go\"\n  }, \"var db *sql.DB\\n\\nfunc init() {\\n\\tdataSourceName := os.Getenv(\\\"MYSQL_DATA_SOURCE_NAME\\\")\\n\\td, err := sql.Open(\\\"mysql\\\", dataSourceName)\\n\\tif err != nil {\\n\\t\\tlog.Panic(err)\\n\\t}\\n\\tif err = d.Ping; err != nil {\\n\\t\\tlog.Panic(err)\\t\\n\\t}\\n\\tdb = d\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"위 코드를 통해 init 함수의 3가지 단점을 확인할 수 있다.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"init\"), \" 함수는 에러 핸들링이 힘들다.\\n\", React.createElement(_components.code, null, \"init\"), \" 함수는 어느 누구에게도 return 하지 않기 때문에 error를 상위에 전달하는 방법은 \", React.createElement(_components.code, null, \"panic\"), \" 뿐이고, 그 \", React.createElement(_components.code, null, \"panic\"), \"을 restore할 주체도 존재하지 않기 때문에 사실상 \", React.createElement(\"u\", null, \"error 발생을 알리는 유일한 방법은 panic으로 프로세스가 비정상 종료\"), \" 되는 것 뿐이다.\\n위 코드와 같이 핵심적인 부분이라면 \", React.createElement(_components.code, null, \"panic\"), \" 상태로 종료되어도 괜찮을 수 있지만, minor한 모듈 하나의 \", React.createElement(_components.code, null, \"init\"), \"과정에서 실패했다고 application 전체가 중단되는 것은 바람직하지 않다.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"전체 package를 테스트 하기 힘들어진다.\"), \"\\n\", React.createElement(_components.p, null, \"참고로, \", React.createElement(_components.code, null, \"init\"), \" 함수는 개발자가 호출할 수 없기 때문에 \", React.createElement(_components.code, null, \"init\"), \"에 대한 단위 테스트는 할 수 없다. 또한, 해당 package에 대한 test는 \", React.createElement(_components.code, null, \"init\"), \" 함수가 호출된 후에야 test case들이 실행된다.\"), \"\\n\", React.createElement(_components.p, null, \"만약 DB 연결을 생성할 필요가 없는 util 함수에 대한 단위테스트를 추가한다고해도, \", React.createElement(_components.code, null, \"init\"), \" 과정이 실패한다면 해당 test case 역시 실패할 것이다 .\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"init\"), \"은 import하는 순간 dependency tree에 의해 결정된 순서대로 실행되므로, 어떠한 side effect가 발생할지도 예상하기 어렵다. 즉, 분리된 환경이라고 생각했지만 아닐 수도 있다는 것.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"init\"), \" 으로 인한 state의 변경사항을 \", React.createElement(_components.em, null, \"global variable\"), \"에 저장해야한다.\"), \"\\n\", React.createElement(_components.p, null, \"global variable은 package 내의 함수라면 누구나 그 값에 접근하여 변경할 수 있다. 또한 global variable에 의존하는 함수를 격리할 수 없기 때문에 unit test를 작성하기 힘들다.\"), \"\\n\", React.createElement(_components.p, null, \"따라서 global variable을 이용하기보다는 encapsulation을 진행하는게 바람직한다.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"위의 repository 초기화 부분의 코드를 일반 함수로 빼내어 변경하면 다음과 같다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-go\"\n  }, \"func createClient(dsn string) (*sql.DB, error) {\\n  db, err := sql.Open(\\\"mysql\\\", dsn)\\n  if err != nil {\\n    return nil, err\\n  }\\n  if err = db.Ping(); err != nil {\\n    return nil, err\\n  }\\n  return db, nil\\n}\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"error 처리를 상위 호출자에게 전달함으로서 app 전체가 crash하지 않을 수 있다.\"), \"\\n\", React.createElement(_components.li, null, \"해당 초기화 함수가 올바르게 동작하는지 확인하는 통합 테스트를 작성할 수 있다.\"), \"\\n\", React.createElement(_components.li, null, \"connection pool이 global variable로 노출되어있지 않고, 함수 안에 encapsulated 되어있다.\"), \"\\n\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"init을-사용해도-좋은-경우\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#init%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%B4%EB%8F%84-%EC%A2%8B%EC%9D%80-%EA%B2%BD%EC%9A%B0\",\n    \"aria-label\": \"init을 사용해도 좋은 경우 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"init을 사용해도 좋은 경우\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"init\"), \"은 남용해서는 안되지만 handy한 경우도 있다. \", React.createElement(_components.code, null, \"init\"), \"함수가 유용한 경우는 \", React.createElement(_components.code, null, \"init\"), \"의 단점을 역으로 생각해보면 된다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.em, null, \"global variable\"), \"의 상태를 변경할 일이 없거나,\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"init\"), \" 과정에서 에러가 발생할 일이 (거의) 없는 초기화 작업의 경우.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"공식 \", React.createElement(_components.a, {\n    href: \"https://cs.opensource.google/go/x/website/+/e0d934b4:blog/blog.go;l=32\",\n    target: \"_self\",\n    rel: \"nofollow\"\n  }, \"Go blog\"), \"를 보면 static http 설정을 \", React.createElement(_components.code, null, \"init\"), \" 함수를 이용해 처리한다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-go\"\n  }, \"func init() {\\n\\t// Redirect \\\"/blog/\\\" to \\\"/\\\", because the menu bar link is to \\\"/blog/\\\"\\n\\t// but we're serving from the root.\\n\\tredirect := func(w http.ResponseWriter, r *http.Request) {\\n\\t\\thttp.Redirect(w, r, \\\"/\\\", http.StatusFound)\\n\\t}\\n\\thttp.HandleFunc(\\\"/blog\\\", redirect)\\n\\thttp.HandleFunc(\\\"/blog/\\\", redirect)\\n\\n\\t// Keep these static file handlers in sync with app.yaml.\\n\\tstatic := http.FileServer(http.Dir(\\\"static\\\"))\\n\\thttp.Handle(\\\"/favicon.ico\\\", static)\\n\\thttp.Handle(\\\"/fonts.css\\\", static)\\n\\thttp.Handle(\\\"/fonts/\\\", static)\\n\\n\\thttp.Handle(\\\"/lib/godoc/\\\", http.StripPrefix(\\\"/lib/godoc/\\\", http.HandlerFunc(staticHandler)))\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"에러가 발생할 일이 없고, global variable에 접근하지 않는다. 따라서 unit test에도 영향을 주지 않는다.\"), \"\\n\", React.createElement(_components.p, null, \"이렇게 handy하게 이용할 수 있는 경우도 있지만, \", React.createElement(_components.strong, null, \"대부분의 경우 initialize 작업은 별도의 함수로 만들어 처리\"), \"하는 것이 좋다.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"ref\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#ref\",\n    \"aria-label\": \"ref permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Ref\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"100 Go mistakes and How to Avoid Them\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/leobang17.github.io/leobang17.github.io/documents/GoLang/Go-init-function.md\";\nimport React from 'react';\nimport {graphql} from 'gatsby';\nimport ArticleLayout from 'components/Layout/ArticleLayout';\nimport MarkdownWrapper from 'components/MarkdownWrapper';\nimport ArticleFrontmatter from 'components/ArticleFrontmatter';\nimport ArticlePageContext from 'contexts/ArticlePageContext';\nimport Utterances from 'components/Utterance';\nimport RecentPosts from 'components/RecentPosts/RecentPosts';\nconst isBrowser = typeof window !== undefined;\nconst ArticlePage = ({data, children, serverData}) => {\n  const {prevPost, nextPost} = data;\n  const frontmatters = {\n    ...data.mdx.frontmatter,\n    timeToRead: data.mdx.fields.timeToRead\n  };\n  return React.createElement(ArticlePageContext, {\n    data: data\n  }, React.createElement(ArticleLayout, null, React.createElement(ArticleFrontmatter, frontmatters), React.createElement(MarkdownWrapper, null, children), React.createElement(RecentPosts, {\n    prev: prevPost,\n    next: nextPost\n  }), React.createElement(Utterances)));\n};\nArticlePage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ArticlePage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String, $nextId: String, $prevId: String) {\n    mdx(id: { eq: $id }) {\n      id\n      fields {\n        slug\n        timeToRead\n        categoryDirectory\n      }\n      frontmatter {\n        title\n        createdAt(formatString: \"MMMM DD, YYYY\")\n      }\n      tableOfContents\n    }\n    prevPost: mdx(id: { eq: $prevId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    nextPost: mdx(id: { eq: $nextId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\nexport {ArticlePageHead as Head} from 'components/head';\n"],"names":["_createMdxContent","props","_components","Object","assign","p","code","ul","li","em","h4","a","div","strong","pre","ol","h2","_provideComponents","components","React","id","style","position","href","className","dangerouslySetInnerHTML","__html","target","rel","wrapper","MDXLayout","ArticlePage","data","children","serverData","prevPost","nextPost","frontmatters","mdx","frontmatter","timeToRead","fields","ArticlePageContext","ArticleLayout","ArticleFrontmatter","MarkdownWrapper","RecentPosts","prev","next","Utterances","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}