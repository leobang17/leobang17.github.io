{"version":3,"file":"component---src-templates-article-page-jsx-content-file-path-home-runner-work-leobang-17-github-io-leobang-17-github-io-documents-algorithm-130-surrounded-regions-md-5660ee8f9fc8bbd77eeb.js","mappings":"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","sources":["webpack://gatsby-theme-simplex/./documents/Algorithm/130.Surrounded-Regions.md","webpack://gatsby-theme-simplex/./src/templates/ArticlePage.jsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    div: \"div\",\n    p: \"p\",\n    code: \"code\",\n    h4: \"h4\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, {\n    id: \"문제\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EB%AC%B8%EC%A0%9C\",\n    \"aria-label\": \"문제 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"문제\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://leetcode.com/problems/surrounded-regions/description/?envType=study-plan-v2&envId=top-interview-150\",\n    target: \"_self\",\n    rel: \"nofollow\"\n  }, \"130. Surrounded Regions\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"m\"), \" * \", React.createElement(_components.code, null, \"n\"), \"의 2차원 배열 \", React.createElement(_components.code, null, \"board\"), \"가 주어진다. \", React.createElement(_components.code, null, \"board\"), \"는 \", React.createElement(_components.code, null, \"\\\"X\\\"\"), \" 혹은 \", React.createElement(_components.code, null, \"\\\"O\\\"\"), \"으로 이루어져 있다. 사방이 \", React.createElement(_components.code, null, \"\\\"X\\\"\"), \"으로 둘러싸인 \", React.createElement(_components.code, null, \"\\\"O\\\"\"), \" 지역을 \", React.createElement(_components.code, null, \"\\\"X\\\"\"), \"으로 뒤집으려고 한다.\\n주어진 \", React.createElement(_components.code, null, \"board\"), \" 배열을 조작하고 다른 것을 반환하지 말 것.\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"constraints\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#constraints\",\n    \"aria-label\": \"constraints permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Constraints\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"m == board.length\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"n == board[i].length\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"1 <= m, n <= 200\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"board[i][j] is 'X' or 'O'.\")), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"approach---graph-bfs\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#approach---graph-bfs\",\n    \"aria-label\": \"approach   graph bfs permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Approach - Graph (BFS)\"), \"\\n\", React.createElement(_components.p, null, \"사방이 X로 둘러싸인 지역 = index의 끝 부분에 걸쳐있는 노드가 없는 지역을 말한다.\\nBFS로 연결된 “O” 지역을 탐색하며 index의 끝에 존재하는 노드가 있는지 확인하고, 이 결과를 플래그에 저장한다. 탐색한 노드들(인접한 “O”들로 연결되어있는 노드들)은 stack에 따로 담긴다.\\n플래그가 True일 경우 사방이 “X”로 둘러싸인 지역이라는 뜻이므로 stack에 존재하는 모든 노드를 “X”로 바꾸어 준다.\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"complexity\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#complexity\",\n    \"aria-label\": \"complexity permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Complexity\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"time complexity: `O()\"), \"\\n\", React.createElement(_components.li, null, \"space complexity:\"), \"\\n\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"code\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#code\",\n    \"aria-label\": \"code permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Code\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"from collections import deque\\n\\nclass Solution:\\n    def solve(self, board: List[List[str]]) -> None:\\n        dx, dy = [-1, 0, 1, 0], [0, 1, 0, -1]\\n        N, M = len(board), len(board[0])\\n        visited = [[False for _ in range(M)] for _ in range(N)]\\n        \\n        for i in range(N):\\n            for j in range(M):\\n                if visited[i][j] or board[i][j] == \\\"X\\\":\\n                    continue\\n                flag = True\\n                stack = [(i, j)]\\n                q = deque([(i, j)])\\n\\n                while q:\\n                   x, y = q.popleft()\\n                   \\n                   for k in range(4):\\n                        nx, ny = x + dx[k], y + dy[k]\\n                        if 0 > nx or nx >= N or 0 > ny or ny >= M:\\n                            flag = False\\n                        elif not visited[nx][ny] and board[nx][ny] == \\\"O\\\":\\n                            q.append((nx, ny))\\n                            stack.append((nx, ny))\\n                            visited[nx][ny] = True\\n                if flag:\\n                    for x, y in stack:\\n                        board[x][y] = \\\"X\\\"\\n\")), \"\\n\", React.createElement(_components.h2, {\n    id: \"approach---graph-그런데-더-좋은-아이디어\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#approach---graph-%EA%B7%B8%EB%9F%B0%EB%8D%B0-%EB%8D%94-%EC%A2%8B%EC%9D%80-%EC%95%84%EC%9D%B4%EB%94%94%EC%96%B4\",\n    \"aria-label\": \"approach   graph 그런데 더 좋은 아이디어 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Approach - Graph, 그런데 더 좋은 아이디어.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://www.youtube.com/watch?v=9z2BunfoZ5Y\",\n    target: \"_self\",\n    rel: \"nofollow\"\n  }, \"NeetCode의 해설\"), \"에 있던 솔루션. 아이디어가 참 좋았다..!\"), \"\\n\", React.createElement(_components.p, null, \"사방이 “X”로 둘러싸인 “O” 지역을 발견하는게 아니라, 발상의 전환을 해서 사방이 “X”로 둘러싸이지 않은 지역을 발견하는 것. 사방이 “X”로 둘러싸이지 않은 지역은, “O” 지역의 노드 중 하나 이상이 index의 끝에 위치한 노드였었다.\\n그 말인즉, index의 끝에 위치한 노드가 “O” 지역일 경우 해당 노드와 인접한 “O” 지역은 모두 “X”로 변하지 않아도 되는 지역인 것이다.\\n내 풀이처럼 굳이 매 노드를 순회하며 그래프 탐색을 수행하고, flag로 기억하고, stack에 넣은 노드들을 “X”로 다시 바꾸어주는 번거로운 과정이 필요없어졌다.\\n그냥 가생이만 돌면서 “O”를 발견하면 그래프 탐색을 시작하면 된다!\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"complexity-1\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#complexity-1\",\n    \"aria-label\": \"complexity 1 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Complexity\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"time complexity:\"), \"\\n\", React.createElement(_components.li, null, \"space complexity:\"), \"\\n\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"code-1\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#code-1\",\n    \"aria-label\": \"code 1 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Code\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"from collections import deque\\n\\nclass Solution:\\n    def solve(self, board: List[List[str]]) -> None:\\n        dx, dy = [-1, 0, 1, 0], [0, 1, 0, -1]\\n        N, M = len(board), len(board[0])\\n        visited = [[False for _ in range(M)] for _ in range(N)]\\n        \\n        for i in range(N):\\n            for j in range(M):\\n                if visited[i][j] or board[i][j] == \\\"X\\\":\\n                    continue\\n\\n                if i == 0 or i == N - 1 or j == 0 or j == M - 1:\\n                    stack = [(i, j)]\\n                    visited[i][j] = True\\n                    board[i][j] = \\\"T\\\"\\n                    \\n                    while stack:\\n                        x, y = stack.pop()\\n                        \\n                        for k in range(4):\\n                            nx, ny = x + dx[k], y + dy[k]\\n                            if 0 <= nx < N and 0 <= ny < M and not visited[nx][ny] and board[nx][ny] == \\\"O\\\":\\n                                visited[nx][ny] = True\\n                                board[nx][ny] = \\\"T\\\"\\n                                stack.append((nx, ny))\\n        \\n        for i in range(N):\\n            for j in range(M):\\n                if board[i][j] == \\\"O\\\":\\n                    board[i][j] = \\\"X\\\"\\n                elif board[i][j] == \\\"T\\\":\\n                    board[i][j] = \\\"O\\\"\\n\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/leobang17.github.io/leobang17.github.io/documents/Algorithm/130.Surrounded-Regions.md\";\nimport React from 'react';\nimport {graphql} from 'gatsby';\nimport ArticleLayout from 'components/Layout/ArticleLayout';\nimport MarkdownWrapper from 'components/MarkdownWrapper';\nimport ArticleFrontmatter from 'components/ArticleFrontmatter';\nimport ArticlePageContext from 'contexts/ArticlePageContext';\nimport Utterances from 'components/Utterance';\nimport RecentPosts from 'components/RecentPosts/RecentPosts';\nconst isBrowser = typeof window !== undefined;\nconst ArticlePage = ({data, children, serverData}) => {\n  const {prevPost, nextPost} = data;\n  const frontmatters = {\n    ...data.mdx.frontmatter,\n    timeToRead: data.mdx.fields.timeToRead\n  };\n  return React.createElement(ArticlePageContext, {\n    data: data\n  }, React.createElement(ArticleLayout, null, React.createElement(ArticleFrontmatter, frontmatters), React.createElement(MarkdownWrapper, null, children), React.createElement(RecentPosts, {\n    prev: prevPost,\n    next: nextPost\n  }), React.createElement(Utterances)));\n};\nArticlePage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ArticlePage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String, $nextId: String, $prevId: String) {\n    mdx(id: { eq: $id }) {\n      id\n      fields {\n        slug\n        timeToRead\n        categoryDirectory\n      }\n      frontmatter {\n        title\n        createdAt(formatString: \"MMMM DD, YYYY\")\n      }\n      tableOfContents\n    }\n    prevPost: mdx(id: { eq: $prevId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    nextPost: mdx(id: { eq: $nextId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\nexport {ArticlePageHead as Head} from 'components/head';\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","a","div","p","code","h4","ul","li","pre","_provideComponents","components","React","id","style","position","href","className","dangerouslySetInnerHTML","__html","target","rel","wrapper","MDXLayout","ArticlePage","data","children","serverData","prevPost","nextPost","frontmatters","mdx","frontmatter","timeToRead","fields","ArticlePageContext","ArticleLayout","ArticleFrontmatter","MarkdownWrapper","RecentPosts","prev","next","Utterances","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}