{"version":3,"file":"component---src-templates-article-page-jsx-content-file-path-users-leobang-blog-starter-documents-go-lang-go-map-md-4511e9f373cb528d34c5.js","mappings":"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","sources":["webpack://gatsby-theme-simplex/./documents/GoLang/Go-map.md","webpack://gatsby-theme-simplex/./src/templates/ArticlePage.jsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    h2: \"h2\",\n    a: \"a\",\n    div: \"div\",\n    strong: \"strong\",\n    ul: \"ul\",\n    li: \"li\",\n    em: \"em\",\n    blockquote: \"blockquote\",\n    ol: \"ol\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Go에서 map은 다른 언어의 Hash Map과 같이 key-value 쌍으로 데이터를 저장하는 자료구조이다. map은 일반적으로 O(1)의 조회, 쓰기 연산을 지원한다.\"), \"\\n\", React.createElement(_components.p, null, \"다음과 같이 map을 이용할 수 있다:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-go\"\n  }, \"// map declaration & initialize\\nm := make(map[string]int)\\n\\n// map insert\\nm[\\\"apple\\\"] = 5\\nm[\\\"banana\\\"] = 3\\n\\n// delete key\\ndelete(m, \\\"apple\\\") // key 삭제 \\n\\n// check if a key exists\\nelem, ok := m[\\\"apple\\\"] // ok는 error가 아닌 boolean이다. key가 없을 경우 ok는 false를 반환하고, elem에는 0이 반환된다.\\n\")), \"\\n\", React.createElement(_components.h2, {\n    id: \"restriction-in-key-types\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#restriction-in-key-types\",\n    \"aria-label\": \"restriction in key types permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Restriction in Key Types\"), \"\\n\", React.createElement(_components.p, null, \"map의 key와 value는 다양한 type으로 구성할 수 있다. value의 경우 모든 type을 수용할 수 있지만, \", React.createElement(_components.strong, null, \"key로 사용될 type은 모두 comparable\"), \"해야한다.\"), \"\\n\", React.createElement(_components.p, null, \"in terms of “comparable”, 다음과 같이 구분 지을 수 있다,\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"comparable\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"boolean, numeric, string, pointer, channel, interface, struct, array\"), \"\\n\", React.createElement(_components.li, null, \"struct와 array는 \", React.createElement(_components.em, null, \"포함하는 field나 element의 type이 모두 comparable할 때에만\"), \" 그 역시 comparable하다.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"incomparable\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"slices, map, function\"), \"\\n\", React.createElement(_components.li, null, \"이들은 pointer를 비교하는 것이지 각 value를 비교하는 것이 아니다.\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"array는 comparable하지만, slice는 incomparable하다. array는 길이가 고정되어있기 때문에 비교할 수 있는 것이다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"struct를 map의 key로 이용하는 예시를 보자. 특정 웹사이트의 endpoint에 접속한 조회수를 기록하고자 하는데, 이 때 국가별로 조회수를 관리하고자 한다. 단순히 생각하자면, map의 map으로 자료를 저장할 수 있겠다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-go\"\n  }, \"hits := make(map[string]map[string]int) // endpoint: country : hit_count\\n\\nhits[\\\"/docs/\\\"][\\\"au\\\"] // /docs path의 호주 조회수를 알고 싶다면.\\n\")), \"\\n\", React.createElement(_components.p, null, \"이러한 접근법은 직관적이긴 하지만, map을 초기화하고 이용하는데 여러 불편함이 생긴다. 데이터를 추가하고자할 때, 먼저 inner map이 존재하는지 확인하고 outer map을 조작해야하기 때문이다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-go\"\n  }, \"func add(m map[string]map[string]int, path, country string) {\\n    mm, ok := m[path]\\n    if !ok {\\n        mm = make(map[string]int)\\n        m[path] = mm\\n    }\\n    mm[country]++\\n}\\nadd(hits, \\\"/doc/\\\", \\\"au\\\")\\n\")), \"\\n\", React.createElement(_components.p, null, \"위와 같은 방식 대신, struct 자료형을 key로 활용함으로서 요구사항을 보다 간단하게 구현할 수 있다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-go\"\n  }, \"type Key struct {\\n  Path, Country string\\n}\\nhits := make(map[Key]int)\\n\\nhits[Key { \\\"/\\\", \\\"au\\\" }]++\\nn := hits[Key{ \\\"/ref/spec\\\", \\\"ch\\\" }]\\n\")), \"\\n\", React.createElement(_components.h2, {\n    id: \"map을-이용할-때-주의해야할-점\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#map%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%A0-%EB%95%8C-%EC%A3%BC%EC%9D%98%ED%95%B4%EC%95%BC%ED%95%A0-%EC%A0%90\",\n    \"aria-label\": \"map을 이용할 때 주의해야할 점 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Map을 이용할 때 주의해야할 점\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Map의 key-value는 순서를 보장하지 않는다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Map은 iterable한 collection이지만, key-value는 순서를 보장하지 않는다. 따라서 \", React.createElement(_components.code, null, \"for := range\"), \" 구문을 활용해 map을 iterate할 때 매번 key-value 쌍의 순서가 다를 수 있으므로 이에 유의하여 코드를 작성해야한다.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Nil Map\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"initialize되지 않은 Map, 즉, 선언만 하고 \", React.createElement(_components.code, null, \"nil\"), \"인 상태의 Map 변수에 접근해 \", React.createElement(_components.em, null, \"데이터를 쓰려고 하면\"), \" runtime panic이 발생한다. 따라서 map을 이용하기 전에 \", React.createElement(_components.code, null, \"make\"), \" function을 이용해 초기화해주어야 한다.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"하지만 \", React.createElement(_components.code, null, \"nil\"), \" map에서 읽기 시도는 panic을 발생시키지 않고, 단지 \", React.createElement(_components.code, null, \"zero value\"), \"를 반환한다.\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/leobang/blog-starter/documents/GoLang/Go-map.md\";\nimport React from 'react';\nimport {graphql} from 'gatsby';\nimport ArticleLayout from 'components/Layout/ArticleLayout';\nimport MarkdownWrapper from 'components/MarkdownWrapper';\nimport ArticleFrontmatter from 'components/ArticleFrontmatter';\nimport ArticlePageContext from 'contexts/ArticlePageContext';\nimport Utterances from 'components/Utterance';\nimport RecentPosts from 'components/RecentPosts/RecentPosts';\nconst isBrowser = typeof window !== undefined;\nconst ArticlePage = ({data, children, serverData}) => {\n  const {prevPost, nextPost} = data;\n  const frontmatters = {\n    ...data.mdx.frontmatter,\n    timeToRead: data.mdx.fields.timeToRead\n  };\n  return React.createElement(ArticlePageContext, {\n    data: data\n  }, React.createElement(ArticleLayout, null, React.createElement(ArticleFrontmatter, frontmatters), React.createElement(MarkdownWrapper, null, children), React.createElement(RecentPosts, {\n    prev: prevPost,\n    next: nextPost\n  }), React.createElement(Utterances)));\n};\nArticlePage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ArticlePage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String, $nextId: String, $prevId: String) {\n    mdx(id: { eq: $id }) {\n      id\n      fields {\n        slug\n        timeToRead\n        categoryDirectory\n      }\n      frontmatter {\n        title\n        createdAt(formatString: \"MMMM DD, YYYY\")\n      }\n      tableOfContents\n    }\n    prevPost: mdx(id: { eq: $prevId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    nextPost: mdx(id: { eq: $nextId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\nexport {ArticlePageHead as Head} from 'components/head';\n"],"names":["_createMdxContent","props","_components","Object","assign","p","pre","code","h2","a","div","strong","ul","li","em","blockquote","ol","_provideComponents","components","React","className","id","style","position","href","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","ArticlePage","data","children","serverData","prevPost","nextPost","frontmatters","mdx","frontmatter","timeToRead","fields","ArticlePageContext","ArticleLayout","ArticleFrontmatter","MarkdownWrapper","RecentPosts","prev","next","Utterances","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}