"use strict";(self.webpackChunkgatsby_theme_simplex=self.webpackChunkgatsby_theme_simplex||[]).push([[9578],{7749:function(e,t,n){n.r(t),n.d(t,{Head:function(){return p.py},default:function(){return E}});var l=n(1151),r=n(7294);function a(e){const t=Object.assign({h1:"h1",a:"a",div:"div",pre:"pre",code:"code",p:"p",blockquote:"blockquote",em:"em",ul:"ul",li:"li",h3:"h3"},(0,l.ah)(),e.components);return r.createElement(r.Fragment,null,r.createElement(t.h1,{id:"what",style:{position:"relative"}},r.createElement(t.a,{href:"#what","aria-label":"what permalink",className:"header-links before"},r.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"What"),"\n",r.createElement(t.pre,null,r.createElement(t.code,null,"io.jsonwebtoken.security.WeakKeyException: The specified key byte array is 136 bits which is not secure enough for any JWT HMAC-SHA algorithm.  The JWT JWA Specification (RFC 7518, Section 3.2) states that keys used with HMAC-SHA algorithms MUST have a size >= 256 bits (the key size must be greater than or equal to the hash output size).  Consider using the io.jsonwebtoken.security.Keys#secretKeyFor(SignatureAlgorithm) method to create a key guaranteed to be secure enough for your preferred HMAC-SHA algorithm.  See https://tools.ietf.org/html/rfc7518#section-3.2 for more information.\n")),"\n",r.createElement("br"),"\n",r.createElement("br"),"\n",r.createElement(t.h1,{id:"when",style:{position:"relative"}},r.createElement(t.a,{href:"#when","aria-label":"when permalink",className:"header-links before"},r.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"When"),"\n",r.createElement(t.p,null,r.createElement(t.code,null,"jjwt"),"로 JWT를 생성하는게 잘 되는지 확인하는 테스트 중이었다."),"\n",r.createElement(t.p,null,"jwt의 claims에 들어갈 프로퍼티들은 git으로 관리하지 않도록 무시한 yaml 파일에 저장해두고, ",r.createElement(t.code,null,"@Value")," 어노테이션을 이용해 값을 불러오고 있었다."),"\n",r.createElement(t.pre,null,r.createElement(t.code,{className:"language-yaml"},'// application-jwt.yml\njwt:\n  claims:\n    issuer: "example.com"\n  secret-key: "example-example-example-example-example-example-example-example-example"\n')),"\n",r.createElement(t.pre,null,r.createElement(t.code,{className:"language-java"},"// JwtSecretsService.java\n@Service\npublic class JwtSecretsService extends JwtPropertyService {\n\tprivate static final long TOKEN_VALID_TIME = 10 * 60 * 60 * 1000L;\n\n\tpublic Date getIssuedAt() {\n\t\treturn new Date();\n\t}\n\n\tpublic Date getExpiredAt() {\n\t\treturn new Date(getIssuedAt().getTime() + TOKEN_VALID_TIME);\n\t}\n\n\tpublic Key getSecretKey() throws DecodingException {\n\t\treturn Keys.hmacShaKeyFor(super.secret.getBytes(StandardCharsets.UTF_8));\n\t}\n}\n")),"\n",r.createElement(t.pre,null,r.createElement(t.code,{className:"language-java"},'// JwtPropertyService.java\npublic class JwtPropertyService {\n\t@Getter\n\t@Value("${jwt.claims.issuer}")\n\tprotected String issuer;\n\n\t@Value("${jwt.secret-key}")\n\tprotected String secret;\n}\n')),"\n",r.createElement(t.p,null,"에러는 ",r.createElement(t.code,null,"JwtSecretsService")," 클래스의 ",r.createElement(t.code,null,"getSecretKey()")," 메서드에서 호출하는 ",r.createElement(t.code,null,"Decoders.BASE64URL.decode()"),"메서드 속에서 발생했다."),"\n",r.createElement("br"),"\n",r.createElement("br"),"\n",r.createElement(t.h1,{id:"why",style:{position:"relative"}},r.createElement(t.a,{href:"#why","aria-label":"why permalink",className:"header-links before"},r.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Why"),"\n",r.createElement(t.p,null,"에러 메시지를 읽어보면 내가 설정한 secret key가 너무 작아 생긴 문제다. ",r.createElement(t.code,null,"jjwt")," 라이브러리는 취약한 secret key 이용을 방지하기 위해, 유저가 이용하는 서명 알고리즘마다 최소로 요구하는 key의 크기가 존재한다. 내가 이용한 ",r.createElement(t.code,null,"JWT HMAC-SHA")," 알고리즘의 경우 256bit 이상의 크기를 요구하는데, 내가 선언한 이용하려는 secret key는 136bit 밖에 안된다는 것이다."),"\n",r.createElement(t.blockquote,null,"\n",r.createElement(t.p,null,r.createElement(t.em,null,"This means that JJWT - a specification-compliant library - will also enforce that you use sufficiently strong keys for the algorithms you choose. If you provide a weak key for a given algorithm, JJWT will reject it and throw an exception.")),"\n",r.createElement(t.p,null,"…"),"\n",r.createElement(t.ul,null,"\n",r.createElement(t.li,null,"\n",r.createElement(t.p,null,r.createElement(t.code,null,"HS256")," is HMAC-SHA-256, and that produces digests that are 256 bits (32 bytes) long, so ",r.createElement(t.code,null,"HS256")," ",r.createElement(t.em,null,"requires"),"that you use a secret key that is at least 32 bytes long."),"\n"),"\n"),"\n"),"\n",r.createElement(t.p,null,r.createElement(t.a,{href:"https://github.com/jwtk/jjwt#jws-create",target:"_self",rel:"nofollow"},"https://github.com/jwtk/jjwt#jws-create")),"\n",r.createElement("br"),"\n",r.createElement(t.p,null,"이런 사항들은 충분히 인지하고 코드를 짰고, 따라서 secret key도 충분한 크기로 정의해두었는데 whyrano."),"\n",r.createElement(t.p,null,"혹시나 해서 ",r.createElement(t.code,null,"JwtPropertyService")," 가 가져오는 secret key를 터미널에 찍어보니 그 이유가 나왔다."),"\n",r.createElement(t.pre,null,r.createElement(t.code,null,"secretKey = jwt.secret-key\n")),"\n",r.createElement(t.p,null,r.createElement(t.code,null,"JwtPropertyService")," 가 프로퍼티 값을 제대로 찾아오는지 확인하는 테스트도 선행했었는데 이 때는 스프링의 모든 bean을 로드하는 ",r.createElement(t.code,null,"@SpringBootTest"),"를 이용했었다. 이번에는 sliced test를 진행했는데 이와 같은 환경에서는 ",r.createElement(t.code,null,"@Value")," 어노테이션이 부착된 필드에 값을 주입해주는 역할을 하는 bean이 로드되지 않아 생기는 문제 “같았다”. ",r.createElement(t.code,null,"@Value")," 어노테이션의 작동 방식은 공식문서를 통해 확인했지만 어떤 Bean이 값을 주입해주는지는 찾지 못했다."),"\n",r.createElement(t.p,null,"사실 더 원인에 대해 더 딮하게 파봐야 하는게 맞지만 요즘 작업 진척이 늦어 나중으로 미뤘다. 요즘 작업 진척이 너무 느려서 , , 맘이 급했다."),"\n",r.createElement("br"),"\n",r.createElement("br"),"\n",r.createElement(t.h1,{id:"how",style:{position:"relative"}},r.createElement(t.a,{href:"#how","aria-label":"how permalink",className:"header-links before"},r.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"How"),"\n",r.createElement(t.p,null,"두가지 방법이 있다. Reflection을 이용하는 방법과 ",r.createElement(t.code,null,"@TestPropertySource")," 어노테이션을 이용하는 방식이다."),"\n",r.createElement(t.h3,{id:"reflectiontestutils를-이용한-방식",style:{position:"relative"}},r.createElement(t.a,{href:"#reflectiontestutils%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EB%B0%A9%EC%8B%9D","aria-label":"reflectiontestutils를 이용한 방식 permalink",className:"header-links before"},r.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"ReflectionTestUtils를 이용한 방식"),"\n",r.createElement(t.p,null,r.createElement(t.code,null,"ReflectionTestUtils"),"의 ",r.createElement(t.code,null,"setField()")," 메서드를 이용해 값을 직접 정의해주는 방식이 있다"),"\n",r.createElement("br"),"\n",r.createElement(t.h3,{id:"testpropertysource를-이용한-방식",style:{position:"relative"}},r.createElement(t.a,{href:"#testpropertysource%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EB%B0%A9%EC%8B%9D","aria-label":"testpropertysource를 이용한 방식 permalink",className:"header-links before"},r.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"@TestPropertySource를 이용한 방식"),"\n",r.createElement(t.p,null,"통합 테스트 (sliced test 역시 통합 테스트이다.)를 위해 로드되는 ",r.createElement(t.code,null,"ApplicationContext"),"의",r.createElement(t.code,null,"PropertySource"),"를 인라인으로 추가하도록 도와준다. 다음과 같이 이용할 수 있다."),"\n",r.createElement(t.pre,null,r.createElement(t.code,{className:"language-java"},'@ContextConfiguration\n@TestPropertySource("/test.properties") \nclass MyIntegrationTests {\n    // class body...\n}\n')),"\n",r.createElement(t.p,null,"그런데 이렇게 해도 안된다. 애초에 properties 파일의 값을 읽어서 ",r.createElement(t.code,null,"@Value")," 어노테이션이 부착된 필드에 주입시켜주는 bean은 ",r.createElement(t.code,null,"@SpringBoot"),"에만 로드되는 것 같다. 직접 property를 선언해주면 해결된다."),"\n",r.createElement(t.pre,null,r.createElement(t.code,{className:"language-java"},'@ContextConfiguration\n@TestPropertySource(properties = {"timezone = GMT", "port: 4242"}) \nclass MyIntegrationTests {\n    // class body...\n}\n')),"\n",r.createElement("br"),"\n",r.createElement(t.p,null,"내 앱에는 다음과 같이 적용해 해결했다."),"\n",r.createElement(t.pre,null,r.createElement(t.code,{className:"language-java"},'@TestPropertySource(\n\tproperties = {\n\t\t"jwt.secret-key=secret_key_value_of_this_app_upper_than256_bits",\n\t\t"jwt.claims.issuer=issuer"}\n)\npublic class JwtCreationTest {\n// ...\n')),"\n",r.createElement("br"),"\n",r.createElement(t.p,null,"property 값도 다음과 같이 잘 찍힌다!"),"\n",r.createElement(t.pre,null,r.createElement(t.code,null,"secret = secret_key_value_of_this_app_upper_than256_bits\n")),"\n",r.createElement("br"),"\n",r.createElement("br"),"\n",r.createElement(t.h1,{id:"references",style:{position:"relative"}},r.createElement(t.a,{href:"#references","aria-label":"references permalink",className:"header-links before"},r.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"References"),"\n",r.createElement(t.ul,null,"\n",r.createElement(t.li,null,"\n",r.createElement(t.p,null,r.createElement(t.a,{href:"https://github.com/jwtk/jjwt#jws-create",target:"_self",rel:"nofollow"},"https://github.com/jwtk/jjwt#jws-create")),"\n"),"\n",r.createElement(t.li,null,"\n",r.createElement(t.p,null,r.createElement(t.a,{href:"https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#beans-value-annotations",target:"_self",rel:"nofollow"},"https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#beans-value-annotations")),"\n"),"\n",r.createElement(t.li,null,"\n",r.createElement(t.p,null,r.createElement(t.a,{href:"https://docs.spring.io/spring-framework/docs/current/reference/html/testing.html#spring-testing-annotation-testpropertysource",target:"_self",rel:"nofollow"},"https://docs.spring.io/spring-framework/docs/current/reference/html/testing.html#spring-testing-annotation-testpropertysource")),"\n"),"\n",r.createElement(t.li,null,"\n",r.createElement(t.p,null,r.createElement(t.a,{href:"https://stackoverflow.com/questions/17353327/populating-spring-value-during-unit-test",target:"_self",rel:"nofollow"},"https://stackoverflow.com/questions/17353327/populating-spring-value-during-unit-test")),"\n"),"\n"))}var c=function(e={}){const{wrapper:t}=Object.assign({},(0,l.ah)(),e.components);return t?r.createElement(t,e,r.createElement(a,e)):a(e)},s=n(5670),o=n(1326),i=n(4517),m=n(698),u=n(8627),h=n(662),p=n(1873);const d=({data:e,children:t,serverData:n})=>{const{prevPost:l,nextPost:a}=e,c={...e.mdx.frontmatter,timeToRead:e.mdx.fields.timeToRead};return r.createElement(m.Z,{data:e},r.createElement(s.Z,null,r.createElement(i.Z,c),r.createElement(o.Z,null,t),r.createElement(h.Z,{prev:l,next:a}),r.createElement(u.Z)))};function E(e){return r.createElement(d,e,r.createElement(c,e))}}}]);
//# sourceMappingURL=component---src-templates-article-page-jsx-content-file-path-home-runner-work-leobang-17-github-io-leobang-17-github-io-documents-spring-value-annotation-slice-test에서-이용하기-md-c9374cfa338d2d83aa35.js.map