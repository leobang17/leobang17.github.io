{"version":3,"file":"component---src-templates-article-page-jsx-content-file-path-home-runner-work-leobang-17-github-io-leobang-17-github-io-documents-go-lang-go-project-best-practice-md-8d62dd0bd0e6849869c3.js","mappings":"oOAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,IAAK,MACLC,EAAG,IACHC,GAAI,KACJC,GAAI,KACJC,OAAQ,SACRC,KAAM,OACNC,IAAK,MACLC,WAAY,aACZC,GAAI,KACJC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,MAAsBjB,EAAMkB,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBlB,EAAYG,GAAI,CACnFgB,GAAI,+BACJC,MAAO,CACLC,SAAU,aAEXH,EAAAA,cAAoBlB,EAAYI,EAAG,CACpCkB,KAAM,wFACN,aAAc,yCACdC,UAAW,uBACVL,EAAAA,cAAoBlB,EAAYK,IAAK,CACtCmB,wBAAyB,CACvBC,OAAQ,meAEP,kCAAmC,KAAMP,EAAAA,cAAoBlB,EAAYM,EAAG,KAAM,iGAAkGY,EAAAA,cAAoBlB,EAAYI,EAAG,CAC1NkB,KAAM,qDACNI,OAAQ,QACRC,IAAK,YACJ,kBAAmB,eAAgB,KAAMT,EAAAA,cAAoBlB,EAAYO,GAAI,KAAM,KAAMW,EAAAA,cAAoBlB,EAAYQ,GAAI,KAAMU,EAAAA,cAAoBlB,EAAYS,OAAQ,KAAM,QAAS,mCAAoCS,EAAAA,cAAoBlB,EAAYU,KAAM,KAAM,OAAQ,SAAUQ,EAAAA,cAAoBlB,EAAYU,KAAM,KAAM,WAAY,SAAUQ,EAAAA,cAAoBlB,EAAYU,KAAM,KAAM,oBAAqB,OAAQ,KAAMQ,EAAAA,cAAoBlB,EAAYQ,GAAI,KAAMU,EAAAA,cAAoBlB,EAAYS,OAAQ,KAAM,aAAc,oEAAqE,KAAMS,EAAAA,cAAoBlB,EAAYQ,GAAI,KAAMU,EAAAA,cAAoBlB,EAAYS,OAAQ,KAAM,QAAS,qCAAsC,KAAMS,EAAAA,cAAoBlB,EAAYQ,GAAI,KAAMU,EAAAA,cAAoBlB,EAAYS,OAAQ,KAAM,SAAU,+GAAgHS,EAAAA,cAAoBlB,EAAYU,KAAM,KAAM,SAAU,YAAa,KAAMQ,EAAAA,cAAoBlB,EAAYQ,GAAI,KAAMU,EAAAA,cAAoBlB,EAAYS,OAAQ,KAAM,YAAa,iBAAkB,KAAMS,EAAAA,cAAoBlB,EAAYQ,GAAI,KAAMU,EAAAA,cAAoBlB,EAAYS,OAAQ,KAAM,SAAU,kBAAmB,KAAMS,EAAAA,cAAoBlB,EAAYQ,GAAI,KAAMU,EAAAA,cAAoBlB,EAAYS,OAAQ,KAAM,aAAc,KAAM,KAAMS,EAAAA,cAAoBlB,EAAYQ,GAAI,KAAMU,EAAAA,cAAoBlB,EAAYS,OAAQ,KAAM,QAAS,2DAA4D,KAAMS,EAAAA,cAAoBlB,EAAYQ,GAAI,KAAMU,EAAAA,cAAoBlB,EAAYS,OAAQ,KAAM,QAAS,6CAA8C,KAAMS,EAAAA,cAAoBlB,EAAYQ,GAAI,KAAMU,EAAAA,cAAoBlB,EAAYS,OAAQ,KAAM,UAAW,mCAAoC,KAAMS,EAAAA,cAAoBlB,EAAYQ,GAAI,KAAMU,EAAAA,cAAoBlB,EAAYS,OAAQ,KAAM,YAAa,iCAAkC,KAAMS,EAAAA,cAAoBlB,EAAYQ,GAAI,KAAMU,EAAAA,cAAoBlB,EAAYS,OAAQ,KAAM,WAAY,oDAAqD,MAAO,KAAMS,EAAAA,cAAoBlB,EAAYM,EAAG,KAAM,cAAeY,EAAAA,cAAoBlB,EAAYU,KAAM,KAAM,QAAS,+BAAgCQ,EAAAA,cAAoBlB,EAAYU,KAAM,KAAM,QAAS,KAAMQ,EAAAA,cAAoBlB,EAAYU,KAAM,KAAM,aAAc,KAAMQ,EAAAA,cAAoBlB,EAAYU,KAAM,KAAM,QAAS,WAAY,KAAMQ,EAAAA,cAAoBlB,EAAYG,GAAI,CAC59EgB,GAAI,uBACJC,MAAO,CACLC,SAAU,aAEXH,EAAAA,cAAoBlB,EAAYI,EAAG,CACpCkB,KAAM,wBACN,aAAc,iCACdC,UAAW,uBACVL,EAAAA,cAAoBlB,EAAYK,IAAK,CACtCmB,wBAAyB,CACvBC,OAAQ,meAEP,wBAAyB,KAAMP,EAAAA,cAAoBlB,EAAYM,EAAG,KAAM,YAAaY,EAAAA,cAAoBlB,EAAYS,OAAQ,KAAM,yBAA0B,sGAAuGS,EAAAA,cAAoBlB,EAAYU,KAAM,KAAM,OAAQ,kBAAmB,KAAMQ,EAAAA,cAAoBlB,EAAYW,IAAK,KAAMO,EAAAA,cAAoBlB,EAAYU,KAAM,KAAM,4FAA6F,KAAMQ,EAAAA,cAAoBlB,EAAYM,EAAG,KAAMY,EAAAA,cAAoBlB,EAAYU,KAAM,KAAM,OAAQ,mEAAoEQ,EAAAA,cAAoBlB,EAAYU,KAAM,KAAM,aAAc,KAAMQ,EAAAA,cAAoBlB,EAAYU,KAAM,KAAM,QAAS,eAAgBQ,EAAAA,cAAoBlB,EAAYS,OAAQ,KAAMS,EAAAA,cAAoBlB,EAAYU,KAAM,KAAM,YAAa,UAAWQ,EAAAA,cAAoBlB,EAAYU,KAAM,KAAM,OAAQ,yBAA0B,YAAa,KAAMQ,EAAAA,cAAoBlB,EAAYY,WAAY,KAAM,KAAMM,EAAAA,cAAoBlB,EAAYM,EAAG,KAAM,yGAA0G,MAAO,KAAMY,EAAAA,cAAoBlB,EAAYM,EAAG,KAAM,yGAA0G,KAAMY,EAAAA,cAAoBlB,EAAYa,GAAI,CAC55CM,GAAI,wBACJC,MAAO,CACLC,SAAU,aAEXH,EAAAA,cAAoBlB,EAAYI,EAAG,CACpCkB,KAAM,yBACN,aAAc,kCACdC,UAAW,uBACVL,EAAAA,cAAoBlB,EAAYK,IAAK,CACtCmB,wBAAyB,CACvBC,OAAQ,meAEP,yBAA0B,KAAMP,EAAAA,cAAoBlB,EAAYM,EAAG,KAAM,4CAA6C,KAAMY,EAAAA,cAAoBlB,EAAYc,GAAI,KAAM,KAAMI,EAAAA,cAAoBlB,EAAYQ,GAAI,KAAM,KAAMU,EAAAA,cAAoBlB,EAAYM,EAAG,KAAM,yBAA0B,KAAMY,EAAAA,cAAoBlB,EAAYM,EAAG,KAAM,wDAAyD,MAAO,MAAO,KAAMY,EAAAA,cAAoBlB,EAAYc,GAAI,CAClcc,MAAO,KACN,KAAMV,EAAAA,cAAoBlB,EAAYQ,GAAI,KAAM,KAAMU,EAAAA,cAAoBlB,EAAYM,EAAG,KAAM,yBAA0B,KAAMY,EAAAA,cAAoBlB,EAAYM,EAAG,KAAM,mFAAoF,MAAO,KAAMY,EAAAA,cAAoBlB,EAAYQ,GAAI,KAAM,KAAMU,EAAAA,cAAoBlB,EAAYM,EAAG,KAAM,gCAAiC,KAAMY,EAAAA,cAAoBlB,EAAYM,EAAG,KAAM,kCAAmCY,EAAAA,cAAoBlB,EAAYe,GAAI,KAAM,oBAAqB,qBAAsB,MAAO,KAAMG,EAAAA,cAAoBlB,EAAYQ,GAAI,KAAM,KAAMU,EAAAA,cAAoBlB,EAAYM,EAAG,KAAM,eAAgBY,EAAAA,cAAoBlB,EAAYe,GAAI,KAAM,qBAAsB,WAAY,MAAO,MAAO,KAAMG,EAAAA,cAAoBlB,EAAYa,GAAI,CACryBM,GAAI,+CACJC,MAAO,CACLC,SAAU,aAEXH,EAAAA,cAAoBlB,EAAYI,EAAG,CACpCkB,KAAM,gIACN,aAAc,yDACdC,UAAW,uBACVL,EAAAA,cAAoBlB,EAAYK,IAAK,CACtCmB,wBAAyB,CACvBC,OAAQ,meAEP,iDAAkD,KAAMP,EAAAA,cAAoBlB,EAAYM,EAAG,KAAM,qMAAsM,KAAMY,EAAAA,cAAoBlB,EAAYM,EAAG,KAAM,eAAgBY,EAAAA,cAAoBlB,EAAYU,KAAM,KAAM,QAAS,KAAMQ,EAAAA,cAAoBlB,EAAYU,KAAM,KAAM,QAAS,OAAQQ,EAAAA,cAAoBlB,EAAYU,KAAM,KAAM,UAAW,wDAAyD,KAAMQ,EAAAA,cAAoBlB,EAAYW,IAAK,KAAMO,EAAAA,cAAoBlB,EAAYU,KAAM,CACxqBa,UAAW,eACV,gJAAiJ,KAAML,EAAAA,cAAoBlB,EAAYM,EAAG,KAAM,uCAAwC,KAAMY,EAAAA,cAAoBlB,EAAYW,IAAK,KAAMO,EAAAA,cAAoBlB,EAAYU,KAAM,CAChUa,UAAW,eACV,oFAA2F,KAAML,EAAAA,cAAoBlB,EAAYM,EAAG,KAAM,OAAQY,EAAAA,cAAoBlB,EAAYU,KAAM,KAAM,QAAS,wBAAyBQ,EAAAA,cAAoBlB,EAAYU,KAAM,KAAM,QAAS,qFAAsFQ,EAAAA,cAAoBlB,EAAYe,GAAI,KAAM,aAAc,oBAAqB,KAAMG,EAAAA,cAAoBlB,EAAYM,EAAG,KAAM,yBAA0BY,EAAAA,cAAoBlB,EAAYU,KAAM,KAAM,aAAc,2BAA4B,KAAMQ,EAAAA,cAAoBlB,EAAYW,IAAK,KAAMO,EAAAA,cAAoBlB,EAAYU,KAAM,CAC/qBa,UAAW,eACV,oGAAqG,KAAML,EAAAA,cAAoBlB,EAAYM,EAAG,KAAM,sDAAuDY,EAAAA,cAAoBlB,EAAYU,KAAM,KAAM,aAAc,mEAAoE,KAAMQ,EAAAA,cAAoBlB,EAAYW,IAAK,KAAMO,EAAAA,cAAoBlB,EAAYU,KAAM,CACjaa,UAAW,eACV,4EAAmF,KAAML,EAAAA,cAAoBlB,EAAYG,GAAI,CAC9HgB,GAAI,uBACJC,MAAO,CACLC,SAAU,aAEXH,EAAAA,cAAoBlB,EAAYI,EAAG,CACpCkB,KAAM,gHACN,aAAc,iCACdC,UAAW,uBACVL,EAAAA,cAAoBlB,EAAYK,IAAK,CACtCmB,wBAAyB,CACvBC,OAAQ,meAEP,wBAAyB,KAAMP,EAAAA,cAAoBlB,EAAYM,EAAG,KAAM,eAAgBY,EAAAA,cAAoBlB,EAAYU,KAAM,KAAM,UAAW,MAAOQ,EAAAA,cAAoBlB,EAAYU,KAAM,KAAM,aAAc,KAAMQ,EAAAA,cAAoBlB,EAAYU,KAAM,KAAM,QAAS,yBAA0BQ,EAAAA,cAAoBlB,EAAYU,KAAM,KAAM,UAAW,sFAAuF,KAAMQ,EAAAA,cAAoBlB,EAAYc,GAAI,KAAM,KAAMI,EAAAA,cAAoBlB,EAAYQ,GAAI,KAAM,KAAMU,EAAAA,cAAoBlB,EAAYM,EAAG,KAAM,iBAAkBY,EAAAA,cAAoBlB,EAAYU,KAAM,KAAM,KAAM,wBAAyB,MAAO,KAAMQ,EAAAA,cAAoBlB,EAAYQ,GAAI,KAAM,KAAMU,EAAAA,cAAoBlB,EAAYM,EAAG,KAAM,yCAA0CY,EAAAA,cAAoB,IAAK,KAAM,UAAW,gBAAiB,MAAO,KAAMA,EAAAA,cAAoBlB,EAAYQ,GAAI,KAAM,KAAMU,EAAAA,cAAoBlB,EAAYM,EAAG,KAAM,0BAA2BY,EAAAA,cAAoBlB,EAAYU,KAAM,KAAM,kBAAmB,0BAA2B,KAAMQ,EAAAA,cAAoBlB,EAAYW,IAAK,KAAMO,EAAAA,cAAoBlB,EAAYU,KAAM,CAC/pCa,UAAW,eACV,iIAAkI,KAAML,EAAAA,cAAoBlB,EAAYM,EAAG,KAAM,iBAAkBY,EAAAA,cAAoBlB,EAAYe,GAAI,KAAM,cAAe,sCAAuC,MAAO,KAAMG,EAAAA,cAAoBlB,EAAYQ,GAAI,KAAM,KAAMU,EAAAA,cAAoBlB,EAAYM,EAAG,KAAM,mBAAoBY,EAAAA,cAAoB,IAAK,KAAM,UAAW,WAAY,MAAO,KAAMA,EAAAA,cAAoBlB,EAAYQ,GAAI,KAAM,KAAMU,EAAAA,cAAoBlB,EAAYM,EAAG,KAAM,0BAA2B,KAAMY,EAAAA,cAAoBlB,EAAYW,IAAK,KAAMO,EAAAA,cAAoBlB,EAAYU,KAAM,CAC5qBa,UAAW,eACV,+HAAgI,KAAML,EAAAA,cAAoBlB,EAAYM,EAAG,KAAM,2DAA4DY,EAAAA,cAAoBlB,EAAYU,KAAM,KAAM,UAAW,oBAAqB,MAAO,MAAO,KAAMQ,EAAAA,cAAoBlB,EAAYG,GAAI,CAChXgB,GAAI,MACJC,MAAO,CACLC,SAAU,aAEXH,EAAAA,cAAoBlB,EAAYI,EAAG,CACpCkB,KAAM,OACN,aAAc,gBACdC,UAAW,uBACVL,EAAAA,cAAoBlB,EAAYK,IAAK,CACtCmB,wBAAyB,CACvBC,OAAQ,meAEP,OAAQ,KAAMP,EAAAA,cAAoBlB,EAAYO,GAAI,KAAM,KAAMW,EAAAA,cAAoBlB,EAAYQ,GAAI,KAAM,mBAAoB,MACnI,CAKA,MAJA,SAAoBT,EAAQ,CAAC,GAC3B,MAAO8B,QAASC,GAAa7B,OAAOC,OAAO,CAAC,GAAGc,EAAAA,EAAAA,MAAsBjB,EAAMkB,YAC3E,OAAOa,EAAYZ,EAAAA,cAAoBY,EAAW/B,EAAOmB,EAAAA,cAAoBpB,EAAmBC,IAAUD,EAAkBC,EAC9H,E,oEC/GA,MACMgC,EAAc,EAAEC,OAAMC,WAAUC,iBACpC,MAAM,SAACC,EAAQ,SAAEC,GAAYJ,EACvBK,EAAe,IAChBL,EAAKM,IAAIC,YACZC,WAAYR,EAAKM,IAAIG,OAAOD,YAE9B,OAAOtB,EAAAA,cAAoBwB,EAAAA,EAAoB,CAC7CV,KAAMA,GACLd,EAAAA,cAAoByB,EAAAA,EAAe,KAAMzB,EAAAA,cAAoB0B,EAAAA,EAAoBP,GAAenB,EAAAA,cAAoB2B,EAAAA,EAAiB,KAAMZ,GAAWf,EAAAA,cAAoB4B,EAAAA,EAAa,CACxLC,KAAMZ,EACNa,KAAMZ,IACJlB,EAAAA,cAAoB+B,EAAAA,IAAa,EAGxB,SAASC,EAAiBnD,GACvC,OAAOmB,EAAAA,cAAoBa,EAAahC,EAAOmB,EAAAA,cAAoBiC,EAAqBpD,GAC1F,C","sources":["webpack://gatsby-theme-simplex/./documents/GoLang/Go-project-best-practice.md","webpack://gatsby-theme-simplex/./src/templates/ArticlePage.jsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    div: \"div\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\",\n    code: \"code\",\n    pre: \"pre\",\n    blockquote: \"blockquote\",\n    h4: \"h4\",\n    ol: \"ol\",\n    em: \"em\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, {\n    id: \"golang-project에-must는-없다-하지만\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#golang-project%EC%97%90-must%EB%8A%94-%EC%97%86%EB%8B%A4-%ED%95%98%EC%A7%80%EB%A7%8C\",\n    \"aria-label\": \"golang project에 must는 없다 하지만 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Golang project에 Must는 없다. 하지만…\"), \"\\n\", React.createElement(_components.p, null, \"Golang은 package와 module design에 상당한 자유를 부여하기 때문에 한 가지 best practice를 정의내리기 어렵다. 꼭 따를 필요는 없지만, \", React.createElement(_components.a, {\n    href: \"https://github.com/golang-standards/project-layout\",\n    target: \"_self\",\n    rel: \"nofollow\"\n  }, \"project-layout\"), \" 방식을 참고해보자.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"/cmd\"), \": main source filed이 위치한다. i.e) \", React.createElement(_components.code, null, \"foo\"), \" app의 \", React.createElement(_components.code, null, \"main.go\"), \"의 위치는 \", React.createElement(_components.code, null, \"/cmd/foo/main.go\"), \"이다.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"/internal\"), \": 다른 application이나 library에서 import하지 못하는 private code들을 여기에 둔다.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"/pkg\"), \": 외부에 드러내고 싶은 public code들을 배치한다.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"/test\"), \": 외부 test code나 test data를 두는 곳이다. Golang에서 unit test는 source file과 같은 package이 둔다. 하지만 공용 API나 e2e test 등은 \", React.createElement(_components.code, null, \"/test\"), \" 하위에 둔다.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"/configs\"), \": config file\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"/docs\"), \": 디자인 및 사용자 문서\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"/examples\"), \":\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"/api\"), \": API constract file (Swagger 혹은 Protocol Buffer등)을 둔다.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"/web\"), \": Web App에 특화된 asset (static files)들을 둔다.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"/build\"), \": package config 및 CI에 대한 file들\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"/scripts\"), \": 분석 및 설치 등에 대한 script file들.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"/vendor\"), \": app dependency 관련 file들 (Go module dependency)\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"다른 언어들과 달리 \", React.createElement(_components.code, null, \"/src\"), \" dir는 없다. 너무 범용적이기 때문이다. 대신 \", React.createElement(_components.code, null, \"/cmd\"), \"나 \", React.createElement(_components.code, null, \"/internal\"), \", \", React.createElement(_components.code, null, \"/pkg\"), \"를 선호한다.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"go-package-structure\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#go-package-structure\",\n    \"aria-label\": \"go package structure permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Go package structure\"), \"\\n\", React.createElement(_components.p, null, \"Golang에는 \", React.createElement(_components.strong, null, \"sub-package라는 개념이 없다.\"), \" 대신 package 안에 sub-directory를 만들 수는 있다. 하지만 이는 상속이나 포함의 개념이 아니라는 것을 알아두어야 한다. golang standard lib인 \", React.createElement(_components.code, null, \"net\"), \"의 디렉토리를 확인해보자.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"/net\\n\\t/http\\n\\t\\tclient.go\\n\\t\\t...\\n  /smtp\\n  \\tauth.go\\n  \\t...\\n  addrselect.go\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"net\"), \"은 package이기도 하고, 다른 package를 담은 directory이기도 하다. 하지만 알아두어야 할 점은 \", React.createElement(_components.code, null, \"/net/http\"), \"는 \", React.createElement(_components.code, null, \"/net\"), \"을 상속하지 않는다. \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"net/http\"), \" 내부에서는 \", React.createElement(_components.code, null, \"net\"), \" 의 요소 중에서도 export된 것만\"), \" 볼 수 있다.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"하위 directory의 package는 상위 directory의 package의 private 요소들에 접근할 수 없다. export된 요소들만 import 해서 이용할 수 있다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"sub-directory의 주된 장점은 package를 한 곳에 두어 package 내 코드의 cohesion을 높일 수 있다는 점이다. 다른 언어처럼 상속 관계를 나타내진 않는다.\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"package-best-practice\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#package-best-practice\",\n    \"aria-label\": \"package best practice permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Package Best Practice\"), \"\\n\", React.createElement(_components.p, null, \"package의 경우 따를만한 best practice들이 몇가지 있다.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"섣불리 package를 만들지 않는다.\"), \"\\n\", React.createElement(_components.p, null, \"처음에는 간결하게 구성하는 것이 좋다. 이해도가 높아짐에 따라 서서히 진화하는 방식을 따르자.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"2\"\n  }, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Granuality도 반드시 고려하자.\"), \"\\n\", React.createElement(_components.p, null, \"file 한 두개만 담긴 nano package 수십 개로 구성하는 방식은 바람직하지 않다. 반대로 package가 너무 비대해져서도 안된다.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"제공하는 기능을 기준으로, “좋은 이름”을 지어라.\"), \"\\n\", React.createElement(_components.p, null, \"package 이름은 그 안에 담긴 내용물이 아닌, 그 \", React.createElement(_components.em, null, \"package가 제공하는 기능\"), \"에 맞게 지어야 이해하기 쉽다.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"package 이름은 \", React.createElement(_components.em, null, \"lowercase로 된 한 단어\"), \"로 표현하자.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"package-rule에도-must는-없다-nano-packages가-유용할-때\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#package-rule%EC%97%90%EB%8F%84-must%EB%8A%94-%EC%97%86%EB%8B%A4-nano-packages%EA%B0%80-%EC%9C%A0%EC%9A%A9%ED%95%A0-%EB%95%8C\",\n    \"aria-label\": \"package rule에도 must는 없다 nano packages가 유용할 때 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"package rule에도 MUST는 없다: nano packages가 유용할 때\"), \"\\n\", React.createElement(_components.p, null, \"하지만 Golang에는 MUST인 ground rule은 없다는 것을 다시 한 번 상기하며, 2번의 nano package에 대해서 이야기해보자. 과연 nano package는 항상 나쁠까? nano package 자체가 나쁜 것은 아니다. 특별히 속하는 곳이 없으면서 cohesion이 높은 코드들은 package로 묶어도 아무런 문제가 없다.\"), \"\\n\", React.createElement(_components.p, null, \"많은 경우 개발자들은 \", React.createElement(_components.code, null, \"util\"), \", \", React.createElement(_components.code, null, \"base\"), \" 혹은 \", React.createElement(_components.code, null, \"common\"), \" package에 어울리지 않은 공용 메서드들을 구현하는 실수를 범한다. 다음의 예시를 보자:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-go\"\n  }, \"package util\\n\\nfunc NewStringSet(... string) map[string]struct{} { /** */ }\\nfunc SortStringSet(map[string]struct{}) []string { /** */ }\\n\")), \"\\n\", React.createElement(_components.p, null, \"client는 이 package를 다음과 같이 이용할 수 있다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-go\"\n  }, \"set := util.NewStringSet(\\\"c\\\", \\\"a\\\", \\\"b\\\")\\nfmt.Println(util.SortStringSet(set))\\n\")), \"\\n\", React.createElement(_components.p, null, \"문제는 \", React.createElement(_components.code, null, \"util\"), \"이라는 이름이 전혀 어울리지 않는다. \", React.createElement(_components.code, null, \"util\"), \"이라는 이름은 그냥 공용으로 쓸 수 있는 코드라는 점을 명시하는 것 외에는 아무런 의미도 담고있지 않기 때문에, 두 메서드는 의미를 전달하기 위해 \", React.createElement(_components.em, null, \"StringSet\"), \"이라는 접미사를 붙이고 있다.\"), \"\\n\", React.createElement(_components.p, null, \"이를 utility package 대신 \", React.createElement(_components.code, null, \"stringset\"), \"과 같은 보다 구체적인 이름으로 정해보자:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-go\"\n  }, \"func New(...string) map[string]struct{} { /** */ }\\nfunc Sort(map[string]struct{}) { /** */ }\\n\")), \"\\n\", React.createElement(_components.p, null, \"nano package지만 cohesion이 높은 코드끼리 모아두었으며, 이를 잘 나타내는 \", React.createElement(_components.code, null, \"stringset\"), \"이라는 이름도 붙여주었기에 쓸데없는 접미사를 붙이지 않아도 된다. client가 이용할 때도 훨씬 가독성이 좋다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-go\"\n  }, \"set := stringset.New(\\\"c\\\", \\\"a\\\", \\\"b\\\")\\nfmt.Println(stringset.Sort(set))\\n\")), \"\\n\", React.createElement(_components.h2, {\n    id: \"export한-요소는-모두-문서화하라\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#export%ED%95%9C-%EC%9A%94%EC%86%8C%EB%8A%94-%EB%AA%A8%EB%91%90-%EB%AC%B8%EC%84%9C%ED%99%94%ED%95%98%EB%9D%BC\",\n    \"aria-label\": \"export한 요소는 모두 문서화하라 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"export한 요소는 모두 문서화하라\"), \"\\n\", React.createElement(_components.p, null, \"export한 대상이 \", React.createElement(_components.code, null, \"struct\"), \"든, \", React.createElement(_components.code, null, \"interface\"), \"나 \", React.createElement(_components.code, null, \"func\"), \"든 아니면 그 밖의 다른 요소라도 일단 \", React.createElement(_components.code, null, \"export\"), \"했다면 무조건 문서화한다. (지킬 수 있을까? gpt가 있으니 다행이다.) annotation을 작성하는 나름의 convention은 다음과 같다:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"각 annotation은 \", React.createElement(_components.code, null, \".\"), \"로 끝나는 완전한 문장으로 작성한다.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"function이나 method를 문서화할 때는 내부로직이 아니라, \", React.createElement(\"u\", null, \"목적과 기능\"), \"을 중심으로 표현한다.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"deprecate된 요소에는 다음과 같이 \", React.createElement(_components.code, null, \"// Deprecated:\"), \" 형식의 annotation을 추가한다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-go\"\n  }, \"// ComputePath()는 두 점 사이의 가장 빠른 경로를 return한다.\\n// Deprecated: 해당 함수 대신 ComputeFastestPath()를 사용하시오.\\nfunc ComputePath() {}\\n\")), \"\\n\", React.createElement(_components.p, null, \"대부분의 IDE는 이러한 \", React.createElement(_components.em, null, \"deprecated\"), \" 주석에 적절히 warning을 날려주는 기능을 가지고 있다.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"변수나 상수를 문서화할 때는 \", React.createElement(\"u\", null, \"목적과 내용\"), \"에 신경쓰자.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"package 단위로 문서화를 작성하자.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-go\"\n  }, \"// Package math는 기본적인 상수와 수학 함수를 제공한다.\\n//\\n// 해당 package의 실행 결과는 CPU architecture에 따라 bit 단위의 값이 다를 수 있다.\\npackage math\\n\")), \"\\n\", React.createElement(_components.p, null, \"일반적으로 package docs의 경우 해당 package의 이름과 동일한 file에 작성하거나, \", React.createElement(_components.code, null, \"doc.go\"), \"와 같이 특정한 파일에 한다.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"ref\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#ref\",\n    \"aria-label\": \"ref permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Ref\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"100 Go Mistakes\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/leobang17.github.io/leobang17.github.io/documents/GoLang/Go-project-best-practice.md\";\nimport React from 'react';\nimport {graphql} from 'gatsby';\nimport ArticleLayout from 'components/Layout/ArticleLayout';\nimport MarkdownWrapper from 'components/MarkdownWrapper';\nimport ArticleFrontmatter from 'components/ArticleFrontmatter';\nimport ArticlePageContext from 'contexts/ArticlePageContext';\nimport Utterances from 'components/Utterance';\nimport RecentPosts from 'components/RecentPosts/RecentPosts';\nconst isBrowser = typeof window !== undefined;\nconst ArticlePage = ({data, children, serverData}) => {\n  const {prevPost, nextPost} = data;\n  const frontmatters = {\n    ...data.mdx.frontmatter,\n    timeToRead: data.mdx.fields.timeToRead\n  };\n  return React.createElement(ArticlePageContext, {\n    data: data\n  }, React.createElement(ArticleLayout, null, React.createElement(ArticleFrontmatter, frontmatters), React.createElement(MarkdownWrapper, null, children), React.createElement(RecentPosts, {\n    prev: prevPost,\n    next: nextPost\n  }), React.createElement(Utterances)));\n};\nArticlePage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ArticlePage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String, $nextId: String, $prevId: String) {\n    mdx(id: { eq: $id }) {\n      id\n      fields {\n        slug\n        timeToRead\n        categoryDirectory\n      }\n      frontmatter {\n        title\n        createdAt(formatString: \"MMMM DD, YYYY\")\n      }\n      tableOfContents\n    }\n    prevPost: mdx(id: { eq: $prevId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    nextPost: mdx(id: { eq: $nextId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\nexport {ArticlePageHead as Head} from 'components/head';\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","a","div","p","ul","li","strong","code","pre","blockquote","h4","ol","em","_provideComponents","components","React","id","style","position","href","className","dangerouslySetInnerHTML","__html","target","rel","start","wrapper","MDXLayout","ArticlePage","data","children","serverData","prevPost","nextPost","frontmatters","mdx","frontmatter","timeToRead","fields","ArticlePageContext","ArticleLayout","ArticleFrontmatter","MarkdownWrapper","RecentPosts","prev","next","Utterances","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}