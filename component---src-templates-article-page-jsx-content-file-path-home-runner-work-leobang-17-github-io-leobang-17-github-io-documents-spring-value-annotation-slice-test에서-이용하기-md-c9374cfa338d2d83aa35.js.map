{"version":3,"file":"component---src-templates-article-page-jsx-content-file-path-home-runner-work-leobang-17-github-io-leobang-17-github-io-documents-spring-value-annotation-slice-test에서-이용하기-md-c9374cfa338d2d83aa35.js","mappings":"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","sources":["webpack://gatsby-theme-simplex/./documents/Spring/value-annotation-slice-test에서-이용하기.md","webpack://gatsby-theme-simplex/./src/templates/ArticlePage.jsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    a: \"a\",\n    div: \"div\",\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    blockquote: \"blockquote\",\n    em: \"em\",\n    ul: \"ul\",\n    li: \"li\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, {\n    id: \"what\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#what\",\n    \"aria-label\": \"what permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"What\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"io.jsonwebtoken.security.WeakKeyException: The specified key byte array is 136 bits which is not secure enough for any JWT HMAC-SHA algorithm.  The JWT JWA Specification (RFC 7518, Section 3.2) states that keys used with HMAC-SHA algorithms MUST have a size >= 256 bits (the key size must be greater than or equal to the hash output size).  Consider using the io.jsonwebtoken.security.Keys#secretKeyFor(SignatureAlgorithm) method to create a key guaranteed to be secure enough for your preferred HMAC-SHA algorithm.  See https://tools.ietf.org/html/rfc7518#section-3.2 for more information.\\n\")), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"when\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#when\",\n    \"aria-label\": \"when permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"When\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"jjwt\"), \"로 JWT를 생성하는게 잘 되는지 확인하는 테스트 중이었다.\"), \"\\n\", React.createElement(_components.p, null, \"jwt의 claims에 들어갈 프로퍼티들은 git으로 관리하지 않도록 무시한 yaml 파일에 저장해두고, \", React.createElement(_components.code, null, \"@Value\"), \" 어노테이션을 이용해 값을 불러오고 있었다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-yaml\"\n  }, \"// application-jwt.yml\\njwt:\\n  claims:\\n    issuer: \\\"example.com\\\"\\n  secret-key: \\\"example-example-example-example-example-example-example-example-example\\\"\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"// JwtSecretsService.java\\n@Service\\npublic class JwtSecretsService extends JwtPropertyService {\\n\\tprivate static final long TOKEN_VALID_TIME = 10 * 60 * 60 * 1000L;\\n\\n\\tpublic Date getIssuedAt() {\\n\\t\\treturn new Date();\\n\\t}\\n\\n\\tpublic Date getExpiredAt() {\\n\\t\\treturn new Date(getIssuedAt().getTime() + TOKEN_VALID_TIME);\\n\\t}\\n\\n\\tpublic Key getSecretKey() throws DecodingException {\\n\\t\\treturn Keys.hmacShaKeyFor(super.secret.getBytes(StandardCharsets.UTF_8));\\n\\t}\\n}\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"// JwtPropertyService.java\\npublic class JwtPropertyService {\\n\\t@Getter\\n\\t@Value(\\\"${jwt.claims.issuer}\\\")\\n\\tprotected String issuer;\\n\\n\\t@Value(\\\"${jwt.secret-key}\\\")\\n\\tprotected String secret;\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"에러는 \", React.createElement(_components.code, null, \"JwtSecretsService\"), \" 클래스의 \", React.createElement(_components.code, null, \"getSecretKey()\"), \" 메서드에서 호출하는 \", React.createElement(_components.code, null, \"Decoders.BASE64URL.decode()\"), \"메서드 속에서 발생했다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"why\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#why\",\n    \"aria-label\": \"why permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Why\"), \"\\n\", React.createElement(_components.p, null, \"에러 메시지를 읽어보면 내가 설정한 secret key가 너무 작아 생긴 문제다. \", React.createElement(_components.code, null, \"jjwt\"), \" 라이브러리는 취약한 secret key 이용을 방지하기 위해, 유저가 이용하는 서명 알고리즘마다 최소로 요구하는 key의 크기가 존재한다. 내가 이용한 \", React.createElement(_components.code, null, \"JWT HMAC-SHA\"), \" 알고리즘의 경우 256bit 이상의 크기를 요구하는데, 내가 선언한 이용하려는 secret key는 136bit 밖에 안된다는 것이다.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"This means that JJWT - a specification-compliant library - will also enforce that you use sufficiently strong keys for the algorithms you choose. If you provide a weak key for a given algorithm, JJWT will reject it and throw an exception.\")), \"\\n\", React.createElement(_components.p, null, \"…\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"HS256\"), \" is HMAC-SHA-256, and that produces digests that are 256 bits (32 bytes) long, so \", React.createElement(_components.code, null, \"HS256\"), \" \", React.createElement(_components.em, null, \"requires\"), \"that you use a secret key that is at least 32 bytes long.\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/jwtk/jjwt#jws-create\",\n    target: \"_self\",\n    rel: \"nofollow\"\n  }, \"https://github.com/jwtk/jjwt#jws-create\")), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, \"이런 사항들은 충분히 인지하고 코드를 짰고, 따라서 secret key도 충분한 크기로 정의해두었는데 whyrano.\"), \"\\n\", React.createElement(_components.p, null, \"혹시나 해서 \", React.createElement(_components.code, null, \"JwtPropertyService\"), \" 가 가져오는 secret key를 터미널에 찍어보니 그 이유가 나왔다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"secretKey = jwt.secret-key\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"JwtPropertyService\"), \" 가 프로퍼티 값을 제대로 찾아오는지 확인하는 테스트도 선행했었는데 이 때는 스프링의 모든 bean을 로드하는 \", React.createElement(_components.code, null, \"@SpringBootTest\"), \"를 이용했었다. 이번에는 sliced test를 진행했는데 이와 같은 환경에서는 \", React.createElement(_components.code, null, \"@Value\"), \" 어노테이션이 부착된 필드에 값을 주입해주는 역할을 하는 bean이 로드되지 않아 생기는 문제 “같았다”. \", React.createElement(_components.code, null, \"@Value\"), \" 어노테이션의 작동 방식은 공식문서를 통해 확인했지만 어떤 Bean이 값을 주입해주는지는 찾지 못했다.\"), \"\\n\", React.createElement(_components.p, null, \"사실 더 원인에 대해 더 딮하게 파봐야 하는게 맞지만 요즘 작업 진척이 늦어 나중으로 미뤘다. 요즘 작업 진척이 너무 느려서 , , 맘이 급했다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"how\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#how\",\n    \"aria-label\": \"how permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"How\"), \"\\n\", React.createElement(_components.p, null, \"두가지 방법이 있다. Reflection을 이용하는 방법과 \", React.createElement(_components.code, null, \"@TestPropertySource\"), \" 어노테이션을 이용하는 방식이다.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"reflectiontestutils를-이용한-방식\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#reflectiontestutils%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EB%B0%A9%EC%8B%9D\",\n    \"aria-label\": \"reflectiontestutils를 이용한 방식 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"ReflectionTestUtils를 이용한 방식\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"ReflectionTestUtils\"), \"의 \", React.createElement(_components.code, null, \"setField()\"), \" 메서드를 이용해 값을 직접 정의해주는 방식이 있다\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"testpropertysource를-이용한-방식\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#testpropertysource%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EB%B0%A9%EC%8B%9D\",\n    \"aria-label\": \"testpropertysource를 이용한 방식 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"@TestPropertySource를 이용한 방식\"), \"\\n\", React.createElement(_components.p, null, \"통합 테스트 (sliced test 역시 통합 테스트이다.)를 위해 로드되는 \", React.createElement(_components.code, null, \"ApplicationContext\"), \"의\", React.createElement(_components.code, null, \"PropertySource\"), \"를 인라인으로 추가하도록 도와준다. 다음과 같이 이용할 수 있다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"@ContextConfiguration\\n@TestPropertySource(\\\"/test.properties\\\") \\nclass MyIntegrationTests {\\n    // class body...\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"그런데 이렇게 해도 안된다. 애초에 properties 파일의 값을 읽어서 \", React.createElement(_components.code, null, \"@Value\"), \" 어노테이션이 부착된 필드에 주입시켜주는 bean은 \", React.createElement(_components.code, null, \"@SpringBoot\"), \"에만 로드되는 것 같다. 직접 property를 선언해주면 해결된다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"@ContextConfiguration\\n@TestPropertySource(properties = {\\\"timezone = GMT\\\", \\\"port: 4242\\\"}) \\nclass MyIntegrationTests {\\n    // class body...\\n}\\n\")), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, \"내 앱에는 다음과 같이 적용해 해결했다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"@TestPropertySource(\\n\\tproperties = {\\n\\t\\t\\\"jwt.secret-key=secret_key_value_of_this_app_upper_than256_bits\\\",\\n\\t\\t\\\"jwt.claims.issuer=issuer\\\"}\\n)\\npublic class JwtCreationTest {\\n// ...\\n\")), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, \"property 값도 다음과 같이 잘 찍힌다!\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"secret = secret_key_value_of_this_app_upper_than256_bits\\n\")), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"references\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#references\",\n    \"aria-label\": \"references permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"References\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/jwtk/jjwt#jws-create\",\n    target: \"_self\",\n    rel: \"nofollow\"\n  }, \"https://github.com/jwtk/jjwt#jws-create\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#beans-value-annotations\",\n    target: \"_self\",\n    rel: \"nofollow\"\n  }, \"https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#beans-value-annotations\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://docs.spring.io/spring-framework/docs/current/reference/html/testing.html#spring-testing-annotation-testpropertysource\",\n    target: \"_self\",\n    rel: \"nofollow\"\n  }, \"https://docs.spring.io/spring-framework/docs/current/reference/html/testing.html#spring-testing-annotation-testpropertysource\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://stackoverflow.com/questions/17353327/populating-spring-value-during-unit-test\",\n    target: \"_self\",\n    rel: \"nofollow\"\n  }, \"https://stackoverflow.com/questions/17353327/populating-spring-value-during-unit-test\")), \"\\n\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/leobang17.github.io/leobang17.github.io/documents/Spring/value-annotation-slice-test에서-이용하기.md\";\nimport React from 'react';\nimport {graphql} from 'gatsby';\nimport ArticleLayout from 'components/Layout/ArticleLayout';\nimport MarkdownWrapper from 'components/MarkdownWrapper';\nimport ArticleFrontmatter from 'components/ArticleFrontmatter';\nimport ArticlePageContext from 'contexts/ArticlePageContext';\nimport Utterances from 'components/Utterance';\nimport RecentPosts from 'components/RecentPosts/RecentPosts';\nconst isBrowser = typeof window !== undefined;\nconst ArticlePage = ({data, children, serverData}) => {\n  const {prevPost, nextPost} = data;\n  const frontmatters = {\n    ...data.mdx.frontmatter,\n    timeToRead: data.mdx.fields.timeToRead\n  };\n  return React.createElement(ArticlePageContext, {\n    data: data\n  }, React.createElement(ArticleLayout, null, React.createElement(ArticleFrontmatter, frontmatters), React.createElement(MarkdownWrapper, null, children), React.createElement(RecentPosts, {\n    prev: prevPost,\n    next: nextPost\n  }), React.createElement(Utterances)));\n};\nArticlePage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ArticlePage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String, $nextId: String, $prevId: String) {\n    mdx(id: { eq: $id }) {\n      id\n      fields {\n        slug\n        timeToRead\n        categoryDirectory\n      }\n      frontmatter {\n        title\n        createdAt(formatString: \"MMMM DD, YYYY\")\n      }\n      tableOfContents\n    }\n    prevPost: mdx(id: { eq: $prevId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    nextPost: mdx(id: { eq: $nextId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\nexport {ArticlePageHead as Head} from 'components/head';\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","div","pre","code","p","blockquote","em","ul","li","h3","_provideComponents","components","React","id","style","position","href","className","dangerouslySetInnerHTML","__html","target","rel","wrapper","MDXLayout","ArticlePage","data","children","serverData","prevPost","nextPost","frontmatters","mdx","frontmatter","timeToRead","fields","ArticlePageContext","ArticleLayout","ArticleFrontmatter","MarkdownWrapper","RecentPosts","prev","next","Utterances","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}