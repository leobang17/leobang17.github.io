{"version":3,"file":"15ff2c6f90356526362333bb009ac0770e7dd3c2-c7cb42468052c26e38db.js","mappings":"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","sources":["webpack://gatsby-theme/./src/components/ArticleFrontmatter/ArticleFrontmatterDate.tsx","webpack://gatsby-theme/./src/components/ArticleFrontmatter/ArticleFrontmatterTitle.tsx","webpack://gatsby-theme/./src/components/ArticleFrontmatter/index.tsx","webpack://gatsby-theme/./src/hooks/useTableOfContentsObserver.ts","webpack://gatsby-theme/./src/components/RightStack/TableOfContents/cells/TOCTitle.tsx","webpack://gatsby-theme/./src/components/RightStack/TableOfContents/cells/TableOfContentsCell.tsx","webpack://gatsby-theme/./src/components/RightStack/TableOfContents/index.tsx","webpack://gatsby-theme/./src/components/Layout/ArticleLayout.tsx","webpack://gatsby-theme/./src/components/LeftStack/BioAndCategories/index.tsx","webpack://gatsby-theme/./src/styles/designSystem/remark/index.ts","webpack://gatsby-theme/./src/styles/remark/index.ts","webpack://gatsby-theme/./src/components/MarkdownWrapper.tsx","webpack://gatsby-theme/./src/components/seo.tsx","webpack://gatsby-theme/./src/components/head.tsx","webpack://gatsby-theme/./src/utils/getTitlePrefix.ts","webpack://gatsby-theme/./src/datastructures/tableOfContents/TableNode.ts","webpack://gatsby-theme/./src/datastructures/tableOfContents/TableOfContentTree.ts","webpack://gatsby-theme/./src/contexts/article/ArticleContextProvider.tsx","webpack://gatsby-theme/./src/contexts/ArticlePageContext.tsx","webpack://gatsby-theme/./src/contexts/article/ArticleContext.ts","webpack://gatsby-theme/./src/dataLayer/api/CategoryAPI.ts","webpack://gatsby-theme/./src/dataLayer/queries/MdxPageQueries.ts","webpack://gatsby-theme/./src/dataLayer/queries/MdxStaticQueries.ts","webpack://gatsby-theme/./src/dataLayer/services/CategoryQueryService.ts","webpack://gatsby-theme/./src/datastructures/category/CategoryNode.ts","webpack://gatsby-theme/./src/datastructures/category/CategoryTree.ts","webpack://gatsby-theme/./src/dataLayer/services/CategoryService.ts","webpack://gatsby-theme/./src/dataLayer/configurators/CategoryApiConfigurator.ts","webpack://gatsby-theme/./src/dataLayer/DataLayer.ts","webpack://gatsby-theme/./src/utils/pageApi/activateCurrentCatgeories.ts","webpack://gatsby-theme/./src/contexts/category/CategoryContextProvider.tsx","webpack://gatsby-theme/./src/datastructures/category/CategoryStringParser.ts","webpack://gatsby-theme/./src/datastructures/category/CategoryStrings.ts","webpack://gatsby-theme/./src/utils/slug.ts","webpack://gatsby-theme/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/** @jsx jsx */\n\nimport { FC } from 'react'\nimport { jsx, css } from '@emotion/react'\nimport { GRAY } from 'styles/Color'\n\ntype ArticleFrontmatterDateProps = {\n  createdAt: string\n  timeToRead: number\n  modifiedAt?: string\n}\n\nconst style = css`\n  padding-left: 0.4rem;\n`\n\nconst creationCSS = css`\n  font-size: 0.9rem;\n  color: ${GRAY};\n`\n\nconst ArticleFrontmatterDate: FC<ArticleFrontmatterDateProps> = ({\n  createdAt,\n  timeToRead,\n  modifiedAt,\n}) => {\n  return (\n    <div css={style}>\n      <time css={creationCSS}>\n        {createdAt} · ☕️ {timeToRead} min reads\n      </time>\n    </div>\n  )\n}\n\nexport default ArticleFrontmatterDate\n","/** @jsx jsx */\n\nimport { css, jsx } from '@emotion/react'\nimport { FC } from 'react'\n\nimport { m_mq } from 'styles/facepaint'\nimport Mapper from 'utils/Mapper'\n\ntype ArticleFrontmatterTitleProps = {\n  title: string\n}\n\nconst style = css(\n  css`\n    margin-block: 0.5rem;\n    font-weight: 500;\n  `,\n  m_mq({\n    fontSize: Mapper.mapRem([2, 2.8]),\n  }),\n)\n\nconst ArticleFrontmatterTitle: FC<ArticleFrontmatterTitleProps> = ({\n  title,\n}) => {\n  return (\n    <hgroup>\n      <h1 css={style}>{title}</h1>\n    </hgroup>\n  )\n}\n\nexport default ArticleFrontmatterTitle\n","/** @jsx jsx */\n\nimport { css, jsx } from '@emotion/react'\nimport { FC } from 'react'\n\nimport ArticleFrontmatterDate from './ArticleFrontmatterDate'\nimport ArticleFrontmatterTitle from './ArticleFrontmatterTitle'\n\ntype ArticleFrontmatterProps = {\n  title: string\n  createdAt: string\n  modifiedAt?: string\n  timeToRead: number\n}\n\nconst style = css`\n  margin-top: 1rem;\n  margin-bottom: 2rem;\n`\n\nconst ArticleFrontmatter: FC<ArticleFrontmatterProps> = ({\n  title,\n  createdAt,\n  modifiedAt,\n  timeToRead,\n}) => {\n  return (\n    <section css={style}>\n      <ArticleFrontmatterTitle title={title} />\n      <ArticleFrontmatterDate\n        createdAt={createdAt}\n        modifiedAt={modifiedAt}\n        timeToRead={timeToRead}\n      />\n    </section>\n  )\n}\n\nexport default ArticleFrontmatter\n","import { useContext, useEffect, useState } from 'react'\nimport { ArticleContext } from 'contexts/article/ArticleContext'\n\nexport default function useTableOfContentsObserver() {\n  const { activateTarget } = useContext(ArticleContext)\n  const [, triggerRerender] = useState<string>()\n\n  const observerCallback: IntersectionObserverCallback = entries => {\n    activateCurrentIndex(entries)\n  }\n\n  const observerOptions: IntersectionObserverInit = {\n    root: null,\n    rootMargin: '0px 0px -90% 0px',\n    threshold: 0.1,\n  }\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(observerCallback, observerOptions)\n    const headerLinks = document.querySelectorAll('.header-links')\n    headerLinks.forEach(headerLink => observer.observe(headerLink))\n\n    return () => observer.disconnect()\n  }, [])\n\n  function activateCurrentIndex(entries: IntersectionObserverEntry[]) {\n    if (entries.length > 0) {\n      const currentEntry = entries[0]\n      activateIndex(currentEntry)\n    }\n  }\n\n  function activateIndex(entry: IntersectionObserverEntry) {\n    const url = retrieveHrefFromEntry(entry)\n    activateIfHrefExistsAndRerender(url)\n  }\n\n  function retrieveHrefFromEntry(entry: IntersectionObserverEntry) {\n    return entry.target.getAttribute('href')\n  }\n\n  function activateIfHrefExistsAndRerender(url: string | null) {\n    if (url) {\n      activateTarget(url)\n      triggerRerender(url)\n    }\n  }\n}\n","/** @jsx jsx */\n\nimport { css, jsx } from '@emotion/react'\nimport { Link } from 'gatsby'\nimport { FC, useContext } from 'react'\n\nimport { ArticleContext } from 'contexts/article/ArticleContext'\nimport { LIGHT_GRAY } from 'styles/Color'\n\ntype TOCTitleProps = {\n  title?: string\n  url?: string\n  activated?: boolean\n}\n\nconst style = (activated?: boolean) => css`\n  position: relative;\n  padding-block: 1px;\n  font-size: 0.9rem;\n  font-weight: 300;\n  left: ${activated ? '-5px' : '0'};\n  transform: ${activated ? 'scale(107%)' : 'scale(100%)'};\n  color: ${activated ? 'black' : LIGHT_GRAY};\n\n  :hover {\n    color: black;\n  }\n\n  transition: color 0.2s ease, left 0.2s ease, transform 0.2s ease;\n`\nconst TOCTitle: FC<TOCTitleProps> = ({ title, url, activated }) => {\n  const {\n    fields: { slug },\n  } = useContext(ArticleContext)\n\n  return (\n    <div css={style(activated)}>\n      <Link to={`/posts` + slug + url}>{title}</Link>\n    </div>\n  )\n}\n\nexport default TOCTitle\n","/** @jsx jsx */\n\nimport { css, jsx } from '@emotion/react'\nimport { FC } from 'react'\n\nimport TableNode from 'datastructures/tableOfContents/TableNode'\nimport TOCTitle from './TOCTitle'\n\ntype TableOfContentsCellProps = {\n  data: TableNode\n  depth?: number\n}\n\nconst style = (depth: number) =>\n  css`\n    margin-left: ${depth * 5}px;\n  `\n\nconst TableOfContentsCell: FC<TableOfContentsCellProps> = ({\n  data,\n  depth = 0,\n}) => {\n  return (\n    <div css={style(data.depth)}>\n      <TOCTitle {...data} />\n      {data.items\n        ? data.items.map((item, id) => (\n            <TableOfContentsCell key={id} data={item} depth={depth + 1} />\n          ))\n        : null}\n    </div>\n  )\n}\n\nexport default TableOfContentsCell\n","/** @jsx jsx */\n\nimport { css, jsx } from '@emotion/react'\nimport { FC, useContext } from 'react'\n\nimport { ArticleContext } from 'contexts/article/ArticleContext'\nimport useTableOfContentsObserver from 'hooks/useTableOfContentsObserver'\n\nimport TableOfContentsCell from './cells/TableOfContentsCell'\nimport { BORDER_MUSK } from 'styles/Color'\n\ntype TableOfContentsProps = {}\n\nconst style = css`\n  position: -webkit-sticky;\n  position: sticky;\n  align-self: start;\n  top: 5rem;\n  max-height: calc(100vh - 5rem);\n  overflow: auto;\n\n  border-left: 1px solid ${BORDER_MUSK};\n  padding-block: 0.5rem;\n  padding-left: 1rem;\n`\nconst TableOfContents: FC<TableOfContentsProps> = () => {\n  useTableOfContentsObserver()\n  const { tableOfContents } = useContext(ArticleContext)\n\n  return (\n    <nav css={style}>\n      <TableOfContentsCell data={tableOfContents!.root} />\n    </nav>\n  )\n}\n\nexport default TableOfContents\n","import React, { FC } from 'react'\n\nimport TableOfContents from 'components/RightStack/TableOfContents'\nimport { ChildrenProps } from 'types/react-types'\n\nimport Layout from '.'\nimport BioAndCategories from 'components/LeftStack/BioAndCategories'\n\ntype ArticleLayoutProps = {} & ChildrenProps\n\nconst layoutProps = {\n  leftStack: <BioAndCategories />,\n  rightStack: <TableOfContents />,\n}\n\nconst ArticleLayout: FC<ArticleLayoutProps> = ({ children }) => {\n  return <Layout {...layoutProps}>{children}</Layout>\n}\n\nexport default ArticleLayout\n","/** @jsx jsx */\nimport { css, jsx } from '@emotion/react'\n\nimport CategoryTable from 'components/CategoryTable'\n\nconst style = css`\n  position: -webkit-sticky;\n  position: sticky;\n  align-self: start;\n  top: 5rem;\n  max-height: calc(100vh - 5rem);\n  overflow: auto;\n`\n\nconst BioAndCategories = () => {\n  return (\n    <div css={style}>\n      <CategoryTable />\n    </div>\n  )\n}\n\nexport default BioAndCategories\n","import styled from '@emotion/styled'\nimport { themeConfigs } from '../../../configuration'\nimport { BORDER_MUSK, GRAY, LIGHT_GRAY } from 'styles/Color'\n\n// Headers\nexport const H1 = styled.h1`\n  font-size: 2rem;\n  font-weight: 500;\n  padding-bottom: 0.2rem;\n  border-bottom: 1px solid ${BORDER_MUSK};\n`\n\nexport const H2 = styled.h2`\n  font-size: 1.7rem;\n  font-weight: 500;\n  padding-bottom: 0.2rem;\n  border-bottom: 1px solid ${BORDER_MUSK};\n`\n\nexport const H3 = styled.h3`\n  font-size: 1.5rem;\n  font-weight: 500;\n`\n\nexport const H4 = styled.h4`\n  font-size: 1.3rem;\n  font-weight: 500;\n`\n\nexport const H5 = styled.h5`\n  font-size: 1rem;\n  font-weight: 500;\n`\n\n// Texts\nexport const P = styled.p`\n  font-size: 1rem;\n  font-weight: 300;\n  line-height: 1.6rem;\n`\n\nexport const STRONG = styled.strong`\n  font-weight: 500;\n`\n\nexport const EM = styled.em``\n\nexport const HR = styled.hr``\n\nexport const BLOCKQUOTE = styled.blockquote`\n  padding-inline-start: 1rem;\n  margin-inline-start: 0.2rem;\n  border-left: 5px solid ${BORDER_MUSK};\n\n  & p,\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  li {\n    color: ${GRAY};\n  }\n`\n\nexport const DEL = styled.del`\n  font-weight: 300;\n`\nexport const A = styled.a`\n  color: ${themeConfigs.light.sub};\n  text-decoration: underline;\n`\n\n// Lists\nexport const UL = styled.ul`\n  padding-inline-start: 25px;\n`\n\nexport const OL = styled.ol`\n  padding-inline-start: 25px;\n`\n\nexport const LI = styled.li`\n  font-weight: 300;\n`\n\n// Tables\nexport const TH = styled.th`\n  font-weight: 400;\n  padding-block: 0.3rem;\n  padding-inline: 0.5rem;\n  text-align: start;\n  background-color: ${BORDER_MUSK};\n  border: 0.1px solid ${LIGHT_GRAY};\n`\n\nexport const TD = styled.td`\n  font-weight: 300;\n  padding-block: 0.3rem;\n  padding-inline: 0.5rem;\n  border: 0.1px solid ${LIGHT_GRAY};\n`\n\nexport const TABLE = styled.table`\n  width: 100%;\n  border-spacing: 0px;\n  border-collapse: collapse;\n`\n\nexport const THEAD = styled.thead``\n\nexport const TBODY = styled.tbody``\n","export const inlineCodeBlock = require('./inlineCodeBlock.css')\nexport const codeBlock = require('./codeBlock.css')\nexport const headerLinks = require('./headerLinks.css')\nexport const imageFigure = require('./imageFigure.css')\nexport const imageFigureCaption = require('./imageFigureCaption.css')\nexport const externalImage = require('./externalImage.css')\n","import { MDXProvider } from '@mdx-js/react'\nimport { FC, ReactNode } from 'react'\nimport 'katex/dist/katex.min.css'\n\nimport * as Remark from 'styles/designSystem/remark'\nimport 'styles/remark'\n\ntype MarkdownWrapperProps = {\n  children: ReactNode\n}\n\nconst MarkdownWrapper: FC<MarkdownWrapperProps> = ({ children }) => {\n  return (\n    <article className=\"markdown-wrapper\">\n      <MDXProvider\n        components={{\n          h1: Remark.H1,\n          h2: Remark.H2,\n          h3: Remark.H3,\n          h4: Remark.H4,\n          h5: Remark.H5,\n          p: Remark.P,\n          strong: Remark.STRONG,\n          em: Remark.EM,\n          del: Remark.DEL,\n          hr: Remark.HR,\n          a: Remark.A,\n          ol: Remark.OL,\n          ul: Remark.UL,\n          li: Remark.LI,\n          blockquote: Remark.BLOCKQUOTE,\n          th: Remark.TH,\n          td: Remark.TD,\n          table: Remark.TABLE,\n          tbody: Remark.TBODY,\n        }}\n      >\n        {children}\n      </MDXProvider>\n    </article>\n  )\n}\n\nexport default MarkdownWrapper\n","import React from 'react'\n\nimport MetadataApiConfigurator from 'datalayer/configurators/MetadataApiConfigurator'\nimport { ChildrenProps } from 'types/react-types'\nimport AssetApiConfigurator from 'datalayer/configurators/AssetApiConfigurator'\n\ntype SEOProps = {\n  titlePrefix?: string\n  canonical?: string\n  keywords?: string[]\n} & Partial<ChildrenProps>\n\nconst SEO = ({ titlePrefix, canonical, keywords, children }: SEOProps) => {\n  const { title, siteUrl, description } =\n    MetadataApiConfigurator.instance.api.getBlogMetadata()\n  const faviconUrl = AssetApiConfigurator.instance.api.getFaviconUrl()\n  const keywordString = keywords?.join(',')\n  const representingTitle = `${titlePrefix} | ${title.value}`\n  const url = siteUrl.value + canonical\n  return (\n    <>\n      <title>{representingTitle}</title>\n      <base href={siteUrl} />\n      <link rel=\"canonical\" href={url} />\n      <link rel=\"icon\" href={faviconUrl} />\n      <meta name=\"description\" content={description.value} />\n      <meta name=\"keywords\" content={keywordString} />\n      <meta name=\"robots\" content=\"index, follow\" />\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n      <meta httpEquiv=\"Content-Type\" content=\"text/html;charset=UTF-8\" />\n\n      <meta property=\"og:type\" content=\"blog\" />\n      <meta property=\"og:locale\" content=\"ko_KR\" />\n      <meta property=\"og:title\" content={representingTitle} />\n      <meta property=\"og:description\" content={description.value} />\n      <meta property=\"og:url\" content={url} />\n      <meta property=\"og:image\" content=\"\" />\n      <meta property=\"og:site_name\" content={title.value} />\n      <meta property=\"og:image:width\" content=\"800\" />\n      <meta property=\"og:image:height\" content=\"800\" />\n      {children}\n    </>\n  )\n}\n\nexport default SEO\n","import CategoryStrings from 'datastructures/category/CategoryStrings'\nimport { HeadProps } from 'gatsby'\nimport { CategoryPageContext } from 'templates/CategoryPage'\nimport { AllMdxQuery, MdxNode } from 'types/mdx-types'\nimport getTitlePrefix from 'utils/getTitlePrefix'\nimport SEO from './seo'\n\nexport type HeadAPI<DataType = object, PageContextType = object> = (\n  props: HeadProps<DataType, PageContextType>,\n) => JSX.Element\n\nexport const ArticlePageHead: HeadAPI<{ mdx: MdxNode }> = ({\n  location: { pathname },\n  data,\n}) => {\n  const title = data.mdx.frontmatter.title\n  return <SEO titlePrefix={title} canonical={pathname}></SEO>\n}\n\nexport const CategoryPageHead: HeadAPI<AllMdxQuery, CategoryPageContext> = ({\n  location: { pathname },\n  pageContext: { categoryDirectory },\n}) => {\n  const titlePrefix = getTitlePrefix(\n    CategoryStrings.initialize(categoryDirectory),\n  )\n\n  return <SEO titlePrefix={titlePrefix} canonical={pathname}></SEO>\n}\n\nexport const NotFoundPageHead: HeadAPI = () => {\n  return <SEO titlePrefix=\"Oops, Page Not Found 😰\" />\n}\n\nexport const InternalErrorPageHead: HeadAPI = () => {\n  return <SEO titlePrefix=\"Something went wrong 😱\" />\n}\n","import CategoryStrings from 'datastructures/category/CategoryStrings'\n\nexport default function getTitlePrefix(categoryString: CategoryStrings) {\n  const categories = categoryString.categories\n  let titlePrefix: string\n  if (categories.length > 0) {\n    titlePrefix = `Category: ${categories.join(' > ')}`\n  } else {\n    titlePrefix = `All Posts`\n  }\n\n  return titlePrefix\n}\n","import { tableOfContentConfigs } from '../../configuration'\nimport { MdxTableOfContent } from 'types/mdx-types'\nimport TableOfContentTree from './TableOfContentTree'\n\nexport default class TableNode {\n  private static MAX_DEPTH: number = tableOfContentConfigs.maxDepth\n  readonly url?: string\n  readonly title?: string\n  readonly items: TableNode[] = new Array()\n  private activated: boolean = false\n\n  constructor(\n    private motherTree: TableOfContentTree,\n    tableOfContents: MdxTableOfContent,\n    readonly depth: number = 0,\n  ) {\n    this.url = tableOfContents.url\n    this.title = tableOfContents.title\n    this._appendItems(tableOfContents.items)\n    this._mapDictionaryToMotherTree()\n  }\n\n  public isActivated() {\n    return this.activated\n  }\n\n  public activate() {\n    this.activated = true\n  }\n\n  public deactivate() {\n    this.activated = false\n  }\n\n  private _appendItems(items?: MdxTableOfContent[]) {\n    if (this.depthAvailable()) {\n      items?.map(table => {\n        const childTable = new TableNode(this.motherTree, table, this.depth + 1)\n        this.items.push(childTable)\n      })\n    }\n  }\n\n  private _mapDictionaryToMotherTree() {\n    if (this.url) {\n      this.motherTree.dictionary.set(this.url, this)\n    }\n  }\n\n  private depthAvailable() {\n    return this.depth < TableNode.MAX_DEPTH\n  }\n}\n","import { MdxTableOfContent } from 'types/mdx-types'\nimport TableNode from './TableNode'\n\nexport default class TableOfContentTree {\n  readonly dictionary: Map<string, TableNode> = new Map()\n  readonly root: TableNode\n  public activatedNode?: TableNode\n\n  constructor(tableOfContents: MdxTableOfContent) {\n    this.root = new TableNode(this, tableOfContents)\n  }\n\n  activate(url: string) {\n    this.activateNewNodeIfExists(url)\n    return this\n  }\n\n  private activateNewNodeIfExists(url: string) {\n    try {\n      const currentNode = this.findTableNodeOrThrow(url)\n      this.deactivateCurrentActivatedNode()\n      this.activateNewNode(currentNode)\n    } catch (e) {\n      console.log(`ERROR: ${(e as Error).message}`)\n    }\n  }\n\n  private deactivateCurrentActivatedNode() {\n    this.activatedNode?.deactivate()\n  }\n\n  private activateNewNode(node: TableNode) {\n    this.activatedNode = node\n    this.activatedNode.activate()\n  }\n\n  private findTableNodeOrThrow(url: string) {\n    const key = this.decodeBase64URLEncoding(url)\n    if (this.dictionary.has(key)) {\n      return this.dictionary.get(key)!\n    } else {\n      throw new Error(`해당 key: ${key}에 대한 link를 찾지 못함.`)\n    }\n  }\n\n  private decodeBase64URLEncoding(url: string) {\n    return decodeURIComponent(url)\n  }\n}\n","import { FC, useState } from 'react'\n\nimport { MdxNode } from 'types/mdx-types'\nimport { ChildrenProps } from 'types/react-types'\nimport TableOfContentTree from 'datastructures/tableOfContents/TableOfContentTree'\n\nimport { ArticleContext } from './ArticleContext'\n\nexport type ArticleContextProviderProps = {\n  data: {\n    mdx: MdxNode\n  }\n} & ChildrenProps\n\nconst ArticleContextProvider: FC<ArticleContextProviderProps> = ({\n  data,\n  children,\n}) => {\n  const tableOfContentTree = new TableOfContentTree(data.mdx.tableOfContents)\n  const [tableOfContents, mutateTree] =\n    useState<TableOfContentTree>(tableOfContentTree)\n\n  const activateTarget = (url: string) => {\n    mutateTree(prev => prev.activate(url))\n  }\n\n  return (\n    <ArticleContext.Provider\n      value={{ ...data.mdx, tableOfContents, activateTarget }}\n    >\n      {children}\n    </ArticleContext.Provider>\n  )\n}\n\nexport default ArticleContextProvider\n","import React, { FC } from 'react'\n\nimport ArticleContextProvider, {\n  ArticleContextProviderProps,\n} from './article/ArticleContextProvider'\nimport CategoryContextProvider, {\n  CategoryContextProviderProps,\n} from './category/CategoryContextProvider'\n\ntype ArticlePageContextProps = {} & CategoryContextProviderProps &\n  ArticleContextProviderProps\n\nconst ArticlePageContext: FC<ArticlePageContextProps> = ({\n  data,\n  children,\n}) => {\n  return (\n    <>\n      <CategoryContextProvider\n        categoryDirectory={data.mdx.fields.categoryDirectory}\n      >\n        <ArticleContextProvider data={data}>{children}</ArticleContextProvider>\n      </CategoryContextProvider>\n    </>\n  )\n}\n\nexport default ArticlePageContext\n","import TableOfContentTree from 'datastructures/tableOfContents/TableOfContentTree'\nimport React from 'react'\nimport { MdxField, MdxFrontmatter } from 'types/mdx-types'\n\ninterface ArticleContextProps {\n  frontmatter: MdxFrontmatter\n  tableOfContents: TableOfContentTree\n  fields: MdxField\n\n  activateTarget: (url: string) => void\n}\n\nexport const ArticleContext = React.createContext<ArticleContextProps>(\n  {} as ArticleContextProps,\n)\n","import CategoryService from 'dataLayer/services/CategoryService'\n\nclass CategoryAPI {\n  constructor(private categoryService: CategoryService) {}\n\n  async getCategoryTree() {\n    return await this.categoryService.getCategoryTreee()\n  }\n\n  getCategoryTreeSync() {\n    return this.categoryService.getCategoryTreeSync()\n  }\n}\n\nexport default CategoryAPI\n","import { GroupByNode } from 'types/mdx-types'\nimport { PageGraphQL } from 'types/nodeapi-types'\nimport MdxQueries from './mdxQueries'\n\ntype AllCategoryGroupbyQuery = {\n  data: {\n    allCategory: {\n      group: GroupByNode[]\n    }\n  }\n}\n\nclass MdxPageQueries implements MdxQueries {\n  constructor(private graphql: PageGraphQL) {}\n\n  async getCategoryGroupbyCategoryDirectory(): Promise<GroupByNode[]> {\n    const result = (await this.graphql(`\n        query mdxGroupBySlug {\n          allCategory(sort: { categoryDirectory: ASC }) {\n            group(field: { categoryDirectory: SELECT }) {\n              fieldValue\n              totalCount\n            }\n          }\n        }\n      `)) as AllCategoryGroupbyQuery\n\n    return result.data.allCategory.group\n  }\n}\n\nexport default MdxPageQueries\n","import { graphql, useStaticQuery } from 'gatsby'\n\nimport { GroupByNode } from 'types/mdx-types'\nimport MdxQueries from './mdxQueries'\n\nclass MdxStaticQueries implements MdxQueries {\n  constructor() {}\n\n  getCategoryGroupbyCategoryDirectory(): GroupByNode[] {\n    const data = useStaticQuery(graphql`\n      query mdxGroupBySlug {\n        allCategory(sort: { categoryDirectory: ASC }) {\n          group(field: { categoryDirectory: SELECT }) {\n            fieldValue\n            totalCount\n          }\n        }\n      }\n    `)\n\n    return data.allCategory.group\n  }\n}\n\nexport default MdxStaticQueries\n","import MdxQueries from '../queries/mdxQueries'\n\nclass CategoryQueryService {\n  constructor(private mdxQueries: MdxQueries) {}\n\n  async getCategories() {\n    const data = this.mdxQueries.getCategoryGroupbyCategoryDirectory()\n    return this.resolvePromise(data)\n  }\n\n  getCategoriesSync() {\n    return this.mdxQueries.getCategoryGroupbyCategoryDirectory()\n  }\n\n  private async resolvePromise<T>(data: Promise<T> | T) {\n    if (data instanceof Promise) {\n      return data\n    }\n    return data\n  }\n}\n\nexport default CategoryQueryService\n","import { categoryConfigs } from '../../configuration'\nimport CategoryStrings from './CategoryStrings'\nimport CategoryTree, { CategoryTreeObject } from './CategoryTree'\n\nexport default class CategoryNode {\n  private static readonly MAX_DEPTH = categoryConfigs.maxDepth\n  private count: number = 0\n  private activated: boolean = false\n  readonly subCategories: Map<string, CategoryNode> = new Map()\n  readonly categoryString: CategoryStrings\n\n  constructor(\n    readonly name: string,\n    readonly motherTree: CategoryTree,\n    readonly nodeDepth: number = 0,\n    readonly parent?: CategoryNode,\n  ) {\n    const categoryDirectory = this.constructCategoryDirectory()\n    this.categoryString = CategoryStrings.initialize(categoryDirectory)\n  }\n\n  add(categories: string[], count: number) {\n    this.increaseCount(count)\n    if (this.shouldExit(categories)) {\n      return\n    }\n\n    this.addSubNodeRecursively(categories, count)\n  }\n\n  activateRecursively(currentSlug: string) {\n    if (currentSlug.startsWith(this.categoryString.slug)) {\n      this._activate()\n    }\n    this.subCategories.forEach(cat => cat.activateRecursively(currentSlug))\n  }\n\n  toObject() {\n    const current: CategoryTreeObject = this.createCurrentObject()\n    this.subCategories.forEach(category => {\n      const subObject = category.toObject()\n      current.sub.push(subObject)\n    })\n\n    return current\n  }\n\n  deactivate() {\n    this.activated = false\n  }\n\n  private _activate() {\n    this.motherTree.changeActivatedNode(this)\n    this.activated = true\n  }\n\n  private createCurrentObject() {\n    return {\n      name: this.name,\n      count: this.count,\n      slug: this.categoryString.slug,\n      activated: this.activated,\n      categoryDirectory: this.categoryString.categoryDirectory,\n      nodeDepth: this.nodeDepth,\n      sub: [],\n    }\n  }\n\n  private addSubNodeRecursively(categories: string[], count: number) {\n    const name = categories.shift()!\n    this.setSubNodeIfFirst(name)\n    this.subCategories.get(name)!.add(categories, count)\n  }\n\n  private setSubNodeIfFirst(name: string) {\n    if (this.subNodeExists(name)) {\n      return\n    }\n\n    const subNode = new CategoryNode(\n      name,\n      this.motherTree,\n      this.nodeDepth + 1,\n      this,\n    )\n    this.subCategories.set(name, subNode)\n  }\n\n  private constructCategoryDirectory() {\n    if (this.parent) {\n      return this.parent.categoryString.categoryDirectory + this.name\n    }\n    return ''\n  }\n\n  private isEmpty(arr: Array<unknown>) {\n    return arr.length <= 0\n  }\n\n  private increaseCount(count: number) {\n    this.count += count\n  }\n\n  private shouldExit(categories: string[]) {\n    return this.isEmpty(categories) || !this.depthAvailable()\n  }\n\n  private depthAvailable() {\n    return this.nodeDepth < CategoryNode.MAX_DEPTH\n  }\n\n  private subNodeExists(name: string) {\n    return this.subCategories.has(name)\n  }\n}\n","import CategoryNode from './CategoryNode'\n\nexport type CategoryTreeObject = {\n  name: string\n  count: number\n  categoryDirectory: string\n  activated: boolean\n  slug: string\n  nodeDepth: number\n  sub: CategoryTreeObject[]\n}\n\nexport default class CategoryTree {\n  private static readonly ROOT_NODE_NAME = 'total'\n  private root: CategoryNode\n  private activatedNode?: CategoryNode\n\n  constructor() {\n    this.root = new CategoryNode(CategoryTree.ROOT_NODE_NAME, this)\n  }\n\n  append(categories: string[], count: number) {\n    this.root.add(categories, count)\n  }\n\n  activateCurrentCategory(currentSlug: string) {\n    this.root.activateRecursively(currentSlug)\n  }\n\n  changeActivatedNode(categoryNode: CategoryNode) {\n    if (this.activatedNode) {\n      this.activatedNode.deactivate()\n    }\n    this.activatedNode = categoryNode\n  }\n\n  toObject() {\n    return this.root.toObject()\n  }\n}\n","import CategoryTree from '../../datastructures/category/CategoryTree'\nimport { GroupByNode } from '../../@types/mdx-types'\nimport CategoryQueryService from './CategoryQueryService'\nimport CategoryStrings from '../../datastructures/category/CategoryStrings'\n\nclass CategoryService {\n  constructor(private categoryQueryService: CategoryQueryService) {}\n\n  async getCategoryTreee() {\n    const categoryNodes = await this.categoryQueryService.getCategories()\n    return this.constructCategoryTree(categoryNodes)\n  }\n\n  getCategoryTreeSync() {\n    const categoryNodes = this.categoryQueryService.getCategoriesSync()\n    if (!(categoryNodes instanceof Promise)) {\n      return this.constructCategoryTree(categoryNodes)\n    }\n    throw new Error(\"Don't Call this function with page query\")\n  }\n\n  private constructCategoryTree(categoryNodes: GroupByNode[]) {\n    const categoryTree = new CategoryTree()\n\n    categoryNodes.forEach(node => {\n      const categoryString = CategoryStrings.initialize(node.fieldValue)\n      const count = node.totalCount\n      categoryTree.append(categoryString.categories, count)\n    })\n\n    return categoryTree\n  }\n}\n\nexport default CategoryService\n","import { PageGraphQL } from '../../@types/nodeapi-types'\n\nimport CategoryAPI from '../api/CategoryAPI'\nimport MdxPageQueries from '../queries/MdxPageQueries'\nimport MdxQueries from '../queries/mdxQueries'\nimport MdxStaticQueries from '../queries/MdxStaticQueries'\nimport CategoryQueryService from '../services/CategoryQueryService'\nimport CategoryService from '../services/CategoryService'\n\nclass CategoryApiConfigurator {\n  public readonly api: CategoryAPI\n\n  public constructor(private graphql?: PageGraphQL) {\n    this.api = this._constructCategoryAPI()\n  }\n\n  private _constructCategoryAPI() {\n    const mdxQueries = this._getMdxQueries()\n    const categoryQueryService = this._getCategoryQueryService(mdxQueries)\n    const categoryService = this._getCategoryService(categoryQueryService)\n    return new CategoryAPI(categoryService)\n  }\n\n  private _getCategoryService(categoryQueryService: CategoryQueryService) {\n    return new CategoryService(categoryQueryService)\n  }\n\n  private _getCategoryQueryService(mdxQueries: MdxQueries) {\n    return new CategoryQueryService(mdxQueries)\n  }\n\n  private _getMdxQueries() {\n    if (this.graphql) {\n      return new MdxPageQueries(this.graphql)\n    }\n    return new MdxStaticQueries()\n  }\n}\n\nexport default CategoryApiConfigurator\n","import { PageGraphQL } from 'types/nodeapi-types'\n\nimport CategoryAPI from './api/CategoryAPI'\nimport CategoryApiConfigurator from './configurators/CategoryApiConfigurator'\n\nexport default class DataLayer {\n  private static _singleton: DataLayer\n  private _categoryApi: CategoryAPI\n\n  private constructor() {\n    this._categoryApi = new CategoryApiConfigurator().api\n  }\n\n  get categoryApi() {\n    return this._categoryApi\n  }\n\n  static get singleton() {\n    if (!this._singleton) {\n      this._singleton = new DataLayer()\n    }\n    return this._singleton\n  }\n\n  public configurePageGraphql(graphql: PageGraphQL): DataLayer {\n    this._categoryApi = new CategoryApiConfigurator(graphql).api\n    return this\n  }\n}\n","import { Pages, PAGE_PREFIX } from 'constants/PageConsts'\nimport CategoryTree from 'datastructures/category/CategoryTree'\n\nexport default function activateCurrentCategories(\n  tree: CategoryTree,\n  categoryDirectory?: string,\n) {\n  const currentEndpoint = getCurrentEndpointDecoded()\n\n  const page = findCurrentPageByEndpoint(currentEndpoint)\n  let currentSlug = getCurrentSlug(currentEndpoint, page)\n\n  if (categoryDirectory) {\n    currentSlug = categoryDirectory\n  }\n\n  switch (page) {\n    case 'INDEX':\n      break\n    default:\n      tree.activateCurrentCategory(currentSlug)\n  }\n}\n\nfunction getCurrentEndpointDecoded() {\n  let pathname = '/'\n  if (typeof window !== 'undefined') {\n    pathname = window.location.pathname\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nfunction getCurrentSlug(currentEndpoint: string, page: Pages) {\n  const pagePrefix = PAGE_PREFIX[page]\n  return currentEndpoint.split(pagePrefix)[1]\n}\n\nfunction findCurrentPageByEndpoint(currentEndpoint: string) {\n  const pageKeys = Object.keys(PAGE_PREFIX) as Pages[]\n  const originPage = pageKeys.find(key =>\n    currentEndpoint.startsWith(PAGE_PREFIX[key]),\n  )\n  throwIfPageNotFound(originPage)\n  return originPage!\n}\n\nfunction throwIfPageNotFound(page?: Pages) {\n  if (!page) {\n    throw new Error('CategoryContext가 올바르지 않은 페이지에서 생성됨')\n  }\n}\n\nconst isBrowser = () => typeof window !== 'undefined'\n","import React, { FC } from 'react'\n\nimport DataLayer from 'datalayer/DataLayer'\nimport { ChildrenProps } from 'types/react-types'\nimport activateCurrentCategories from 'utils/pageApi/activateCurrentCatgeories'\n\nimport { CategoryContext } from './CategoryContext'\n\nexport type CategoryContextProviderProps = {\n  categoryDirectory?: string\n} & ChildrenProps\n\nconst CategoryContextProvider: FC<CategoryContextProviderProps> = ({\n  categoryDirectory,\n  children,\n}) => {\n  const api = DataLayer.singleton.categoryApi\n  const categoryTree = api.getCategoryTreeSync()\n  activateCurrentCategories(categoryTree, categoryDirectory)\n  return (\n    <CategoryContext.Provider\n      value={{\n        categoryTree,\n      }}\n    >\n      {children}\n    </CategoryContext.Provider>\n  )\n}\n\nexport default CategoryContextProvider\n","import { categoryConfigs } from '../../configuration'\nimport { slugify } from '../../utils/slug'\n\nclass CategoryStringParser {\n  private static CATEGORY_MAX_DEPTH: number = categoryConfigs.maxDepth\n  private static instance: CategoryStringParser\n  private constructor() {}\n\n  static singleton() {\n    this._setInstanceIfNotExists()\n    return this.instance\n  }\n\n  toCategoryDirectory(filePath: string) {\n    const directories = filePath.split('/')\n    this.lrStripSlashes(directories)\n    this.dropFilename(directories)\n    this.dropExeedingCategories(directories)\n    return directories.reduce((prev, curr) => {\n      return prev + curr + '/'\n    }, '/')\n  }\n\n  toCategories(categoryDirectory: string) {\n    const categories = categoryDirectory.split('/')\n    this.purifyCategories(categories)\n\n    return categories\n  }\n\n  toSlug(categories: string[]) {\n    this.purifyCategories(categories)\n\n    return categories.reduce((prev, curr) => {\n      return prev + slugify(curr) + '/'\n    }, '/')\n  }\n\n  refineCategoryDirectory(categoryDirectory: string) {\n    if (categoryDirectory[categoryDirectory.length - 1] !== '/') {\n      return categoryDirectory + '/'\n    }\n    return categoryDirectory\n  }\n\n  private purifyCategories(categories: string[]) {\n    this.lrStripSlashes(categories)\n    this.dropExeedingCategories(categories)\n  }\n\n  private dropExeedingCategories(splited: string[]) {\n    while (splited.length > CategoryStringParser.CATEGORY_MAX_DEPTH) {\n      splited.pop()\n    }\n  }\n\n  private dropFilename(splited: string[]) {\n    splited.pop()\n  }\n\n  private lrStripSlashes(splited: string[]) {\n    this.stripLeadingSlash(splited)\n    this.stripTrailingSlash(splited)\n  }\n\n  private stripLeadingSlash(splited: string[]) {\n    if (this.hasLeadingSlash(splited)) {\n      splited.shift()\n    }\n  }\n\n  private stripTrailingSlash(splited: string[]) {\n    if (this.hasTrailingSlash(splited)) {\n      splited.pop()\n    }\n  }\n\n  private hasLeadingSlash(splited: string[]) {\n    return splited[0] === ''\n  }\n\n  private hasTrailingSlash(splited: string[]) {\n    const lastIndex = splited.length - 1\n    return splited[lastIndex] === ''\n  }\n\n  private static _setInstanceIfNotExists() {\n    if (!this.instance) {\n      this.instance = new CategoryStringParser()\n    }\n  }\n}\n\nexport default CategoryStringParser\n","import CategoryStringParser from './CategoryStringParser'\n\ntype CallerType = 'FilePath' | 'CategoryDirectory'\n\nclass CategoryStrings {\n  public readonly categoryDirectory: string\n  public readonly categories: string[]\n  public readonly slug: string\n  private readonly parser: CategoryStringParser =\n    CategoryStringParser.singleton()\n\n  public static initialize(directory: string) {\n    return new CategoryStrings(directory, 'CategoryDirectory')\n  }\n\n  public static initializeWithFilePath(directory: string) {\n    return new CategoryStrings(directory, 'FilePath')\n  }\n\n  public isParentOf(categoryString: CategoryStrings) {\n    return categoryString.categoryDirectory.startsWith(this.categoryDirectory)\n  }\n\n  private constructor(directory: string, caller: CallerType) {\n    switch (caller) {\n      case 'FilePath':\n        this.categoryDirectory = this.parser.toCategoryDirectory(directory)\n        break\n      case 'CategoryDirectory':\n        this.categoryDirectory = this.parser.refineCategoryDirectory(directory)\n    }\n    this.categories = this.parser.toCategories(directory)\n    this.slug = this.parser.toSlug(this.categories)\n  }\n}\n\nexport default CategoryStrings\n","export function slugify(value: string) {\n  let slug = trimSpaces(value)\n  slug = convertConnectiveCharToHyphen(slug)\n  slug = camelToHyphenedSnake(slug)\n  slug = removeUrlUnsafeChars(slug)\n  slug = condensConsecutiveHyphens(slug)\n  return slug\n}\n\nfunction trimSpaces(slug: string) {\n  return slug.trimStart().trimEnd()\n}\n\nfunction convertConnectiveCharToHyphen(slug: string) {\n  return slug.replace(/[\\s_:;]+/g, '-')\n}\n\nfunction camelToHyphenedSnake(slug: string) {\n  return slug\n    .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\n    .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\n    .replace(/[-\\s]+/g, '-')\n    .toLowerCase()\n}\n\nfunction removeUrlUnsafeChars(slug: string) {\n  return slug.replace(/[.,!?:;\"'`^*(){}]/g, '')\n}\n\nfunction condensConsecutiveHyphens(slug: string) {\n  return slug.replace(/-+/g, '-')\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  let allComponents = useMDXComponents(components)\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["style","creationCSS","css","GRAY","_ref","createdAt","timeToRead","modifiedAt","jsx","m_mq","fontSize","Mapper","title","ArticleFrontmatterTitle","ArticleFrontmatterDate","useTableOfContentsObserver","activateTarget","useContext","ArticleContext","triggerRerender","useState","observerCallback","entries","length","currentEntry","url","entry","target","getAttribute","retrieveHrefFromEntry","activateCurrentIndex","observerOptions","root","rootMargin","threshold","useEffect","observer","IntersectionObserver","document","querySelectorAll","forEach","headerLink","observe","disconnect","activated","LIGHT_GRAY","fields","slug","Link","to","depth","TableOfContentsCell","data","TOCTitle","items","map","item","id","key","BORDER_MUSK","tableOfContents","layoutProps","leftStack","___EmotionJSX","BioAndCategories","rightStack","TableOfContents","children","Layout","CategoryTable","H1","H2","H3","H4","H5","P","STRONG","EM","HR","BLOCKQUOTE","DEL","A","themeConfigs","UL","OL","LI","TH","TD","TABLE","TBODY","require","className","MDXProvider","components","h1","Remark","h2","h3","h4","h5","p","strong","em","del","hr","a","ol","ul","li","blockquote","th","td","table","tbody","titlePrefix","canonical","keywords","siteUrl","description","MetadataApiConfigurator","faviconUrl","AssetApiConfigurator","keywordString","join","representingTitle","value","href","rel","name","content","httpEquiv","property","ArticlePageHead","location","pathname","mdx","frontmatter","SEO","CategoryPageHead","_ref2","pageContext","categoryDirectory","categoryString","categories","getTitlePrefix","CategoryStrings","NotFoundPageHead","InternalErrorPageHead","TableNode","motherTree","Array","this","_appendItems","_mapDictionaryToMotherTree","isActivated","activate","deactivate","depthAvailable","childTable","push","dictionary","set","MAX_DEPTH","tableOfContentConfigs","TableOfContentTree","Map","activateNewNodeIfExists","currentNode","findTableNodeOrThrow","deactivateCurrentActivatedNode","activateNewNode","e","console","log","message","activatedNode","_this$activatedNode","node","decodeBase64URLEncoding","has","get","Error","decodeURIComponent","tableOfContentTree","mutateTree","prev","CategoryContextProvider","ArticleContextProvider","React","categoryService","getCategoryTree","async","getCategoryTreee","getCategoryTreeSync","graphql","getCategoryGroupbyCategoryDirectory","allCategory","group","useStaticQuery","mdxQueries","getCategories","resolvePromise","getCategoriesSync","CategoryNode","nodeDepth","parent","count","subCategories","constructCategoryDirectory","add","increaseCount","shouldExit","addSubNodeRecursively","activateRecursively","currentSlug","startsWith","_activate","cat","toObject","current","createCurrentObject","category","subObject","sub","changeActivatedNode","shift","setSubNodeIfFirst","subNodeExists","subNode","isEmpty","arr","categoryConfigs","CategoryTree","ROOT_NODE_NAME","append","activateCurrentCategory","categoryNode","categoryQueryService","categoryNodes","constructCategoryTree","Promise","categoryTree","fieldValue","totalCount","api","_constructCategoryAPI","_getMdxQueries","_getCategoryQueryService","_getCategoryService","CategoryAPI","CategoryService","CategoryQueryService","MdxPageQueries","MdxStaticQueries","DataLayer","_categoryApi","CategoryApiConfigurator","configurePageGraphql","_singleton","activateCurrentCategories","tree","currentEndpoint","window","getCurrentEndpointDecoded","page","originPage","Object","keys","PAGE_PREFIX","find","throwIfPageNotFound","findCurrentPageByEndpoint","pagePrefix","split","getCurrentSlug","singleton","categoryApi","CategoryContext","CategoryStringParser","_setInstanceIfNotExists","instance","toCategoryDirectory","filePath","directories","lrStripSlashes","dropFilename","dropExeedingCategories","reduce","curr","toCategories","purifyCategories","toSlug","slugify","refineCategoryDirectory","splited","CATEGORY_MAX_DEPTH","pop","stripLeadingSlash","stripTrailingSlash","hasLeadingSlash","hasTrailingSlash","directory","caller","parser","initialize","initializeWithFilePath","isParentOf","trimStart","trimEnd","trimSpaces","replace","convertConnectiveCharToHyphen","toLowerCase","camelToHyphenedSnake","removeUrlUnsafeChars","condensConsecutiveHyphens","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider"],"sourceRoot":""}