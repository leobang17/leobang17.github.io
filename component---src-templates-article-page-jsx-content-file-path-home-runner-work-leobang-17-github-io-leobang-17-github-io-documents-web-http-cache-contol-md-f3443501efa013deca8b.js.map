{"version":3,"file":"component---src-templates-article-page-jsx-content-file-path-home-runner-work-leobang-17-github-io-leobang-17-github-io-documents-web-http-cache-contol-md-f3443501efa013deca8b.js","mappings":"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","sources":["webpack://gatsby-theme-simplex/./documents/Web/http-cache-contol.md","webpack://gatsby-theme-simplex/./src/templates/ArticlePage.jsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    blockquote: \"blockquote\",\n    p: \"p\",\n    h2: \"h2\",\n    a: \"a\",\n    div: \"div\",\n    code: \"code\",\n    pre: \"pre\",\n    ul: \"ul\",\n    li: \"li\",\n    ol: \"ol\",\n    h5: \"h5\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"HTTP의 cache manipulation을 위한 header들을 확인하며 cache contol strategy에 대해서 알아보자.\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"cache-control-헤더를-이용해-브라우저에-응답을-캐싱하자\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#cache-control-%ED%97%A4%EB%8D%94%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%B4-%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80%EC%97%90-%EC%9D%91%EB%8B%B5%EC%9D%84-%EC%BA%90%EC%8B%B1%ED%95%98%EC%9E%90\",\n    \"aria-label\": \"cache control 헤더를 이용해 브라우저에 응답을 캐싱하자 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Cache-Control 헤더를 이용해 브라우저에 응답을 캐싱하자\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"cache-control\"), \" 헤더는 웹 서버 측에서 Response를 보낼 때 붙이게 된다. 해당 응답을 브라우저 캐시에 저장하되, \", React.createElement(_components.code, null, \"max-age\"), \"로 언제까지 해당 cache가 이용 가능한지 지정하게 된다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-http\"\n  }, \"HTTP/1.1 200 OK \\nContent-Type: image/jpeg\\ncache-control: max-age=60\\n// ...\\n\")), \"\\n\", React.createElement(_components.p, null, \"이러한 응답을 받으면 브라우저는 브라우저 캐시에 응답 결과를 \", React.createElement(_components.code, null, \"max-age\"), \" 만큼 보관하게되고, 동일한 리소스에 대한 \", React.createElement(\"u\", null, \"재요청이 일어난다면 브라우저 캐시에 저장된 결과를 참조\"), \"한다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"max-age의 유효 범위에 있다면 cache validation을 위한 요청을 날리지 않는다. (기본적인 \", React.createElement(_components.code, null, \"must-revalidate\"), \" 전략을 사용하는 경우)\"), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"shared cache에 대한 유효 기간을 설정하기 위해서는 \", React.createElement(_components.code, null, \"s-max-age\"), \" directive를 사용하면 된다.\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"cache-validation-캐시를-아직도-써도-될까\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#cache-validation-%EC%BA%90%EC%8B%9C%EB%A5%BC-%EC%95%84%EC%A7%81%EB%8F%84-%EC%8D%A8%EB%8F%84-%EB%90%A0%EA%B9%8C\",\n    \"aria-label\": \"cache validation 캐시를 아직도 써도 될까 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Cache Validation: 캐시를 아직도 써도 될까?\"), \"\\n\", React.createElement(_components.p, null, \"브라우저 캐시 스토리지에 저장은 되어있지만, \", React.createElement(\"u\", null, \"cache가 만료된 경우엔 cache validation을 하게 된다\"), \". 보통 cache-control은 짧은 시간을 가지게 한다. 변경되었는지 검증도 하지 않고 브라우저 캐시만 조회하므로 길게 두면 정합성 문제가 쉽게 발생할 수 있기 떄문이다.\"), \"\\n\", React.createElement(_components.p, null, \"이 때 Cache Validation을 위해 크게 2가지 방법을 사용한다.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Last-Modified & if-modified-since\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"변경 시점을 기반으로 한 cache validation\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"Etag & If-None-Match\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"리소스 자체의 변경을 감지하는 cache validation\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"1번 방법을 이용하든 2번 방법을 이용하든 서버 측에서 보낼 응답은 동일하다. 만일 아직 cache가 유효하다면 (변경되지 않았다면), \", React.createElement(_components.code, null, \"304 Not Modified\"), \" 응답을 돌려보내준다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-http\"\n  }, \"HTTP/1.1 304 Not Modified\\nContent-Type: image/jpeg\\ncache-control: max-age=60\\nLast-Modified: 2020년 11월 10일 10:00:00 // 시간 기반으로 cache control 하는 경우 \\nEtag: \\\"aveadfeadafe\\\" // 리소스 변경 감지 기반으로 cache control 하는 경우\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"이 때 리소스는 body에 담아 반환하지 않으므로 메타데이터만 전달하게 되어 굉장히 가벼운 확인용 응답이다.\"), \"\\n\", React.createElement(_components.li, null, \"브라우저는 캐시 스토리지에 저장된 데이터를 끌어와서 쓰게되며, 다시 cache-control의 유효 기간을 갱신해주게 된다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"만약 cache가 유효하지 않다면 (변경된 새로운 버전이 있다면) 변경된 원본 응답을 보내주면 된다.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"캐시-검증-last-modified--if-modified-since-를-이용해서\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EC%BA%90%EC%8B%9C-%EA%B2%80%EC%A6%9D-last-modified--if-modified-since-%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%B4%EC%84%9C\",\n    \"aria-label\": \"캐시 검증 last modified  if modified since 를 이용해서 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"캐시 검증: Last-Modified & if-modified-since 를 이용해서\"), \"\\n\", React.createElement(_components.p, null, \"서버는 클라이언트에게 응답을 보낼 때 \", React.createElement(_components.code, null, \"Last-Modified\"), \" 헤더를 이용해 \", React.createElement(\"u\", null, \"해당 리소스가 언제 마지막으로 수정되었는지\"), \" 알려주게된다.\"), \"\\n\", React.createElement(_components.p, null, \"그러면, client는 추후에 캐시 유효기간은 만료되었지만 스토리지에 저장되어있는 경우 다음과 같이 요청을 보내 캐시를 아직 이용해도 되는지 묻게된다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-http\"\n  }, \"GET /star.jpg HTTP/1.1\\nif-modified-since: 2020년 11월 11일 10:00:00 \\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"이 때 \", React.createElement(_components.code, null, \"if-modified-since\"), \"의 헤더는 해당 요청에 대해 캐시된 응답에서 알려준 \", React.createElement(_components.code, null, \"Last-Modified\"), \"의 값이다.\"), \"\\n\", React.createElement(_components.li, null, \"즉, 변경시점이 동일한지. 내가 가지고 있는게 최신 버전이 맞는지를 확인한다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"cache가 유효한 경우 위의 \", React.createElement(_components.code, null, \"304 Not Modified\"), \" 응답을 얻게되고, 유효하지 않을 경우 원본이 담긴 응답을 받게 된다.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"캐시-검증-etag--if-none-match를-이용해서\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EC%BA%90%EC%8B%9C-%EA%B2%80%EC%A6%9D-etag--if-none-match%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%B4%EC%84%9C\",\n    \"aria-label\": \"캐시 검증 etag  if none match를 이용해서 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"캐시 검증: Etag & If-None-Match를 이용해서\"), \"\\n\", React.createElement(_components.p, null, \"Etag는 해당 데이터를 이용해 \", React.createElement(\"u\", null, \"생성한 임의의 hash 값\"), \"이다. 시간보다는 원본 데이터의 변경 그 자체를 감지하게 된다.\"), \"\\n\", React.createElement(_components.p, null, \"Hash 함수의 특성상 input 데이터가 변경되면 output 데이터가 변경되는 것이므로 \", React.createElement(\"u\", null, \"단순히 \", React.createElement(_components.code, null, \"Etag\"), \"가 동일한지 확인하여 데이터가 수정되었는지 아닌지 확인\"), \"할 수 있다.\"), \"\\n\", React.createElement(_components.p, null, \"서버는 클라이언트에게 응답을 보낼 때 \", React.createElement(_components.code, null, \"Etag\"), \" 헤더를 이용해 \", React.createElement(\"u\", null, \"리소스의 마지막 버전\"), \"을 알려주게 된다.\"), \"\\n\", React.createElement(_components.p, null, \"그러면, client는 추후에 캐시 유효기간은 만료되었지만 스토리지에 저장되어있는 경우 다음과 같이 요청을 보내 캐시를 아직 이용해도 되는지 묻게된다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-http\"\n  }, \"GET /star.jpg HTTP/1.1\\nIf-None-Match: \\\"aveadfeadafe\\\"\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"서버 측이 가지고 있는 Etag 값과 동일하다면 \", React.createElement(_components.code, null, \"304 Not Modified\"), \"를 응답하고, 아닐 경우 원본 응답을 돌려준다.\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"캐시-검증에-어떤-방식을-쓰는-것이-좋은가\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EC%BA%90%EC%8B%9C-%EA%B2%80%EC%A6%9D%EC%97%90-%EC%96%B4%EB%96%A4-%EB%B0%A9%EC%8B%9D%EC%9D%84-%EC%93%B0%EB%8A%94-%EA%B2%83%EC%9D%B4-%EC%A2%8B%EC%9D%80%EA%B0%80\",\n    \"aria-label\": \"캐시 검증에 어떤 방식을 쓰는 것이 좋은가 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"캐시 검증에 어떤 방식을 쓰는 것이 좋은가?\"), \"\\n\", React.createElement(_components.p, null, \"보통은 \", React.createElement(_components.code, null, \"Etag\"), \"을 이용하는 방식이 더 자유도가 높다.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"시간 기반의 캐시 검증은 \", React.createElement(\"u\", null, \"1초 미만 단위 (0.x초)\"), \"의 캐시 조정이 불가능하다.\"), \"\\n\", React.createElement(_components.li, null, \"서버 측에서 캐시 전략을 보다 자유롭게 수립할 수 있다.\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Etag의 경우 \", React.createElement(\"u\", null, \"서버에서 별도로 캐시 로직을 관리\"), \"할 수 있다. 예를들어, 주석이나 스페이스처럼 크게 영향이 없는 modification에 대해 cache를 유지하도록 할 수도 있다.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"원본 데이터로 rollback된 경우\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"브라우저 캐시에 \", React.createElement(_components.code, null, \"A\"), \" 데이터가 저장되어있다고 가정하자. 서버 측에서 \", React.createElement(_components.code, null, \"A -> B\"), \"로 수정했지만, 바로 \", React.createElement(_components.code, null, \"B -> A\"), \"로 롤백한 경우를 생각해보자.\"), \"\\n\", React.createElement(_components.li, null, \"시간 기반으로 캐시 검증을 할 경우 다시 받아오게 된다.\"), \"\\n\", React.createElement(_components.li, null, \"Etag  기반으로 검증할 경우 리소스의 변경사항이 없으므로 브라우저 캐시를 활용한다.\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"cache-control-헤더를-이용한-다양한-캐시-전략\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#cache-control-%ED%97%A4%EB%8D%94%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EB%8B%A4%EC%96%91%ED%95%9C-%EC%BA%90%EC%8B%9C-%EC%A0%84%EB%9E%B5\",\n    \"aria-label\": \"cache control 헤더를 이용한 다양한 캐시 전략 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Cache-Control 헤더를 이용한 다양한 캐시 전략\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"Cache-Control\"), \" 헤더의 directives를 이용해 다양한 캐시 전략을 수립할 수 있다.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"no-cache\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"응답이 캐싱될 수 있지만, 매 요청마다 cache validation을 선행해야한다는 지침.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"max-age=0\"), \"과 동일한 효과를 가진다.\"), \"\\n\", React.createElement(_components.li, null, \"Origin Server에 접근할 수 없는 경우, proxy에 저장된 캐시를 200 OK로 던져주어도 된다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"no-store\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"응답을 아예 캐싱하지 않는다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"must-revalidate\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"캐시 만료 후 최초 조회 시 origin server에 cache validation을 진행하라는 의미\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(\"u\", null, \"origin server에 접근 실패할 경우 504 Gateway Timeout을 반드시 던져야 한다.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"max-age\"), \"보다 많이 남아있을 경우 캐시를 먼저 이용한다. \", React.createElement(_components.code, null, \"max-age\"), \"와 함께 이용되는 가장 기본적인 전략.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"proxy-revalidate\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"must-revalidate\"), \"와 동일한 역할을 수행한다. CDN이나 프록시 서버와 같은 shared cache에 적용할 때 이용함.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"must-revalidate\"), \"는 private cache에 이용된다.\"), \"\\n\"), \"\\n\", React.createElement(_components.h5, {\n    id: \"private-cache와-shared-cache\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#private-cache%EC%99%80-shared-cache\",\n    \"aria-label\": \"private cache와 shared cache permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"private cache와 shared cache\"), \"\\n\", React.createElement(_components.p, null, \"private cache는 특정 클라이언트를 위한 캐시이다. 일반적인 브라우저에 저장하는 캐시를 생각하면 된다.\"), \"\\n\", React.createElement(_components.p, null, \"반면 shared cache는 \", React.createElement(\"u\", null, \"CDN 혹은 프록시 서버\"), \"와 같이 다수의 client에게 캐시를 제공하는 입장에서의 캐시를 의미한다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"private\"), \" directive를 이용해 private cache임을 명시할 수 있고, \", React.createElement(_components.code, null, \"public\"), \" directive를 이용해 shared cache임을 명시할 수 있다.\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/leobang17.github.io/leobang17.github.io/documents/Web/http-cache-contol.md\";\nimport React from 'react';\nimport {graphql} from 'gatsby';\nimport ArticleLayout from 'components/Layout/ArticleLayout';\nimport MarkdownWrapper from 'components/MarkdownWrapper';\nimport ArticleFrontmatter from 'components/ArticleFrontmatter';\nimport ArticlePageContext from 'contexts/ArticlePageContext';\nimport Utterances from 'components/Utterance';\nimport RecentPosts from 'components/RecentPosts/RecentPosts';\nconst isBrowser = typeof window !== undefined;\nconst ArticlePage = ({data, children, serverData}) => {\n  const {prevPost, nextPost} = data;\n  const frontmatters = {\n    ...data.mdx.frontmatter,\n    timeToRead: data.mdx.fields.timeToRead\n  };\n  return React.createElement(ArticlePageContext, {\n    data: data\n  }, React.createElement(ArticleLayout, null, React.createElement(ArticleFrontmatter, frontmatters), React.createElement(MarkdownWrapper, null, children), React.createElement(RecentPosts, {\n    prev: prevPost,\n    next: nextPost\n  }), React.createElement(Utterances)));\n};\nArticlePage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ArticlePage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String, $nextId: String, $prevId: String) {\n    mdx(id: { eq: $id }) {\n      id\n      fields {\n        slug\n        timeToRead\n        categoryDirectory\n      }\n      frontmatter {\n        title\n        createdAt(formatString: \"MMMM DD, YYYY\")\n      }\n      tableOfContents\n    }\n    prevPost: mdx(id: { eq: $prevId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    nextPost: mdx(id: { eq: $nextId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\nexport {ArticlePageHead as Head} from 'components/head';\n"],"names":["_createMdxContent","props","_components","Object","assign","blockquote","p","h2","a","div","code","pre","ul","li","ol","h5","_provideComponents","components","React","id","style","position","href","className","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","ArticlePage","data","children","serverData","prevPost","nextPost","frontmatters","mdx","frontmatter","timeToRead","fields","ArticlePageContext","ArticleLayout","ArticleFrontmatter","MarkdownWrapper","RecentPosts","prev","next","Utterances","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}