"use strict";(self.webpackChunkgatsby_theme_simplex=self.webpackChunkgatsby_theme_simplex||[]).push([[6262],{8908:function(e,n,t){t.r(n),t.d(n,{Head:function(){return d.py},default:function(){return E}});var l=t(1151),a=t(7294);function r(e){const n=Object.assign({h2:"h2",a:"a",div:"div",p:"p",code:"code",em:"em",h4:"h4",ul:"ul",li:"li",pre:"pre"},(0,l.ah)(),e.components);return a.createElement(a.Fragment,null,a.createElement(n.h2,{id:"문제",style:{position:"relative"}},a.createElement(n.a,{href:"#%EB%AC%B8%EC%A0%9C","aria-label":"문제 permalink",className:"header-links before"},a.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"문제"),"\n",a.createElement(n.p,null,"Jump Game을 위해 길이가 ",a.createElement(n.code,null,"n"),"인 정수 배열 ",a.createElement(n.code,null,"nums"),"가 주어진다. Jump Game은 인덱스 0에서부터 시작해 마지막 인덱스까지 도달하면 승리하는 게임이다."),"\n",a.createElement(n.p,null,a.createElement(n.code,null,"nums"),"의 각 ",a.createElement(n.code,null,"i"),"번째 원소 ",a.createElement(n.code,null,"nums[i]"),"는 해당 노드가 최대한 멀리 점프할 수 있는 거리를 나타낸다. 만약 ",a.createElement(n.code,null,"nums[i]"),"에 위치하고 ",a.createElement(n.code,null,"nums[i]"),"의 값이 ",a.createElement(n.code,null,"j"),"라면, 해당 노드에서는 ",a.createElement(n.code,null,"nums[i + j]")," 까지의 모든 노드로 점프할 수 있다."),"\n",a.createElement(n.p,null,"가장 적은 수로 Jump하여 마지막 인덱스에 도달해야한다. ",a.createElement(n.em,null,"모든 테스트 케이스는 ",a.createElement(n.code,null,"nums[n -1]"),"에 도달할 수 있도록 주어진다.")),"\n",a.createElement(n.h4,{id:"constraints",style:{position:"relative"}},a.createElement(n.a,{href:"#constraints","aria-label":"constraints permalink",className:"header-links before"},a.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Constraints"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,a.createElement(n.code,null,"1 <= nums.length <= 10^4")),"\n",a.createElement(n.li,null,a.createElement(n.code,null,"0 <= nums[i] <= 1000")),"\n",a.createElement(n.li,null,a.createElement(n.code,null,"It's guaranteed that you can reach nums[n - 1]")),"\n"),"\n",a.createElement(n.h2,{id:"approach---greedy",style:{position:"relative"}},a.createElement(n.a,{href:"#approach---greedy","aria-label":"approach   greedy permalink",className:"header-links before"},a.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Approach - Greedy"),"\n",a.createElement(n.p,null,"Jump Game 1번 문제와 비슷하게 접근했다."),"\n",a.createElement(n.p,null,"포인터를 0부터 옮겨가며 도달할 수 있는 노드들을 탐색하고, 탐색한 노드 중 가장 멀리 갈 수 있는 노드를 다음 노드로 삼는 방식."),"\n",a.createElement(n.h4,{id:"complexity",style:{position:"relative"}},a.createElement(n.a,{href:"#complexity","aria-label":"complexity permalink",className:"header-links before"},a.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Complexity"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"time complexity: ",a.createElement(n.code,null,"O(N)")),"\n",a.createElement(n.li,null,"space complexity: ",a.createElement(n.code,null,"O(1)")),"\n"),"\n",a.createElement(n.h4,{id:"code",style:{position:"relative"}},a.createElement(n.a,{href:"#code","aria-label":"code permalink",className:"header-links before"},a.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Code"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-python"},"class Solution:\n    def jump(self, nums: List[int]) -> int:\n        ptr, count = 0, 0\n        \n        while ptr < len(nums) - 1:\n            maxJump, next = 0, 0\n            # 마지막 인덱스로 바로 jump할 수 있다면 게임을 끝낸다.\n            if ptr + nums[ptr] >= len(nums) - 1:\n                return count + 1\n\n            for i in range(ptr + 1, ptr + nums[ptr] + 1):\n                if i + nums[i] >= maxJump: # jump할 수 있는 노드 중 가장 멀리 갈 수 있는 노드를 선택.\n                    maxJump = i + nums[i]\n                    next = i\n            ptr = next\n            count += 1\n\n        return count\n")))}var c=function(e={}){const{wrapper:n}=Object.assign({},(0,l.ah)(),e.components);return n?a.createElement(n,e,a.createElement(r,e)):r(e)},m=t(5670),i=t(1326),s=t(4517),u=t(698),o=t(8627),h=t(662),d=t(1873);const p=({data:e,children:n,serverData:t})=>{const{prevPost:l,nextPost:r}=e,c={...e.mdx.frontmatter,timeToRead:e.mdx.fields.timeToRead};return a.createElement(u.Z,{data:e},a.createElement(m.Z,null,a.createElement(s.Z,c),a.createElement(i.Z,null,n),a.createElement(h.Z,{prev:l,next:r}),a.createElement(o.Z)))};function E(e){return a.createElement(p,e,a.createElement(c,e))}}}]);
//# sourceMappingURL=component---src-templates-article-page-jsx-content-file-path-users-leobang-blog-starter-documents-algorithm-45-jump-game-ii-md-dba61224bd626335fde0.js.map