"use strict";(self.webpackChunkgatsby_theme_simplex=self.webpackChunkgatsby_theme_simplex||[]).push([[1449],{2378:function(e,t,n){n.r(t),n.d(t,{Head:function(){return h.py},default:function(){return p}});var l=n(1151),r=n(7294);function a(e){const t=Object.assign({h2:"h2",a:"a",div:"div",pre:"pre",code:"code",p:"p",h4:"h4",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",strong:"strong",blockquote:"blockquote",ul:"ul",li:"li"},(0,l.ah)(),e.components);return r.createElement(r.Fragment,null,r.createElement(t.h2,{id:"what",style:{position:"relative"}},r.createElement(t.a,{href:"#what","aria-label":"what permalink",className:"header-links before"},r.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"What"),"\n",r.createElement(t.pre,null,r.createElement(t.code,null,"java.lang.AssertionError: \nExpecting actual not to be null\n")),"\n",r.createElement("br"),"\n",r.createElement(t.h2,{id:"when",style:{position:"relative"}},r.createElement(t.a,{href:"#when","aria-label":"when permalink",className:"header-links before"},r.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"When"),"\n",r.createElement(t.pre,null,r.createElement(t.code,{className:"language-java"},'@Getter\n@NoArgsConstructor(access = AccessLevel.PROTECTED)\n@Entity\n@Table(name = "users")\npublic class User extends BaseEntity {\n   @Id\n   @GeneratedValue(strategy = GenerationType.AUTO)\n   @Column(name = "user_id")\n   private UUID id;\n')),"\n",r.createElement(t.p,null,"에 대해 잘 생성되는지 테스트 하고있었다."),"\n",r.createElement(t.p,null,"insert 쿼리도 날아가고, JPA persistence context에도 관리가 되는 상태였다. ",r.createElement(t.code,null,"user.getId()"),"를 호출하면 올바른 uuid가 나왔었다."),"\n",r.createElement(t.p,null,"하지만 해당 id로 ",r.createElement(t.code,null,"EntityManager.find")," 메서드를 호출하면 null 값이 반환된다…"),"\n",r.createElement("br"),"\n",r.createElement("br"),"\n",r.createElement(t.h2,{id:"why",style:{position:"relative"}},r.createElement(t.a,{href:"#why","aria-label":"why permalink",className:"header-links before"},r.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Why"),"\n",r.createElement(t.h4,{id:"postgres가-매핑을-못하나-postgres가-uuid를-매핑하는-방법을-알아보자",style:{position:"relative"}},r.createElement(t.a,{href:"#postgres%EA%B0%80-%EB%A7%A4%ED%95%91%EC%9D%84-%EB%AA%BB%ED%95%98%EB%82%98-postgres%EA%B0%80-uuid%EB%A5%BC-%EB%A7%A4%ED%95%91%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95%EC%9D%84-%EC%95%8C%EC%95%84%EB%B3%B4%EC%9E%90","aria-label":"postgres가 매핑을 못하나 postgres가 uuid를 매핑하는 방법을 알아보자 permalink",className:"header-links before"},r.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Postgres가 매핑을 못하나? Postgres가 uuid를 매핑하는 방법을 알아보자."),"\n",r.createElement(t.p,null,r.createElement(t.a,{href:"https://docs.jboss.org/hibernate/orm/5.4/userguide/html_single/Hibernate_User_Guide.html#basic-provided",target:"_self",rel:"nofollow"},"https://docs.jboss.org/hibernate/orm/5.4/userguide/html_single/Hibernate_User_Guide.html#basic-provided")),"\n",r.createElement(t.p,null,"Hibernate는 JDBC 명세에서 권장하는 natural 매핑을 준수하는 몇가지 built-in basic type을 제공한다. 내부적으로 Hibernate는 특정 ",r.createElement(t.code,null,"org.hibernate.type.Type"),"을 resolve하기 위해 basic type의 registry를 이용한다."),"\n",r.createElement(t.p,null,"Hibernate에서 제공하는 BasicType중 PostgreSQL의 UUID 타입은 다음과 같다."),"\n",r.createElement(t.table,null,r.createElement(t.thead,null,r.createElement(t.tr,null,r.createElement(t.th,null,"Hibernate Type  (org.hibernate.type package)"),r.createElement(t.th,null,"JDBC type"),r.createElement(t.th,null,"Java Type"),r.createElement(t.th,null,"BasicTypeRegistry Keys (s)"))),r.createElement(t.tbody,null,r.createElement(t.tr,null,r.createElement(t.td,null,"PostgresUUIDType"),r.createElement(t.td,null,"PostgreSQL UUID -> PosgreSQL JDBC 드라이버 definition으로 컴파일됨"),r.createElement(t.td,null,"java.util.UUID"),r.createElement(t.td,null,"pg-uuid")))),"\n",r.createElement(t.p,null,"그런데 type을 ",r.createElement(t.code,null,"PostgreSQLUUIDType"),"으로 주면 datasource와 dialect가 PostgreSQL로 설정되어 있는 main 앱은 ddl이 잘 실행이 되지만, postgresql을 호환하는 h2로 되어 있는 test path에서는 dialect 때문에 에러가 생긴다. 해당 타입은 H2에서 지원을 안하는 듯 …"),"\n",r.createElement("br"),"\n",r.createElement(t.p,null,r.createElement(t.a,{href:"https://docs.jboss.org/hibernate/orm/5.4/userguide/html_single/Hibernate_User_Guide.html#_uuid_as_binary",target:"_self",rel:"nofollow"},"https://docs.jboss.org/hibernate/orm/5.4/userguide/html_single/Hibernate_User_Guide.html#_uuid_as_binary")),"\n",r.createElement(t.p,null,"PostgreSQL Dialect를 사용하는 경우, PostgreSQL-specific UUID Hibernate type (",r.createElement(t.code,null,"PostgresUUIDType"),")타입이 디폴트로 UUID에 매핑된다.  ",r.createElement(t.strong,null,"PostgreSQL JDBC driver"),"가 ",r.createElement(t.code,null,"OTHER")," 코드를 선택해 UUID 타입을 매핑한다. 사실 애초에 ",r.createElement(t.code,null,"PostgresUUIDType"),"을 명시할 필요가 없었다! 알아서 JDBC 드라이버가 매핑해주니."),"\n",r.createElement(t.p,null,"실제로, PostgreSQL이 main의 ddl에서는 user_id 컬럼에 대해서 자료형을 알아서 uuid로 매핑하게 된다."),"\n",r.createElement(t.pre,null,r.createElement(t.code,null,"Hibernate: \n    create table word (\n       word_id bigint not null,\n        created_at timestamp,\n        updated_at timestamp,\n        word varchar(255),\n        user_id uuid,\n        primary key (word_id)\n    )\n")),"\n",r.createElement(t.p,null,"그런데, test path에서는 UUID를 binary(255)로 매핑한다."),"\n",r.createElement(t.pre,null,r.createElement(t.code,null,"Hibernate: \n    create table word (\n       word_id bigint not null,\n        created_at timestamp,\n        updated_at timestamp,\n        word varchar(255),\n        user_id varchar(255),\n        primary key (word_id)\n    )\n")),"\n",r.createElement("br"),"\n",r.createElement(t.h4,{id:"postgresql-jdbc-드라이버가-매핑을-해주니-테스트-path에-driver-설정을-해줘야-하나",style:{position:"relative"}},r.createElement(t.a,{href:"#postgresql-jdbc-%EB%93%9C%EB%9D%BC%EC%9D%B4%EB%B2%84%EA%B0%80-%EB%A7%A4%ED%95%91%EC%9D%84-%ED%95%B4%EC%A3%BC%EB%8B%88-%ED%85%8C%EC%8A%A4%ED%8A%B8-path%EC%97%90-driver-%EC%84%A4%EC%A0%95%EC%9D%84-%ED%95%B4%EC%A4%98%EC%95%BC-%ED%95%98%EB%82%98","aria-label":"postgresql jdbc 드라이버가 매핑을 해주니 테스트 path에 driver 설정을 해줘야 하나 permalink",className:"header-links before"},r.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"PostgreSQL JDBC 드라이버가 매핑을 해주니 테스트 path에 driver 설정을 해줘야 하나?"),"\n",r.createElement(t.p,null,"test의 application.yml에 ",r.createElement(t.code,null,"spring.datasource.driver-class-name"),"을 org.postgresql.Driver으로 설정해주었다."),"\n",r.createElement(t.p,null,"안된다. 똑같이 binary(255)로 매핑한다."),"\n",r.createElement(t.p,null,"근데 생각해보니 h2에서 PostgresUUIDType을 지원안하니 당연한 걸지도…"),"\n",r.createElement("br"),"\n",r.createElement(t.h4,{id:"h2-데이터베이스의-타입을-uuid를-저장할-수-있는-타입으로-지정하자",style:{position:"relative"}},r.createElement(t.a,{href:"#h2-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4%EC%9D%98-%ED%83%80%EC%9E%85%EC%9D%84-uuid%EB%A5%BC-%EC%A0%80%EC%9E%A5%ED%95%A0-%EC%88%98-%EC%9E%88%EB%8A%94-%ED%83%80%EC%9E%85%EC%9C%BC%EB%A1%9C-%EC%A7%80%EC%A0%95%ED%95%98%EC%9E%90","aria-label":"h2 데이터베이스의 타입을 uuid를 저장할 수 있는 타입으로 지정하자 permalink",className:"header-links before"},r.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"H2 데이터베이스의 타입을 uuid를 저장할 수 있는 타입으로 지정하자."),"\n",r.createElement(t.p,null,"사실 테스트에만 필요한 코드를 prod에 반영하고 싶지는 않았지만, 레퍼런스도 너무 부족했기에 이 방법도 찾아봤다."),"\n",r.createElement(t.p,null,r.createElement(t.a,{href:"https://www.h2database.com/html/datatypes.html#uuid_type",target:"_self",rel:"nofollow"},"https://www.h2database.com/html/datatypes.html#uuid_type")),"\n",r.createElement(t.p,null,"uuid로 저장된 값은 ",r.createElement(t.code,null,"java.util.UUID"),"를 반환한다는데, 어떻게 DDL을 uuid 타입으로 지정하는지는 안나와 있다.."),"\n",r.createElement(t.p,null,"그래서 JPA의 column 매핑을 설정할 수 있는 ",r.createElement(t.code,null,"@Column")," 의 속성을 이용하기로 해보았다. ",r.createElement(t.code,null,"columnDefinition"),"을 이용하면 DDL 시 생성할 column의 정보를 직접 설정할 수 있다."),"\n",r.createElement(t.p,null,"위 H2 문서를 보면 UUID 타입의 이름은 UUID이다. h2는 기본적으로 case-sensitive하지 않기 때문에 uuid로 주어보기로 한다."),"\n",r.createElement("br"),"\n",r.createElement("br"),"\n",r.createElement(t.h2,{id:"how",style:{position:"relative"}},r.createElement(t.a,{href:"#how","aria-label":"how permalink",className:"header-links before"},r.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"How"),"\n",r.createElement(t.h4,{id:"columndefition으로-uuid임을-명시",style:{position:"relative"}},r.createElement(t.a,{href:"#columndefition%EC%9C%BC%EB%A1%9C-uuid%EC%9E%84%EC%9D%84-%EB%AA%85%EC%8B%9C","aria-label":"columndefition으로 uuid임을 명시 permalink",className:"header-links before"},r.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"columnDefition으로 uuid임을 명시"),"\n",r.createElement(t.p,null,"다음과 같이 ",r.createElement(t.code,null,"@Column")," 어노테이션의 ",r.createElement(t.code,null,"columnDefinition")," 속성을 ‘uuid’로 주었다. (h2는 기본적으로 case-sensitive하지 않으므로)"),"\n",r.createElement(t.pre,null,r.createElement(t.code,{className:"language-java"},'@Id\n@GeneratedValue(strategy = GenerationType.AUTO)\n@Column(name = "user_id", columnDefinition = "uuid")\nprivate UUID id;\n')),"\n",r.createElement(t.p,null,"test path에서는 DDL이 잘 생성된다! H2도 이제 uuid 타입으로 생성하란 말을 드디어 알아먹은 것 같다."),"\n",r.createElement(t.pre,null,r.createElement(t.code,null,"Hibernate: \n    create table word (\n       word_id bigint not null,\n        created_at timestamp,\n        updated_at timestamp,\n        word varchar(255),\n        user_id uuid,\n        primary key (word_id)\n    )\n")),"\n",r.createElement(t.p,null,r.createElement(t.code,null,"EntityManager.find()")," 메서드 역시 정상적으로 수행된다."),"\n",r.createElement("br"),"\n",r.createElement(t.p,null,"근데 이럼 main의 PostgreSQL은 어떡하지? 다행히 PostgreSQL 역시 UUID 타입을 ",r.createElement(t.code,null,"uuid"),"라는 이름의 데이터 타입으로 지원한다."),"\n",r.createElement(t.p,null,r.createElement(t.a,{href:"https://www.postgresql.org/docs/current/datatype-uuid.html",target:"_self",rel:"nofollow"},"https://www.postgresql.org/docs/current/datatype-uuid.html")),"\n",r.createElement(t.blockquote,null,"\n",r.createElement(t.p,null,"PortgreSQL은 UUID (RFC 4122) 타입과 그와 관련된 표준을 저장하는 데이터 타입인 ",r.createElement(t.code,null,"uuid"),"를 제공한다. 해당 identifier는 128-bit의 용량을 요구한다. 총 32개의 digit이 128-bit을 구성한다. (8 - 4 - 4 - 4 - 12)"),"\n",r.createElement(t.pre,null,r.createElement(t.code,null,"a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11  \n")),"\n"),"\n",r.createElement("br"),"\n",r.createElement(t.p,null,"Test 만을 위한 코드가 prod에 반영되는 격이라 굉장히 찜찜하지만 지금 진행상황이 밀려있어 이 문제는 이쯤하고 해결로 하기로 했다… 다음에 다시 찾아봐야지."),"\n",r.createElement("br"),"\n",r.createElement("br"),"\n",r.createElement(t.h2,{id:"reference",style:{position:"relative"}},r.createElement(t.a,{href:"#reference","aria-label":"reference permalink",className:"header-links before"},r.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Reference"),"\n",r.createElement(t.ul,null,"\n",r.createElement(t.li,null,r.createElement(t.a,{href:"https://docs.jboss.org/hibernate/orm/5.4/userguide/html_single/Hibernate_User_Guide.html#_uuid_as_binary",target:"_self",rel:"nofollow"},"https://docs.jboss.org/hibernate/orm/5.4/userguide/html_single/Hibernate_User_Guide.html#_uuid_as_binary")),"\n",r.createElement(t.li,null,r.createElement(t.a,{href:"https://www.postgresql.org/docs/current/datatype-uuid.html",target:"_self",rel:"nofollow"},"https://www.postgresql.org/docs/current/datatype-uuid.html")),"\n",r.createElement(t.li,null,r.createElement(t.a,{href:"https://helloworld.kurly.com/blog/jpa-uuid-sapjil/#%EB%AC%B8%EC%A0%9C%EB%A5%BC-%EC%9D%BC%EB%8B%A8-%ED%95%B4%EA%B2%B0%ED%95%9C-%EB%B0%A9%EB%B2%95-binary16",target:"_self",rel:"nofollow"},"https://helloworld.kurly.com/blog/jpa-uuid-sapjil/#문제를-일단-해결한-방법-binary16")),"\n"))}var i=function(e={}){const{wrapper:t}=Object.assign({},(0,l.ah)(),e.components);return t?r.createElement(t,e,r.createElement(a,e)):a(e)},c=n(5670),s=n(1326),o=n(4517),d=n(698),u=n(8627),m=n(662),h=n(1873);const E=({data:e,children:t,serverData:n})=>{const{prevPost:l,nextPost:a}=e,i={...e.mdx.frontmatter,timeToRead:e.mdx.fields.timeToRead};return r.createElement(d.Z,{data:e},r.createElement(c.Z,null,r.createElement(o.Z,i),r.createElement(s.Z,null,t),r.createElement(m.Z,{prev:l,next:a}),r.createElement(u.Z)))};function p(e){return r.createElement(E,e,r.createElement(i,e))}}}]);
//# sourceMappingURL=component---src-templates-article-page-jsx-content-file-path-home-runner-work-leobang-17-github-io-leobang-17-github-io-documents-spring-uuid-type에러-md-ca968946b57e26fe3b96.js.map