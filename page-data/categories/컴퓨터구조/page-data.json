{"componentChunkName":"component---src-templates-category-page-tsx","path":"/categories/컴퓨터구조/","result":{"data":{"allMdx":{"nodes":[{"id":"595f4049-81c6-5558-b460-413e7cd16333","fields":{"slug":"/kubernetes-application과-network-연결하기","categoryDirectory":"/Docker/"},"frontmatter":{"title":"Kubernetes - Application과 Network 연결하기","createdAt":"May 30, 2024"},"excerpt":"Pod 내부의 컨테이너끼리 통신: Loopback IP를 이용한다. Pod는 다수의 container를 가질 수 있다. 다만 하나의 Pod에 container를 여러 개 포함하는 것은 특별한 목적이 없다면 추천하는 구성은 아니다. 동일한 Pod에 포함된…"},{"id":"b472459f-6f6e-500d-8227-6ee6325f80bd","fields":{"slug":"/docker는-linux-커널에-의존한다","categoryDirectory":"/Docker/"},"frontmatter":{"title":"Docker는 Linux 커널에 의존한다","createdAt":"May 27, 2024"},"excerpt":"macOS 환경에서 종종 docker desktop 애플리케이션을 실행하지 않은 상태에서 docker command를 날리면 “docker daemon에 연결할 수 없다”는 에러를 받곤한다. docker를 설치했는데, 그냥은 사용할 수 없고 docker…"},{"id":"84a7ceb3-61f8-5feb-b671-b6c787d8bf57","fields":{"slug":"/ecr-ecs-code_pipeline-트러블-슈팅","categoryDirectory":"/AWS/"},"frontmatter":{"title":"ECR - ECS - CodePipeline 트러블 슈팅","createdAt":"April 24, 2024"},"excerpt":"slack bot을 원래는 그냥 bare한 EC2 instance에 배포할 생각이었다. 빠르게 echo bot을 위한 환경을 구성하고, 업데이트하는 automation을 정의하는게 목적이었으니까. 원래 생각해뒀던 pipeline은 git repo에 push\n\ngi…"},{"id":"098fd88f-7e01-5dc3-bda0-1f7560cf0507","fields":{"slug":"/cloudformation으로-cross-stack-reference-달성하기","categoryDirectory":"/AWS/"},"frontmatter":{"title":"Cloudformation으로 Cross Stack Reference 달성하기","createdAt":"April 22, 2024"},"excerpt":"친구들과 간단한 slack bot을 만들기로 했다. 아이디어는 딱 정해지진 않았는데 그냥 가벼운 존댓말 탐지기 같은걸 만들기로 했다. 개발에 들어가기 전에 일단은 로컬에서 간단한 echo server만 만들어서 slack api를 맛보기 하려고 bolt-js get…"},{"id":"b6142e25-3df2-506b-9d99-e1f4838f3607","fields":{"slug":"/go-iteration-시-주의해야할-점들","categoryDirectory":"/GoLang/"},"frontmatter":{"title":"Go - Iteration 시 주의해야할 점들","createdAt":"April 20, 2024"},"excerpt":"Golang의 looping은 다른 언어와 생김새는 비슷하지만 큰 차이가 있다. 가령 Golang에는 do나 while이 없고 general하게 looping을 for를 이용해서만 처리한다. Golang의 iteration과, 특히 range에 집중해서 araboza.…"},{"id":"5c400f02-6edd-56c2-aa52-a581a14c5b98","fields":{"slug":"/go-project를-구성하는-방법","categoryDirectory":"/GoLang/"},"frontmatter":{"title":"Go - Project를 구성하는 방법","createdAt":"April 19, 2024"},"excerpt":"Golang project에 Must는 없다. 하지만… Golang은 package와 module design에 상당한 자유를 부여하기 때문에 한 가지 best practice를 정의내리기 어렵다. 꼭 따를 필요는 없지만, project-layout 방식을 참고해보자.…"},{"id":"b2238347-7cd9-55ba-965b-eb6922f0f6c0","fields":{"slug":"/go-slice를-깊이-이해해보자","categoryDirectory":"/GoLang/"},"frontmatter":{"title":"Go - Slice를 깊이 이해해보자","createdAt":"April 19, 2024"},"excerpt":"Golang의 dynamic array를 구현한 slice는 다른 프로그래밍 언어와 비교했을 때 미묘하게 주의해아할 점들이 있다. slice 초기화, append를 이용한 element 추가, slice 복제, slicing 등을 올바르게 처리하려면 slice의 len…"},{"id":"2737791e-eca9-53c5-92a4-7aec8ecdfa2f","fields":{"slug":"/go-interface-pollution","categoryDirectory":"/GoLang/"},"frontmatter":{"title":"Go - Interface Pollution","createdAt":"April 17, 2024"},"excerpt":"interface pollution은 불필요한 abstraction으로 코드가 복잡해져서 이해하기 힘들어지는 현상을 말한다. 특히 Go 언어의 컨셉과는 거리가 먼 언어를 사용하던 개발자가 이런 실수를 저지르기 쉽다. Interface (혹은 abstraction)은…"},{"id":"1c8c6c16-c26a-5151-ab89-274bfc894475","fields":{"slug":"/javascript의-data-type-그리고-wrapper-class","categoryDirectory":"/NodeJS/"},"frontmatter":{"title":"Javascript의 Data Type, 그리고 Wrapper Class","createdAt":"April 15, 2024"},"excerpt":"Node가 아니라 Javascript에 대한 내용이지만 어쨌든… Javascript에는 다양한 data type이 있는데, 이를 크게 Primitive Type과 Reference Type으로 구분 지을 수 있다.\n\nPrimitive Type (= Immutable)…"},{"id":"5d803583-003e-5b8b-aed3-1479930861b2","fields":{"slug":"/javascript의-배열에-대해서","categoryDirectory":"/NodeJS/"},"frontmatter":{"title":"Javascript의 배열에 대해서","createdAt":"April 15, 2024"},"excerpt":"Javascript의 배열은 Object다 Javascript에는 엄밀한 수준의 ‘static array’를 지원하지 않는다. Array라는 배열을 흉내낸 type을 지원하지만 사실 이마저도 내부적으로 보면 배열이 아닌 객체에 가깝다. ArrayList도 아니고…"},{"id":"93f49694-0bcb-5c72-9234-07bfb660dac4","fields":{"slug":"/file과-file-system-그리고-app-process-입장에서의-file","categoryDirectory":"/컴퓨터구조/"},"frontmatter":{"title":"File과 File System, 그리고 App Process 입장에서의 File","createdAt":"April 13, 2024"},"excerpt":"File이란 데이터의 저장 및 관리를 위해 디지털 형식으로 조직된 data의 단위이다. text, image, video, SW program 등 다양한 형태의 data를 포함할 수 있다. 각 File은 고유한 이름과 file extension을 가지며, 이…"},{"id":"c446c484-18c8-5020-94bc-745a3b0f7537","fields":{"slug":"/go-init-fucntion","categoryDirectory":"/GoLang/"},"frontmatter":{"title":"Go - init fucntion","createdAt":"April 11, 2024"},"excerpt":"Go언어에서 init 함수는 특별한 용도를 가진 함수이다. 이름 그대로 package에 대한 초기화 작업을 수행할 때 주로 이용된다. init 함수의 특징은 다음과 같다. init 함수는 package에 대한 initializer로, 모든 일반 함수에 앞서…"},{"id":"b48dfec1-b11a-5d34-a0ec-5c6608cab4f7","fields":{"slug":"/go의-memory-allocation-escape-analysis","categoryDirectory":"/GoLang/"},"frontmatter":{"title":"Go의 Memory Allocation: Escape Analysis","createdAt":"April 05, 2024"},"excerpt":"Go의 변수는 Go 프로세스의 어느 memory section에 저장될 것인가? programming context에서의 memory allocation에 대해서 먼저 알아보자. Stack과 Heap\n\n운영체제 시간에 배웠던 그림이 또 나올 시간이다. stack은…"},{"id":"26577c32-a8dd-5ec1-a5b1-21f0e277d3a7","fields":{"slug":"/go-concurrency-mutex와-semaphore","categoryDirectory":"/GoLang/"},"frontmatter":{"title":"Go - Concurrency: Mutex와 Semaphore","createdAt":"April 03, 2024"},"excerpt":"여러 goroutine을 통해 공유 자원에 접근하는 경우 동시성 프로그래밍의 고전적인 문제상황인 race condition이 발생할 수 있다. Go 역시 critical section을 정의하고 해당 section의 상호배제를 제공하는 동기화 솔루션을 built…"},{"id":"19869e74-1d84-51b9-bc0a-746fbf9853d1","fields":{"slug":"/go-concurrency-goroutine과-channel","categoryDirectory":"/GoLang/"},"frontmatter":{"title":"Go - Concurrency: Goroutine과 Channel","createdAt":"April 02, 2024"},"excerpt":"Go는 동시성 프로그래밍을 아주 쉽게 달성할 수 있도록 설계되었다. 단순히 함수 앞에 go 키워드를 붙여주는 것만으로 해당 task를 분리된 lightweight thread에서 실행시킬 수 있다. go doSomethingConcurrently()\n\n\ngo 키워드는…"},{"id":"ff9b154d-29ee-542e-b885-238d7c9dc1cc","fields":{"slug":"/go-pointer","categoryDirectory":"/GoLang/"},"frontmatter":{"title":"Go - Pointer","createdAt":"March 31, 2024"},"excerpt":"C언어를 처음 배운 이후로 pointer는 정말 오랜만에 다뤄본다. variable은 값이 저장된 RAM 메모리를 나타내는 *‘named location’*이다. 그리고 variable의 일반적인 primitive type들은 RAM 메모리 위치에 저장된 “값”을…"},{"id":"93dce3dd-889d-5c34-937a-5175035c54e4","fields":{"slug":"/go-advanced-functions","categoryDirectory":"/GoLang/"},"frontmatter":{"title":"Go - Advanced Functions","createdAt":"March 30, 2024"},"excerpt":"First-Class Function first-class function은 함수를 first-class citizen으로 취급하는 개념이다.\n\nfirst-class citizen(일급 객체)란 해당 언어의 기능 중에서 모든 연산에 사용될 수 있고, 다른 객체와 동일하게…"},{"id":"ba536450-4305-5484-878f-0114e92af0eb","fields":{"slug":"/go-defer-statement","categoryDirectory":"/GoLang/"},"frontmatter":{"title":"Go - Defer statement","createdAt":"March 30, 2024"},"excerpt":"defer keyword는 다른 일반적인 programming language에는 등장하지 않는 Go의 특별한 기능이다. 함수가 반환하기 직전에 특정한 코드를 실행하도록 예약하는 기능이다. 말그대로, 해당 함수 내의 defer된 동작을 정의한다. 주로 clean-up…"},{"id":"baaeee42-4785-5ef4-be86-8004c3a03780","fields":{"slug":"/go-map","categoryDirectory":"/GoLang/"},"frontmatter":{"title":"Go - Map","createdAt":"March 29, 2024"},"excerpt":"Go에서 map은 다른 언어의 Hash Map과 같이 key-value 쌍으로 데이터를 저장하는 자료구조이다. map은 일반적으로 O(1)의 조회, 쓰기 연산을 지원한다. 다음과 같이 map을 이용할 수 있다:\n\n// map declaration & initialize…"},{"id":"6872a854-d3ca-50dc-abb7-cf42fade9239","fields":{"slug":"/go-array-and-slices","categoryDirectory":"/GoLang/"},"frontmatter":{"title":"Go - Array and Slices","createdAt":"March 29, 2024"},"excerpt":"Go의 Array는 동일한 자료형을 저장하는 순서를 가진 (sequence) 크기가 ’고정‘된, 정말 기본적인 배열을 말한다. 즉, 이다. Array는 물리적으로 연속적인 공간에 저장되므로, 각 element를 iterate할 때 cache…"},{"id":"1a11388a-2a58-5dee-9054-a43875ffa5be","fields":{"slug":"/http-cache-contol","categoryDirectory":"/Web/"},"frontmatter":{"title":"HTTP - Cache Contol","createdAt":"February 27, 2024"},"excerpt":"HTTP의 cache manipulation을 위한 header들을 확인하며 cache contol strategy에 대해서 알아보자. Cache-Control 헤더를 이용해 브라우저에 응답을 캐싱하자\n\ncache-control 헤더는 웹 서버 측에서…"},{"id":"e8411a95-a2e5-5b74-86e2-558361bee8bf","fields":{"slug":"/http-referer-이-웹페이지는-어디에서-왔을까","categoryDirectory":"/Web/"},"frontmatter":{"title":"HTTP Referer - 이 웹페이지는 어디에서 왔을까?","createdAt":"February 19, 2024"},"excerpt":"웹 호스팅을 관리해주는 서비스에는 종종 트래픽 분석 기능이 뒤따라오는데, 이 때 어느 source를 통해서 내 웹페이지에 도달했는지에 대한 통계도 알려주곤 한다. 물론 Origin만으로도 어느 도메인을 통해 내 웹페이지를 요청했는지 러프하게 확인할 수 있지만, 보다…"},{"id":"862f2c96-d1cc-5cde-9ca9-c7b2f609dd3f","fields":{"slug":"/http를-stateful하게-cookie","categoryDirectory":"/Web/"},"frontmatter":{"title":"HTTP를 stateful하게 - cookie","createdAt":"February 13, 2024"},"excerpt":"HTTP는 본래 Stateless한 Protocol으로 설계되었으므로 각 request/response는 state의 측면에서 상호 독립적이다. 즉, 이전의 history를 공유하지 않기 때문에 연계되는 작업을 원한다면 그만큼의 증분된 정보를 매번 누적해서 HTTP에…"},{"id":"d877b5c2-3100-5778-ae61-fbfb183002ec","fields":{"slug":"/web-security-attacks","categoryDirectory":"/Web/"},"frontmatter":{"title":"Web Security Attacks","createdAt":"January 29, 2024"},"excerpt":"일반적인 Web 공격에 대해서 알아보자. 세션 하이재킹\n\n쿠키를 가로채는 것은 인증된 세션 하이재킹으로 이어질 수 있다. 쿠키를 탈취하는 일반적인 방법은 XSS (크로스 사이트 스크립팅) 취약점을 이용하는 것을 포함한다.\n\n이 때 서버에서 쿠키를 Set-Cookie할…"},{"id":"6568d635-dc21-5e97-923d-5735178359ee","fields":{"slug":"/virtual-memory-management","categoryDirectory":"/운영체제/"},"frontmatter":{"title":"Virtual Memory Management","createdAt":"January 11, 2024"},"excerpt":"가상 메모리 공간을 어떻게 물리 메모리에 적재할 것인가에 대해 다룬다. Contiguous Memory Allocation (연속 메모리 할당)\n\n메인 메모리는 큰 관점에서 볼 때 두 부분으로 나뉘어져 있다.\n\nOS가 점유하고 있는 공간 유저 프로세스가 점유하고 있는…"},{"id":"3ef9cd5e-02dc-5629-b784-c353c98c5fbc","fields":{"slug":"/virtual-memory-가상-메모리","categoryDirectory":"/운영체제/"},"frontmatter":{"title":"Virtual Memory 가상 메모리","createdAt":"January 10, 2024"},"excerpt":"physical 메모리와 virtual 메모리 physical 메모리는 컴퓨터의 구성요소인 메인 메모리의 를 말한다. 메인 메모리 내 random access가 가능한 개별 셀들을 식별하기 위한 address이다.\n\n반면 가상 메모리는 실제 HW상의 주소가…"},{"id":"b4d57847-5304-5678-a0a7-213353c63727","fields":{"slug":"/컴퓨터가-문자를-표현하는-방법-base64-encoding","categoryDirectory":"/컴퓨터구조/"},"frontmatter":{"title":"컴퓨터가 문자를 표현하는 방법 - Base64 Encoding","createdAt":"January 05, 2024"},"excerpt":"binary 데이터를 텍스트 형식(ASCII)으로 변환하는 인코딩 방법 중 하나이다. 간단하게 설명하자면, binary 데이터를 6bit 씩 끊어서 Base64 인코딩 테이블에 맞게 문자열로 매핑하는 방식. 2^6^ = 64가지의 경우의 수를 표현할 수 있는…"},{"id":"d6616e71-f72c-5856-8ad4-54d7c165bb90","fields":{"slug":"/컴퓨터가-문자를-표현하는-방법-ascii-unicode","categoryDirectory":"/컴퓨터구조/"},"frontmatter":{"title":"컴퓨터가 문자를 표현하는 방법 - ASCII, Unicode","createdAt":"January 04, 2024"},"excerpt":"컴퓨터는 문자를 binary로 어떻게 표현할까? ASCII Code\n초기의 ASCII Code - 7bit\n\n7bit의 코드로 할 수 있다. 이를 통해 대문자와 소문자 알파벳, 0-9까지의 숫자와 구두점 같은 값들도 7bit…"},{"id":"82d086bc-a0d6-5ff8-b797-71716e89b06b","fields":{"slug":"/컴퓨터가-실수를-표현하는-방법","categoryDirectory":"/컴퓨터구조/"},"frontmatter":{"title":"컴퓨터가 실수를 표현하는 방법","createdAt":"December 29, 2023"},"excerpt":"컴퓨터는 실수를 어떻게 표현할까? 실수 표현하기 - 고정 소수점\n\n고정소수점 방식은 실수를 정수형 data에 소수점의 위치를 고정시켜서 표현하는 방식이다. 소수점의 위치는 사전에 정의되고 변경되지 않는다.\n\n소수를 32bit로 표현한다고 가정했을 때, 고정소수점은…"},{"id":"f4017a3e-c160-58a4-a6fe-97bc1dfb53f3","fields":{"slug":"/비선형-자료구조-hash-table-set","categoryDirectory":"/자료구조/"},"frontmatter":{"title":"비선형 자료구조 - Hash Table, Set","createdAt":"December 28, 2023"},"excerpt":"key-value pair를 저장하는 ADT. key-value pair로 자료를 저장하면서 삽입, 삭제, 탐색 연산이 평균적으로 상수 시간복잡도를 갖는 자료구조를 말한다.\n\nMap을 구현한 것으로는 Hash Table과 Tree-based가 있다.\n\nOpera…"},{"id":"9ee2878b-5b21-5402-b7e3-a03f674234de","fields":{"slug":"/선형-자료구조","categoryDirectory":"/자료구조/"},"frontmatter":{"title":"선형 자료구조","createdAt":"December 26, 2023"},"excerpt":"에 대해서 에 저장하는 가장 기본적인 선형 자료구조이다. index로 random access (O(1))가 가능하다.\n\n논리적 저장 순서와 물리적 저장 순서가 일치한다. (바로 옆에 저장됨)\n\n배열은"},{"id":"40cdc539-13d7-5836-bb60-8ccb0cd8434e","fields":{"slug":"/정렬-알고리즘","categoryDirectory":"/Algorithm/"},"frontmatter":{"title":"정렬 알고리즘","createdAt":"December 24, 2023"},"excerpt":"정렬이 중요한 이유 데이터 정렬이 중요한 이유는 탐색을 위해서이다. 컴퓨터의 경우 수백만 건의 데이터는 우습게 다루는데 탐색할 대상 데이터가 정렬되어있지 않다면 O(N)의 linear search로 탐색을 수행해야한다.\n\n하지만"},{"id":"d213c437-cc5c-5d4c-b728-05f8071f7ae0","fields":{"slug":"/mac_os-host가-linux-conatiner를-실행하는-방법","categoryDirectory":"/Docker/"},"frontmatter":{"title":"macOS Host가 Linux Conatiner를 실행하는 방법","createdAt":"December 13, 2023"},"excerpt":"Container는 Host의 운영체제를 공유한다. 그렇다면 어떻게 macOS Host에서 linuxOS Container를 띄울 수 있는걸까? Docker를 비롯한 container runtime을 공부하다보니 궁금한 점이 생겼다. 컨테이너 환경은 Host 머신의…"},{"id":"f7b43e60-5e70-53c6-a138-98cac20bf434","fields":{"slug":"/database-lock으로-concurrency-control","categoryDirectory":"/데이터베이스/"},"frontmatter":{"title":"Database - Lock으로 Concurrency Control","createdAt":"November 07, 2023"},"excerpt":"write operation은 단순히 값을 바꾸는 일보다 복잡한 작업이 될 수 있다. 만약 해당 table에 index가 걸려있는 경우에는 index에 대한 처리를 해주어야 할 수도 있다. write operation을 하고 있는 도중 같은 데이터에 또 다른 read…"},{"id":"ce5f55a1-d9f3-53cf-862c-826b76ccdee1","fields":{"slug":"/database-connection-pool","categoryDirectory":"/데이터베이스/"},"frontmatter":{"title":"Database Connection Pool","createdAt":"November 07, 2023"},"excerpt":"데이터베이스 서버와의 통신은 대부분 TCP 기반으로 동작한다. TCP는 연결지향적으로 동작하기 때문에 데이터를 주고 받기 전 connection을 생성하고, connection을 닫는다.\n\n이 connection을 맺거나 푸는데 은근히 시간이 많이 잡아먹힌다. 3way…"},{"id":"0ab1c6bb-75f0-5ed6-b9f8-72d3f7cf7061","fields":{"slug":"/database-schedule과-serializability-recoverability","categoryDirectory":"/데이터베이스/"},"frontmatter":{"title":"Database - Schedule과 Serializability, Recoverability","createdAt":"November 06, 2023"},"excerpt":"Transaction의 ACID 속성에서 Isolation의 그림을 다시보자. 위와 같이 2개 이상의 transaction이 동시에 발생할 때, 져 update하는 opreation이 Commit 시점에 무시되는 현상을 Lost…"},{"id":"cccf063e-92cd-5705-a51e-981f8bf7f0ee","fields":{"slug":"/database-transaction-isolation","categoryDirectory":"/데이터베이스/"},"frontmatter":{"title":"Database - Transaction Isolation","createdAt":"November 05, 2023"},"excerpt":"ACID 중 Isolation 속성은 해야한다는 속성이다. 하지만 Isolation을 엄격하게 지키면 지킬수록 DBMS의 퍼포먼스는 떨어질 수 밖에 없으므로 대부분의 DBMS는 개발자에게…"},{"id":"26065bfb-e276-52fb-aa01-6f8e414b018f","fields":{"slug":"/database-트랜잭션","categoryDirectory":"/데이터베이스/"},"frontmatter":{"title":"Database - 트랜잭션","createdAt":"November 01, 2023"},"excerpt":"user A가 user B에게 20만원을 이체하려고 한다. 데이터베이스에 해당 행위를 영구적으로 기록하려면 어떤 SQL문이 필요할까? 먼저, user A의 계좌 잔고에서 20만원을 제해야한다.\n\nUPDATE account SET balance = balance…"},{"id":"04442097-192f-556b-8b92-9debcaef1777","fields":{"slug":"/동기-비동기와-blocking-non-blocking-io","categoryDirectory":"/운영체제/"},"frontmatter":{"title":"동기/비동기와 Blocking/Non-blocking IO","createdAt":"October 30, 2023"},"excerpt":"Blocking I/O와 Non-blocking I/O에 대해 알아보기 전에 I/O가 무엇인지, 그 종류는 무엇이 있는지 알아보자. I/O란, Input/Output의 약자로, 데이터의 입출력을 의미한다. I/O의 종류는 다음과 같다:\n\n네트워크 I/O…"},{"id":"31fb2fd4-300f-5bec-ad16-15d3ac8a207a","fields":{"slug":"/interrupt와-system-call","categoryDirectory":"/운영체제/"},"frontmatter":{"title":"Interrupt와 System Call","createdAt":"October 26, 2023"},"excerpt":"Interrupt와 System Call은 유저모드에서 커널모드로 전환되는 (= 통제권이 넘어가는) trigger이다. Interrupt와 System Call이 발생하면 즉각적으로 커널모드로 통제권이 넘어가게 된다. 유저모드는 뭐고 커널모드는 무엇인가요?\n\n유저모드…"},{"id":"0808427f-ba2c-5693-8092-70b16e0eed2d","fields":{"slug":"/synchronization과-deadlock","categoryDirectory":"/운영체제/"},"frontmatter":{"title":"Synchronization과 Deadlock","createdAt":"October 24, 2023"},"excerpt":"동기화 Synchronization 상한 귤을 골라내보자! thread 2개를 이용해서.\n\nfor (귤 in 귤박스) {\n  if (귤.상태 is 불량) {\n    badCounter.increment();\n  }\n}\n\npublic class Counter…"},{"id":"133581f3-a824-53fc-8a18-d9db76b637a9","fields":{"slug":"/테이블을-나누는-방법-파티셔닝과-샤딩","categoryDirectory":"/데이터베이스/"},"frontmatter":{"title":"테이블을 나누는 방법: 파티셔닝과 샤딩","createdAt":"October 21, 2023"},"excerpt":"Partitioning이란 database table을 더 작은 크기의 테이블로 나누는 것을 말한다.\n\nVertical Partitioning이란?\n\n 방식이다. 따라서 테이블의 스키마가 바뀌며, 새로운 테이블이 한 개 이상 생기게…"},{"id":"abf7007b-6078-50af-b259-4814f18670d6","fields":{"slug":"/cpu-bound-프로그램과-i-o-bound-프로그램","categoryDirectory":"/운영체제/"},"frontmatter":{"title":"CPU bound 프로그램과 I/O bound 프로그램","createdAt":"October 20, 2023"},"excerpt":"CPU란 메모리에 올라가 있는 프로세스의 명령어를 해석하고 실행하는 장치이다. 먼저 CPU burst와 I/O burst의 의미에 대해 알아보자. CPU 버스트 (burst)\n\n메모리에 올라가 있는 프로세스가 “CPU에서 연속적으로 실행되는 시간”을 말한다. 만약…"},{"id":"e9017439-88ed-5dbc-87a8-699bb70e5e83","fields":{"slug":"/database-index","categoryDirectory":"/데이터베이스/"},"frontmatter":{"title":"Database - Index","createdAt":"October 19, 2023"},"excerpt":"인덱스란 DB의 테이블에 대한 검색 속도를 향상시켜주는 자료구조이다. 예를들어, SELECT * FROM customer WHERE first_name = 'Minsoo'; 라는 쿼리가 있다고 해보자. 단순 비교를 통해 색인하는 것이므로 first_name column…"},{"id":"20d15bcd-bead-5f0c-9b5d-d6b4872c55fb","fields":{"slug":"/[leet_code]-39-combination-sum-medium","categoryDirectory":"/Algorithm/"},"frontmatter":{"title":"[LeetCode] 39. Combination Sum (Medium)","createdAt":"October 07, 2023"},"excerpt":"문제 [LeetCode] 39. Combination Sum\n\n서로 다른 정수로 이루어진 배열 candidates와 정수 target이 주어진다. candidates의 원소들로 만들 수 있는 조합(combinations)들 중, 조합 내 원소의 합이 target인 조합을…"},{"id":"d3abedb9-9e0d-5fcd-88a1-c4df0632fb87","fields":{"slug":"/[leet_code]-77-combinations-medium","categoryDirectory":"/Algorithm/"},"frontmatter":{"title":"[LeetCode] 77. Combinations (Medium)","createdAt":"October 07, 2023"},"excerpt":"문제 77. Combinations n과 k의 두 정수가 주어진다. [1, n]의 구간 (구간은 inclusive 하다.) 중 k개의 원소를 뽑아 만들 수 있는 모든 가능한 조합 (combinations)를 구하라.\n\n[1, 2]와 [2, 1]은 같은 조합으로 판단한다…"},{"id":"c2df6022-faf4-5959-a498-ffff90ab0dc4","fields":{"slug":"/[leet_code]-79-word-search-medium","categoryDirectory":"/Algorithm/"},"frontmatter":{"title":"[LeetCode] 79. Word Search (Medium)","createdAt":"October 07, 2023"},"excerpt":"문제 79. Word Search\n\nm* n의 문자열 배열 board와 문자열 word가 주어진다. board안의 인접한 노드들로 이루어진 문자열로 word를 구성할 수 있는지 확인하고, 구성할 수 있다면 True를, 구성할 수 없다면 False를 반환하라.\n\nConstr…"},{"id":"56f77daa-c7e9-5f2a-a58a-9056970c0115","fields":{"slug":"/[leet_code]-46-permutations-medium","categoryDirectory":"/Algorithm/"},"frontmatter":{"title":"[LeetCode] 46. Permutations (Medium)","createdAt":"October 07, 2023"},"excerpt":"문제 46. Permutations\n\n각 원소의 값이 서로 다른 정수 배열 nums가 주어진다. nums의 원소로 만들 수 있는 모든 순열 (permutations)를 반환하라.\n\nConstraints\n1 <= nums.length <= 6 -10 <= nums[i] <…"},{"id":"c2995062-f0e7-5924-ab7b-706d704a4e74","fields":{"slug":"/shell의-종류와-startup-파일","categoryDirectory":"/Linux/"},"frontmatter":{"title":"Shell의 종류와 startup 파일","createdAt":"October 05, 2023"},"excerpt":"shell은 유저 input 커맨드를 받아들여 kernel이 이해할 수 있는 형태로 전달하는 역할을 한다. 즉, 유저와 OS의 kernel 사이의 통역사 역할이 shell 프로그램의 본질이다. Shell의 종류와 Startup 파일의 역할\n\nShell이 실행되는 환경은…"},{"id":"623a0116-b0d5-5ec9-ab20-d23d78e69ce9","fields":{"slug":"/linux-unix의-환경변수","categoryDirectory":"/Linux/"},"frontmatter":{"title":"Linux/Unix의 환경변수","createdAt":"October 04, 2023"},"excerpt":"모든 리눅스 프로세스들은 환경변수 set을 가지고 있다. 이 환경 변수들은 해당 프로세스 혹은 타 프로세스와의 interaction 시 영향을 미친다. 환경 변수의 scope\n\nLinux의 환경 변수는 global 혹은 local scope를 가질 수 있다.\n\nGloba…"},{"id":"630f594c-d862-5625-8524-dc2148d7700e","fields":{"slug":"/[leet_code]-17-letter-combinations-of-a-phone-number-medium","categoryDirectory":"/Algorithm/"},"frontmatter":{"title":"[LeetCode] 17. Letter Combinations of a Phone Number (Medium)","createdAt":"September 13, 2023"},"excerpt":"문제 2 ~ 9의 숫자로 이루어진 문자열이 주어진다. 해당 문자열의 숫자는 옛날 휴대폰의 숫자키에 대응되는 문자키들을 나타낸다.\n\n{ \n  2: \"abc\",\n  3: \"def\",\n  4: \"ghi\",\n  5: \"jkl\",\n  6: \"mno\",\n  7: \"pqrs…"},{"id":"2be77903-1858-5c65-994f-76b7e3d30674","fields":{"slug":"/[leet_code]-102-binary-tree-level-order-traversal-medium","categoryDirectory":"/Algorithm/"},"frontmatter":{"title":"[LeetCode] 102. Binary Tree Level Order Traversal (Medium)","createdAt":"September 12, 2023"},"excerpt":"문제 102. Binary Tree Level Order Traversal\n\nBinary Tree의 root node가 주어진다. 해당 node로부터 level order traversal을 시행한 결과를 depth 마다 배열에 담아 반환하라. (반환 결과는 2차원…"},{"id":"69fee177-4921-5773-810f-7896ef9ec32b","fields":{"slug":"/[leet_code]-103-binary-tree-zigzag-level-order-traversal-medium","categoryDirectory":"/Algorithm/"},"frontmatter":{"title":"[LeetCode] 103. Binary Tree Zigzag Level Order Traversal (Medium)","createdAt":"September 12, 2023"},"excerpt":"문제 Binary Tree의 root node가 주어진다. level order로 traverse하되, 지그재그로 수행하라.\n\nConstraints\nThe number of nodes in the tree is in the range [0, 2000]. -100…"},{"id":"41469200-a00a-51fd-a2fe-c1571e31fdda","fields":{"slug":"/[leet_code]-637-average-of-levels-in-binary-tree-easy","categoryDirectory":"/Algorithm/"},"frontmatter":{"title":"[LeetCode] 637. Average of Levels in Binary Tree (Easy)","createdAt":"September 12, 2023"},"excerpt":"문제 Bianry Tree의 Root node가 주어진다. tree의 각 depth 별 node 값의 평균을 구해서 리스트에 담아 반환하라.\n\nConstraints\nThe number of nodes in the tree is in the range [1, 104].…"},{"id":"0104c00b-af67-5bba-b42e-cba2f72c02da","fields":{"slug":"/[leet_code]-127-word-ladder-hard","categoryDirectory":"/Algorithm/"},"frontmatter":{"title":"[LeetCode] 127. Word Ladder (Hard)","createdAt":"September 10, 2023"},"excerpt":"문제 문자열 beginWord와 endWord가 주어진다. 문자열 배열 wordList를 이용해 beginWord에서 endWord까지 가고자 한다. 이동할 수 있는 조건은 두 문자열이 하나의 문자만 빼고 동일해야한다는 것이다. beginWord는 wordList에…"},{"id":"c15ff3f8-a0d3-5cc3-9b7a-b119989117af","fields":{"slug":"/[leet_code]-199-binary-tree-right-side-view-medium","categoryDirectory":"/Algorithm/"},"frontmatter":{"title":"[LeetCode] 199. Binary Tree Right Side View (Medium)","createdAt":"September 10, 2023"},"excerpt":"문제 199. Binary Tree Right Side View\n\nBinary Tree의 root node가 주어진다. 2차원 세상에서 Binary Tree의 오른쪽에 서있다고 상상해보자. 그 때 오른쪽에서 Binary Tree를 바라보았을 때 볼 수 있는 node들을…"},{"id":"1c86be03-c73e-5622-8600-4680e7159ebe","fields":{"slug":"/[leet_code]-433-minimum-genetic-mutation-medium","categoryDirectory":"/Algorithm/"},"frontmatter":{"title":"[LeetCode] 433. Minimum Genetic Mutation (Medium)","createdAt":"September 10, 2023"},"excerpt":"문제 유전자를 나타내는 문자열을 8개의 ‘A’, ‘C’, ‘G’ 혹은 ‘T’로 이루어져 있다.\n\n유전자 변형이란 유전자를 구성하는 8개의 문자열 중 하나의 유전정보, 즉 하나의 문자가 변경되는 것을 말한다.\n\n두 개의 유전자 문자열 startGene과 endGene이…"},{"id":"2f41e21f-96aa-5547-8c29-c173b133e949","fields":{"slug":"/[leet_code]-909-snakes-and-ladders-medium","categoryDirectory":"/Algorithm/"},"frontmatter":{"title":"[LeetCode] 909. Snakes and Ladders (Medium)","createdAt":"September 10, 2023"},"excerpt":"문제 909. Snakes and Ladders\n\nYou are given an n x n integer matrix board where the cells are labeled from 1 to n2 in a Boustrophedon style starting from…"},{"id":"7d5febdf-fc8a-5a98-9c7c-b981849527eb","fields":{"slug":"/[leet_code]-210-course-schedule-ii-medium","categoryDirectory":"/Algorithm/"},"frontmatter":{"title":"[LeetCode] 210. Course Schedule II (Medium)","createdAt":"September 09, 2023"},"excerpt":"문제 210. Course Schedule II\n\n수강해야하는 과목들을 나타내는 정수 numCourses가 주어진다. 0 ~ numCourses - 1까지가 수강해아햐는 과목이다. [Ai, Bi]로 이루어진 배열 prerequisites은 선수강과목에 대한 정보를…"},{"id":"c6a3b8cb-7aa2-5bd9-8905-3ae453b4ff97","fields":{"slug":"/[leet_code]-207-course-schedule-medium","categoryDirectory":"/Algorithm/"},"frontmatter":{"title":"[LeetCode] 207. Course Schedule (Medium)","createdAt":"September 07, 2023"},"excerpt":"문제 207. Course Schedule\n\n수강해야하는 과목들을 나타내는 정수 numCourses가 주어진다. 0 ~ numCourses - 1까지가 수강해아햐는 과목이다. [Ai, Bi]로 이루어진 배열 prerequisites은 선수강과목에 대한 정보를 나타낸다.…"},{"id":"55db3409-7a54-5218-ab6a-f21be04c5bd7","fields":{"slug":"/[leet_code]-399-evaluate-division-medium","categoryDirectory":"/Algorithm/"},"frontmatter":{"title":"[LeetCode] 399. Evaluate Division (Medium)","createdAt":"September 07, 2023"},"excerpt":"문제 399. Evaluate Division\n\n한 쌍의 문자열 타입의 “변수명”으로 이루어진 배열 equations와 정수 배열 values가 주어진다. equations[i]에는 [Ai, Bi]의 값이 들어있는데, 이 떄 value[i]는 Ai / Bi의 계산의…"},{"id":"c3ed096f-477f-5f2b-9d49-dd4be6c937c7","fields":{"slug":"/github-pages에-커스텀-도메인-적용하기-feat-gatsby","categoryDirectory":"/Gatsby/"},"frontmatter":{"title":"Github Pages에 커스텀 도메인 적용하기 (feat. Gatsby)","createdAt":"September 06, 2023"},"excerpt":"Github Pages를 이용해 웹페이지를 호스팅하는 경우 깃허브 측에서 <username>.github.io의 도메인을 기본으로 제공한다. 예를들어, 나는 깃허브 아이디가 leobang17이니 내 경우의 기본 도메인은 leobang17.github.io인 셈. git…"},{"id":"402e9d91-e7d0-5c2c-9b0f-d59345187897","fields":{"slug":"/[leet_code]-15-3_sum-medium","categoryDirectory":"/Algorithm/"},"frontmatter":{"title":"[LeetCode] 15. 3Sum (Medium)","createdAt":"September 06, 2023"},"excerpt":"문제 15. 3Sum\n\n정수 배열 nums가 주어진다. nums[i] + nums[j] + nums[k] = 0을 만족하는 i, j, k를 찾고자 한다. 단, i != j, i != k, and j != k을 만족해야한다. nums의 원소 3개를 합했을 때 0이 나오는…"},{"id":"253534fd-bcb9-5994-bf4f-a43ed853b49a","fields":{"slug":"/[leet_code]-200-number-of-islands-medium","categoryDirectory":"/Algorithm/"},"frontmatter":{"title":"[LeetCode] 200. Number of Islands (Medium)","createdAt":"September 06, 2023"},"excerpt":"문제 200. Number of Islands\n\nm * n의 2차원 배열 grid가 주어진다. grid는 \"1\" 혹은 \"0\" 이루어져있으며 \"1\"은 땅을, \"0\"은 물을 나타낸다. 사방이 물에 둘러싸인 땅을 섬이라고 한다. 주어진 grid 속의 섬의 개수를 구하라.\n\nCo…"},{"id":"62fdea7b-175b-5f0d-ae57-a133b3349d19","fields":{"slug":"/[leet_code]-130-surrounded-regions-medium","categoryDirectory":"/Algorithm/"},"frontmatter":{"title":"[LeetCode] 130. Surrounded Regions (Medium)","createdAt":"September 06, 2023"},"excerpt":"문제 130. Surrounded Regions\n\nm * n의 2차원 배열 board가 주어진다. board는 \"X\" 혹은 \"O\"으로 이루어져 있다. 사방이 \"X\"으로 둘러싸인 \"O\" 지역을 \"X\"으로 뒤집으려고 한다. 주어진 board 배열을 조작하고 다른 것을…"},{"id":"eba02332-4d8e-5e30-a2bc-3111bf338ecc","fields":{"slug":"/[leet_code]-11-container-with-most-water-medium","categoryDirectory":"/Algorithm/"},"frontmatter":{"title":"[LeetCode] 11. Container With Most Water (Medium)","createdAt":"September 04, 2023"},"excerpt":"문제 11. Container With Most Water\n\nn인 정수 배열 height가 주어진다. height 배열은 n개의 수직 직선의 길이 (높이) 값을 담고 있다. i번째 직선의 높이는 height[i]이다.\n\nn개의 직선 중 2개의 수직 직선을 선택해 물을…"},{"id":"b05eea5b-ee09-5516-a119-3e6deb7941bc","fields":{"slug":"/[leet_code]-125-valid-palindrome-easy","categoryDirectory":"/Algorithm/"},"frontmatter":{"title":"[LeetCode] 125. Valid Palindrome (Easy)","createdAt":"September 04, 2023"},"excerpt":"문제 문자열 s이 주어진다. 주어진 s의 문자들 중 정수와 알파벳만 남기고 소문자로 바꾼 뒤, 이 결과가 올바른 palindrome인지 확인하라. palindrome이라면 True를 반환하고 아닐 경우 False를 반환한다.\n\npalindrome이란 앞에서 읽어도…"},{"id":"15a41ee4-f3d5-5c2e-8dad-99d9b3ec06b0","fields":{"slug":"/[leet_code]-167-two-sum-ii-input-array-is-sorted-medium","categoryDirectory":"/Algorithm/"},"frontmatter":{"title":"[LeetCode] 167. Two Sum II - Input Array Is Sorted (Medium)","createdAt":"September 04, 2023"},"excerpt":"문제 167. Two Sum II - Input Array Is Sorted\n\n오름차순으로 정렬된 정수 배열 numbers와 정수 target이 주어진다. numbers 속의 두 원소를 더하면 target값이 나온다. 이 두 원소의 index를 반환하라.\n\nindex는…"},{"id":"ab112e46-be33-5e63-b30d-dcf0e41ec32b","fields":{"slug":"/[leet_code]-392-is-subsequence-easy","categoryDirectory":"/Algorithm/"},"frontmatter":{"title":"[LeetCode] 392. Is Subsequence (Easy)","createdAt":"September 04, 2023"},"excerpt":"문제 두 문자열 s와 t가 주어진다. s가 t의 subsequence인지 확인하고 맞다면 True, 아니라면 False를 반환하라.\n\ns가 t의 subsequence가 되기 위해서는,\n\n문자열의 순서를 바꾸지 않는 선에서 t의 특정 문자들을 제거할 수 있다. 이 때 남은…"},{"id":"afe91bab-a0e1-51df-8c19-f9d074e9d4d3","fields":{"slug":"/[leet_code]-274-h-index-medium","categoryDirectory":"/Algorithm/"},"frontmatter":{"title":"[LeetCode] 274. H-Index (Medium)","createdAt":"September 03, 2023"},"excerpt":"문제 논문의 인용 횟수를 담은 정수 배열 citations가 주어진다. i번째 논문의 인용 횟수는 citations[i]번 이다.\n\nh-index란, h번 이상 인용된 논문이 h개 일 때, 이 때 h값의 최대값을 말한다. h-index를 구하라.\n\nConstraints…"},{"id":"f04e9899-e5b1-5431-9033-12650a28ac09","fields":{"slug":"/[leet_code]-45-jump-game-ii-medium","categoryDirectory":"/Algorithm/"},"frontmatter":{"title":"[LeetCode] 45. Jump Game II (Medium)","createdAt":"September 03, 2023"},"excerpt":"문제 Jump Game을 위해 길이가 n인 정수 배열 nums가 주어진다. Jump Game은 인덱스 0에서부터 시작해 마지막 인덱스까지 도달하면 승리하는 게임이다.\n\nnums의 각 i번째 원소 nums[i]는 해당 노드가 최대한 멀리 점프할 수 있는 거리를 나타낸다…"},{"id":"749163ea-66b7-5a39-8ebd-e6f031a307ee","fields":{"slug":"/[leet_code]-55-jump-game-medium","categoryDirectory":"/Algorithm/"},"frontmatter":{"title":"[LeetCode] 55. Jump Game (Medium)","createdAt":"September 03, 2023"},"excerpt":"문제 정수 배열 nums가 주어진다. 배열의 첫번째 인덱스로부터 시작해 jump해서 마지막 인덱스까지 도달하면 게임에서 승리한다. nums의 각 원소는 최대 jump 거리를 나타낸다. (최대 jump 거리보다 적게 jump하는 것을 선택할 수도 있다.)\n\n마지막 인덱스에…"},{"id":"50438dde-4751-5b70-8336-878afedc3e6a","fields":{"slug":"/[leet_code]-122-best-time-to-buy-and-sell-stock-ii-medium","categoryDirectory":"/Algorithm/"},"frontmatter":{"title":"[LeetCode] 122. Best Time to Buy and Sell Stock II (Medium)","createdAt":"September 01, 2023"},"excerpt":"문제 주식시장에서 주식을 거래하려고 한다. 주식 시장의 일별 가격을 나타내는 정수 배열 prices가 주어진다. prices[i]는 i번째 날의 주식 가격을 나타낸다. 거래자는 주식을 언제든지 사고 팔 수 있지만 하루에 2개 이상의 주식을 보유할 수는 없다. (같은…"},{"id":"e9e97959-84e2-5c19-9132-319d6a421087","fields":{"slug":"/[leetcode]-121-best-time-to-buy-and-sell-stock-easy","categoryDirectory":"/Algorithm/"},"frontmatter":{"title":"[leetcode] 121. Best Time to Buy and Sell Stock (Easy)","createdAt":"August 31, 2023"},"excerpt":"문제 당신은 주식시장에서 주식을 거래하려고 한다. 주식 시장의 일별 가격을 나타내는 정수 배열 prices가 주어진다. prices[i]는 i번째 날의 주식 가격을 나타낸다.\n\n주식 거래의 차익을 최대화해야한다. 거래는 구매와 판매 각각 1번씩 할 수 있다. prices…"},{"id":"66280bed-6147-5a70-b695-e0645f5e04ab","fields":{"slug":"/[leet_code]-189-rotate-array-medium","categoryDirectory":"/Algorithm/"},"frontmatter":{"title":"[LeetCode] 189. Rotate Array (Medium)","createdAt":"August 31, 2023"},"excerpt":"문제 정수 배열 nums가 주어진다. 해당 배열을 오른쪽으로 k 만큼 rotate 시켜라. k는 음수가 아닌 정수이다.\n\nConstraints\n1 <= nums.length <= 10^5 -231 <= nums[i] <= 231 - 1 0 <= k <= 105\n풀이1…"},{"id":"3a44e3bf-3cad-5d69-b4bd-14d354614d7a","fields":{"slug":"/[leet_code]-169-majority-element-easy","categoryDirectory":"/Algorithm/"},"frontmatter":{"title":"[LeetCode] 169. Majority Element (Easy)","createdAt":"August 31, 2023"},"excerpt":"문제 n의 길이를 가지는 정수 배열 nums가 존재한다. majority element를 구하라. majority element는 항상 존재한다.\n\nmajority element란 배열이서 [n / 2] 회 이상 나타나는 원소를 뜻한다.\n\nConstraints\nn =…"},{"id":"36972800-1800-5a54-801a-e41584fba18d","fields":{"slug":"/[leet_code]-88-merge-sorted-array-python-easy","categoryDirectory":"/Algorithm/"},"frontmatter":{"title":"[LeetCode] 88. Merge Sorted Array - Python (Easy)","createdAt":"August 30, 2023"},"excerpt":"문제 두 개의 정수 배열 nums1과 nums2가 주어진다. 두 배열은 오름차순으로 정렬되어있으며 m과 n은 각각 nums1과 nums2의 원소의 갯수를 나타낸다.\n\nnums1과 nums2 두 배열의 원소를 합쳐 오름차순으로 정렬하라.\n\nConstraints\nnums1…"},{"id":"90410a17-2559-54ad-8695-97c22f303806","fields":{"slug":"/[leet_code]-80-remove-duplicates-from-sorted-array-ii-medium","categoryDirectory":"/Algorithm/"},"frontmatter":{"title":"[LeetCode] 80. Remove Duplicates from Sorted Array II (Medium)","createdAt":"August 30, 2023"},"excerpt":"문제 정수 배열 nums 가 오름차순으로 정렬되어있다. 연속으로 동일한 수가 2회를 초과하여 나오지 않도록 배열을 조작하라.\n\nConstraints\n1 <= nums.length <= 3 * 10^4^ 104 <= nums[i] <= 104 nums is sorted…"},{"id":"19a1e1bb-e041-505b-acf4-44dc2db937b0","fields":{"slug":"/aws-cloud-best-practice","categoryDirectory":"/AWS/"},"frontmatter":{"title":"AWS Cloud Best Practice","createdAt":"August 27, 2023"},"excerpt":"운영 우수성 (Operational Excellence) 코드를 통한 운영 애자일한 배포 (실패할 경우 되돌릴 수 있는 작은 증분으로 변경 내용을 적용한다) 실패 예측 실패로부터 학습\n보안 (Security)\n\n전송 및 보관시 데이터 보호할 것 (암호화, 토큰화…"},{"id":"224dcbd1-2e67-54ad-93e6-40ecbcc0a389","fields":{"slug":"/재해복구-전략-disaster-recovery","categoryDirectory":"/AWS/"},"frontmatter":{"title":"재해복구 전략 (Disaster Recovery)","createdAt":"August 01, 2023"},"excerpt":"Disaster Recovery란 자연재해나 인간의 행동으로 인한 재해가 발생한 후 조직에서 IT 인프라에 대한 엑세스 및 기능을 복원할 수 있는 기능을 말한다. DR 전략 목표; RTO와 RPO\n\nDR 전략을 수립할 때는 다음과 같은 주요 메트릭을 신중하게…"},{"id":"0c0fa405-daaf-5bd0-8a29-785878960f2f","fields":{"slug":"/라우터","categoryDirectory":"/네트워크/"},"frontmatter":{"title":"라우터","createdAt":"July 06, 2023"},"excerpt":"가정에서는 리피터 허브나 스위칭 허브가 내장된 라우터를 사용하는 경우가 많고, 단일 기능의 여러 개의 기기들을 연결해서 사용하는 경우가 적을 것이다. 하지만 단일 기능의 기기가 이해하기 쉬우므로 단일 기능의 기기의 관점으로 보자. LAN 어댑터의 PHY(MAU)회로에서…"},{"id":"9f3edc5a-a5e3-579d-b601-7e4fe46886eb","fields":{"slug":"/ip와-이더넷","categoryDirectory":"/네트워크/"},"frontmatter":{"title":"IP와 이더넷","createdAt":"July 02, 2023"},"excerpt":"TCP 담당 부분은 IP 담당 부분에게 데이터를 패킷의 모습으로 만들어 송신하는 작업을 위임한다. 패킷은 ‘헤더’와 ‘데이터’ 두 부분으로 구성된다. 일반적으로 TCP 헤더 + 데이터 조각이 패킷의 ‘데이터’ 부분을 나타낸다. 수신했을 때의 MAC 헤더는 버리고 송신할…"},{"id":"8c4f6ed8-d6a9-5855-868d-edfab1eaa363","fields":{"slug":"/프로토콜-스택","categoryDirectory":"/네트워크/"},"frontmatter":{"title":"프로토콜 스택","createdAt":"June 27, 2023"},"excerpt":"브라우저나 메일 등의 일반적인 application은 TCP를 사용하여 데이터를 송/수신한다. DNS query 등 짧은 제어용 데이터를 송/수신하는 경우에는 UDP를 사용한다. IP\n\nIP 프로토콜을 사용해 패킷 송/수신 동작을 제어하는 부분 패킷을 통신 상대까지…"},{"id":"a7c6e2da-94ee-5a54-a553-65cffe5ea38d","fields":{"slug":"/네트워크-브라우저부터-socket-까지","categoryDirectory":"/네트워크/"},"frontmatter":{"title":"네트워크 - 브라우저부터 Socket 까지","createdAt":"June 26, 2023"},"excerpt":"브라우저는 HTTP 통신을 다음과 같은 순서로 수행한다. HTTP 규격에 맞는 메시지를 생성한다. DNS를 통해 도메인에 맞는 IP 주소를 query한다. HTTP 요청을 보내고, 그에 따른 응답 메시지를 수신한다.\n\n이 중 브라우저 애플리케이션이 직접 수행하는…"},{"id":"2342c0a9-2558-5a34-ae08-18a43756292f","fields":{"slug":"/웹서버-was-nginx","categoryDirectory":"/Web/"},"frontmatter":{"title":"웹서버, WAS, NGINX","createdAt":"June 18, 2023"},"excerpt":"Web Server란 HTTP/HTTPS 요청을 처리하고 HTML, CSS, 이미지 파일과 같은 정적 리소스를 제공하는 소프트웨어를 Web Server라고 한다. 보통 HTTP 서버를 의미한다.\n\n웹서버는 정적인 콘텐츠만을 서빙할 수 있다. 따라서 동일한 HTTP 요청…"},{"id":"02713b09-fbc9-525f-897d-23045b16c975","fields":{"slug":"/aws-lambda","categoryDirectory":"/AWS/"},"frontmatter":{"title":"AWS Lambda","createdAt":"May 28, 2023"},"excerpt":"AWS Lambda 동작 원리 Lambda 핸들러는 크게 4단계를 거쳐 실행된다:\n\n코드를 다운로드 받는다.\n주로 S3에서 아티팩트를 다운받는다.\n새로운 execution environment를 구성한다. 코드 중 를 실행한다.…"},{"id":"3f8284eb-8890-54e7-99a8-b29837fa6d42","fields":{"slug":"/gatsby-rendering-옵션들","categoryDirectory":"/Gatsby/"},"frontmatter":{"title":"Gatsby Rendering 옵션들","createdAt":"April 10, 2023"},"excerpt":"SSG (Static Site Generation)이나 DSG (Deferred Static Generation)이 더 권장되지만, 특정 use case를 위해서는 SSR을 활용하도록 한다. Rendering 옵션이란?\n\n유저가 마주하게될 HTML이 조립되는 시점을…"},{"id":"5f6ee5a5-d45a-54af-a72a-31962475914d","fields":{"slug":"/gatsby-theme-simplex-사용법","categoryDirectory":"/blog/"},"frontmatter":{"title":"Gatsby Theme Simplex 사용법","createdAt":"April 08, 2023"},"excerpt":"데모 페이지 방문하기 Gatsby Theme Simplex는 Gatsby 프레임워크를 기반으로 구축된 블로그 스타터입니다. 마크다운을 문법을 사용하여 글을 작성할 수 있으며, 코드를 수정해 사용자의 필요에 맞게 블로그를 꾸밀 수 있습니다.\n\nGatsby Theme…"},{"id":"f25a6969-95ca-5621-9da5-350f239761ea","fields":{"slug":"/git-actions","categoryDirectory":"/blog/"},"frontmatter":{"title":"Git Actions","createdAt":"January 28, 2023"},"excerpt":"깃허브는 workflow를 실행할 Linux, Windows, 그리고 macOS 가상머신을 제공한다. 혹은 직접 본인의 데이터센터나 클라우드 인프라에서 self-hosted runners를 호스팅할 수도 있다. workflow란 하나 이상의 job을 실행하는 자동화된…"},{"id":"e36f5f7a-c503-5b62-aa83-2d6f0a40fd0e","fields":{"slug":"/제목-예시-입니다","categoryDirectory":"/blog/"},"frontmatter":{"title":"제목 예시 입니다.","createdAt":"January 17, 2023"},"excerpt":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus dolor tortor, auctor vitae sodales vel, viverra ut mauris. Sed vel auctor diam. Cras…"},{"id":"30cb0ed1-75ee-5d51-83f2-2ebd8600e183","fields":{"slug":"/http를-stateful하게-jwt","categoryDirectory":"/Web/"},"frontmatter":{"title":"HTTP를 Stateful하게 - JWT","createdAt":"January 06, 2023"},"excerpt":"HTTP의 인증 state를 유지하기 위한 방식하면 꼭 등장하는 셋이 cookie, session 그리고 JWT이다. 사실 JWT 그 자체가 HTTP를 stateful하게 만들어 준다기 보다는 그냥 HTTP 표준의 authorization header에 token…"},{"id":"61279bd1-6449-5f54-bc72-a4500350fd9a","fields":{"slug":"/java로-이해하는-concurrency","categoryDirectory":"/Java/"},"frontmatter":{"title":"Java로 이해하는 Concurrency","createdAt":"December 26, 2022"},"excerpt":"Oracle의 Concurrency Docs를 기반으로 Java 플랫폼의 기본적인 concurrency 지원과 java.util.concurrent 패키지의 고수준 API를 알아봅니당. 모든 concurrency 프로그래밍의 기본적인 실행 단위는 process와…"},{"id":"65b81e7a-88ae-5111-a4f3-27ab9c8c5379","fields":{"slug":"/jwt-표준에-대해-rfc7519","categoryDirectory":"/Web/"},"frontmatter":{"title":"JWT 표준에 대해 - RFC7519","createdAt":"October 29, 2022"},"excerpt":"1. Introduction JSON Web Token (JWT)란 HTTP Authorization 헤더나 URI 쿼리 파라미터와 같이 공간 제약적인 환경에 compact하게 실어나를 수 있는 token을 말한다.\n\nJSON Web Token (JWT)\n\nJWS나…"},{"id":"286c36f1-b322-5db2-9719-e4ca8fb7296d","fields":{"slug":"/security-filter의-@component를-제거한-이유","categoryDirectory":"/Spring/"},"frontmatter":{"title":"Security Filter의 @Component를 제거한 이유","createdAt":"October 18, 2022"},"excerpt":"원래는 Filter에 @Component 어노테이션을 부착했었다. 웹 시큐리티 설정 파일인 WebSecurityConfig.java는 다음과 같았다. @RequiredArgsConstructor\n@Configuration\npublic class…"},{"id":"39c31d29-a37a-521b-a20f-0e385372807c","fields":{"slug":"/@value-를-스프링-slice-test에서-이용하는-방법","categoryDirectory":"/Spring/"},"frontmatter":{"title":"@Value 를 스프링 Slice Test에서 이용하는 방법","createdAt":"October 18, 2022"},"excerpt":"io.jsonwebtoken.security.WeakKeyException: The specified key byte array is 136 bits which is not secure enough for any JWT HMAC-SHA algorithm.  The…"},{"id":"d9f03d62-d22b-50d0-a595-ca9f0c26466c","fields":{"slug":"/공룡책-운영체제06-동기화","categoryDirectory":"/운영체제/"},"frontmatter":{"title":"공룡책 운영체제06 - 동기화","createdAt":"October 17, 2022"},"excerpt":"이 장의 목표 critical section (임계영역) 문제를 정의하고 Race Condition (경쟁 조건)을 설명한다. 메모리 장벽, compare-and-swap 연산 및 Atomic 변수를 사용하여 critical section 문제에 대한 하드웨어적…"},{"id":"716981db-a5ee-53a4-a45d-9a37435a4261","fields":{"slug":"/공룡책-운영체제05-cpu-스케줄링","categoryDirectory":"/운영체제/"},"frontmatter":{"title":"공룡책 운영체제05 - CPU 스케줄링","createdAt":"October 10, 2022"},"excerpt":"OS는 실질적으로 process가 아니라 kernel 수준의 thread를 스케줄링한다. 그러나 “프로세스 스케줄링”과 “쓰레드 스케줄링”의 용어는 상호 교환적으로 사용된다. 5.1.1 CPU Burst - I/O Burst\n\nprocess의 실행은 CPU 실행과 I…"},{"id":"b9756937-7f53-5ea2-83fc-69188e1a65cf","fields":{"slug":"/enable_jpa_auditing를-분리하게된-과정","categoryDirectory":"/Spring/"},"frontmatter":{"title":"EnableJpaAuditing를 분리하게된 과정","createdAt":"October 06, 2022"},"excerpt":"에러 내용 Caused by: java.lang.IllegalArgumentException: JPA metamodel must not be empty!\n\tat org.springframework.util.Assert.notEmpty(Assert.java:464…"},{"id":"6aab87d0-f355-5854-93f7-472729ecdef3","fields":{"slug":"/@basic-어노테이션-그리고-primitive-type에-대해-not-null-제약조건을-매핑하는-이유","categoryDirectory":"/Spring/"},"frontmatter":{"title":"@Basic 어노테이션. 그리고 primitive type에 대해 not null 제약조건을 매핑하는 이유","createdAt":"October 06, 2022"},"excerpt":"What Caused by: org.h2.jdbc.JdbcSQLIntegrityConstraintViolationException: NULL not allowed for column \"ARTICLE_CURSOR\"; SQL statement:\n\nWhen\n\n테스트를 위해…"},{"id":"0ec197ca-0c04-5563-bd15-e4cf9cd4c823","fields":{"slug":"/uuid-타입에-대한-에러-저장은-하지만-조회를-못한다-feat-postgre_sql","categoryDirectory":"/Spring/"},"frontmatter":{"title":"UUID 타입에 대한 에러... 저장은 하지만 조회를 못한다. (feat. PostgreSQL)","createdAt":"October 06, 2022"},"excerpt":"What java.lang.AssertionError: \nExpecting actual not to be null\n\nWhen\n@Getter\n@NoArgsConstructor(access = AccessLevel.PROTECTED)\n@Entity\n@Table(name…"},{"id":"4c87d5c8-0826-5a26-8d89-fa1c820f6e5c","fields":{"slug":"/공룡책-운영체제04-스레드와-병행성","categoryDirectory":"/운영체제/"},"frontmatter":{"title":"공룡책 운영체제04 - 스레드와 병행성","createdAt":"October 04, 2022"},"excerpt":"4.1 개요 쓰레드는 CPU를 점유하는 가장 basic한 단위로, light weight process이다. 전통적인 프로세스는 single thread of control이었으므로 CPU core를 점유하는 단위가 프로세스였지만, 현대의 컴퓨터는 프로세스 자체가…"},{"id":"b71da940-f36d-59e4-b725-c45329f0399b","fields":{"slug":"/공룡책-운영체제03-프로세스","categoryDirectory":"/운영체제/"},"frontmatter":{"title":"공룡책 운영체제03 - 프로세스","createdAt":"October 01, 2022"},"excerpt":"3.1 프로세스 개념 3.1.1 프로세스\n프로세스와 프로그램\n\n프로세스\n\nProgram in execution = 실행 중인 프로그램 HDD에 있는 프로그램 (= set of instruction)을 메모리에 로드하면 cpu의 입장에서 fetch-execution 할…"},{"id":"d44f6de3-e9b0-5b25-858c-07fe024d1ba2","fields":{"slug":"/공룡책-운영체제-01-os","categoryDirectory":"/운영체제/"},"frontmatter":{"title":"공룡책 운영체제 01 - OS","createdAt":"September 28, 2022"},"excerpt":"운영체제란? computor system을 operate (운영)하는 소프트웨어\n\n그럼 컴퓨터란?\n\n정보를 처리하는 기계 (machine that processes the information)\n\n그럼 정보란?\n\nquantative representation…"}]}},"pageContext":{"categoryDirectory":"/컴퓨터구조/"}},"staticQueryHashes":["1659129543","1890943840","2045906531","3439177365"],"slicesMap":{}}