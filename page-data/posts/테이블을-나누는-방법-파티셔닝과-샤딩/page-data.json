{"componentChunkName":"component---src-templates-article-page-jsx-content-file-path-home-runner-work-leobang-17-github-io-leobang-17-github-io-documents-데이터베이스-database-partitioning-md","path":"/posts/테이블을-나누는-방법-파티셔닝과-샤딩/","result":{"data":{"mdx":{"id":"65a3f7ec-c035-563e-8656-352c6738c1dc","fields":{"slug":"/테이블을-나누는-방법-파티셔닝과-샤딩","timeToRead":6,"categoryDirectory":"/데이터베이스/"},"frontmatter":{"title":"테이블을 나누는 방법: 파티셔닝과 샤딩","createdAt":"October 21, 2023"},"tableOfContents":{"items":[{"url":"#partitioning이란","title":"Partitioning이란","items":[{"items":[{"items":[{"url":"#vertical-partitioning이란","title":"Vertical Partitioning이란?"},{"url":"#horizontal-partitioning이란","title":"Horizontal Partitioning이란?"},{"url":"#horizontal-partitioning을-구현하는-방법-hash-based","title":"Horizontal Partitioning을 구현하는 방법: Hash-Based"}]}]}]},{"url":"#sharding이란","title":"Sharding이란?"},{"url":"#replication이란","title":"Replication이란?"}]}},"prevPost":{"fields":{"slug":"/cpu-bound-프로그램과-i-o-bound-프로그램"},"frontmatter":{"title":"CPU bound 프로그램과 I/O bound 프로그램"}},"nextPost":{"fields":{"slug":"/synchronization과-deadlock"},"frontmatter":{"title":"Synchronization과 Deadlock"}}},"pageContext":{"id":"65a3f7ec-c035-563e-8656-352c6738c1dc","prevId":"cb13b477-51d4-5130-89d0-b09e90d20714","nextId":"0f4c3d23-08fb-5b63-be6c-8a7be2304159","frontmatter":{"title":"테이블을 나누는 방법: 파티셔닝과 샤딩","createdAt":"2023-10-21T00:00:00.000Z"}}},"staticQueryHashes":["1659129543","1890943840","2045906531","3439177365"],"slicesMap":{}}