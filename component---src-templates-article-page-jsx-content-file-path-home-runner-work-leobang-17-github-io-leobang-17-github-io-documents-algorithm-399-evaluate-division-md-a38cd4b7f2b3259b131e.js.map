{"version":3,"file":"component---src-templates-article-page-jsx-content-file-path-home-runner-work-leobang-17-github-io-leobang-17-github-io-documents-algorithm-399-evaluate-division-md-a38cd4b7f2b3259b131e.js","mappings":"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","sources":["webpack://gatsby-theme-simplex/./documents/Algorithm/399.Evaluate-Division.md","webpack://gatsby-theme-simplex/./src/templates/ArticlePage.jsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    div: \"div\",\n    p: \"p\",\n    code: \"code\",\n    blockquote: \"blockquote\",\n    h4: \"h4\",\n    ul: \"ul\",\n    li: \"li\",\n    ol: \"ol\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, {\n    id: \"문제\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EB%AC%B8%EC%A0%9C\",\n    \"aria-label\": \"문제 permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"문제\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://leetcode.com/problems/evaluate-division/description/?envType=study-plan-v2&envId=top-interview-150\",\n    target: \"_self\",\n    rel: \"nofollow\"\n  }, \"399. Evaluate Division\")), \"\\n\", React.createElement(_components.p, null, \"한 쌍의 문자열 타입의 “변수명”으로 이루어진 배열 \", React.createElement(_components.code, null, \"equations\"), \"와 정수 배열 \", React.createElement(_components.code, null, \"values\"), \"가 주어진다. \", React.createElement(_components.code, null, \"equations[i]\"), \"에는 \", React.createElement(_components.code, null, \"[Ai, Bi]\"), \"의 값이 들어있는데, 이 떄 \", React.createElement(_components.code, null, \"value[i]\"), \"는 \", React.createElement(_components.code, null, \"Ai / Bi\"), \"의 계산의 결과를 나타낸다.\"), \"\\n\", React.createElement(_components.p, null, \"세번째 인자로는 배열 \", React.createElement(_components.code, null, \"queries\"), \"가 주어지는데 우리는 이 \", React.createElement(_components.code, null, \"queries\"), \" 배열에 담긴 값에 따라서 응답을 해야한다. \", React.createElement(_components.code, null, \"queries[j]\"), \"는 \", React.createElement(_components.code, null, \"[Aj, Bj]\"), \"를 담고 있다. 각 \", React.createElement(_components.code, null, \"queries\"), \" 원소의 \", React.createElement(_components.code, null, \"Aj / Bj\"), \"의 결과를 계산해 정답이 담긴 배열로 반환하면 된다.\"), \"\\n\", React.createElement(_components.p, null, \"만약 계산할 수 없는 query가 주어진다면 \", React.createElement(_components.code, null, \"-1.0\"), \"을 담는다.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Note\\n\", React.createElement(_components.code, null, \"equations\"), \"에 등장하지 않는 원소가 \", React.createElement(_components.code, null, \"queries\"), \"에는 등장할 수도 있다. 이 경우엔 정보가 없어 계산을 하지 하는 것으로 판단한다.\"), \"\\n\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"constraints\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#constraints\",\n    \"aria-label\": \"constraints permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Constraints\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"1 <= equations.length <= 20\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"equations[i].length == 2\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"1 <= Ai.length, Bi.length <= 5\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"values.length == equations.length\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"0.0 < values[i] <= 20.0\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"1 <= queries.length <= 20\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"queries[i].length == 2\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"1 <= Cj.length, Dj.length <= 5\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"Ai, Bi, Cj, Dj consist of lower case English letters and digits.\")), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"approach---graph-dfs-iterative\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#approach---graph-dfs-iterative\",\n    \"aria-label\": \"approach   graph dfs iterative permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Approach - Graph: DFS (Iterative)\"), \"\\n\", React.createElement(_components.p, null, \"아이디어 자체는 간단했는데 구현이 조금 귀찮은 면이 있다.\"), \"\\n\", React.createElement(_components.p, null, \"두 부분으로 나누어 생각해보자.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"그래프 저장\\n그래프의 자료구조는 hashmap을 선택했다. hashmap의 key는 \", React.createElement(_components.code, null, \"equations\"), \"의 변수 문자열값이고, hashmap의 value는 길이가 2인 \", React.createElement(_components.code, null, \"tuple\"), \" 타입으로 이루어져 있는 배열이다.\\n\", React.createElement(_components.code, null, \"tuple\"), \"의 \", React.createElement(_components.code, null, \"index=0\"), \" 에는 나눌 수 있는 문자열 변수값이, \", React.createElement(_components.code, null, \"index=1\"), \"에는 나누었을 때의 결과 값이 저장된다.\\n방문처리를 위한 자료구조도 역시 hashmap을 사용한다.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"그래프 탐색\\n그래프 탐색으로 풀 수 있는 이유는 간단하다. \", React.createElement(_components.code, null, \"a / c\"), \"의 쿼리를 처리하고 싶은 경우, \", React.createElement(_components.code, null, \"a / b\"), \"와 \", React.createElement(_components.code, null, \"b / c\"), \"의 결과값을 알면 되기 때문이다. graph에 저장된 나눌 수 있는 값들이 일종의 인접한 노드인 셈이다.\\n아이디어는 단순하게 떠올릴 수 있었지만 결과값 계산이나 graph에 없는 변수가 query에 들어가있는 경우 등을 처리하는게 까다로웠다.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"complexity\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#complexity\",\n    \"aria-label\": \"complexity permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Complexity\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"time complexity: \", React.createElement(_components.code, null, \"O(N * (V + E))\"), \" = query * graph\"), \"\\n\", React.createElement(_components.li, null, \"space complexity: \", React.createElement(_components.code, null, \"O(V + E)\")), \"\\n\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"code\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#code\",\n    \"aria-label\": \"code permalink\",\n    className: \"header-links before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Code\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"class Solution:\\n    def calcEquation(self, equations: List[List[str]], values: List[float], queries: List[List[str]]) -> List[float]:\\n        graph = dict()\\n        visited = dict()\\n        result = []\\n\\n        # Graph 만들기\\n        for i in range(len(equations)):\\n            if equations[i][0] in graph:\\n                graph[equations[i][0]].append((equations[i][1], values[i]))\\n            else:\\n                graph[equations[i][0]] = [(equations[i][1], values[i])]\\n            if equations[i][1] in graph:\\n                graph[equations[i][1]].append((equations[i][0], 1.0 / values[i]))\\n            else:\\n                graph[equations[i][1]] = [(equations[i][0], 1.0 / values[i])]\\n            visited[equations[i][0]] = False\\n            visited[equations[i][1]] = False\\n        \\n        # DFS로 계산\\n        for start, destination in queries:\\n            for k in visited.keys(): visited[k] = False  # visited 초기화\\n                \\n            answer = -1.0\\n            stack = [(start, 1.0)]  # index=0 에는 노드 번호를, index=1 에는 노드 이동을 통해 계산한 결과값을 담는다.\\n            visited[start] = True\\n\\n            while stack:\\n                node, val = stack.pop()\\n                if node not in graph: # equation에 등장하지 않은 값이었을 경우 계산하지 않음 \\n                    break \\n                if node == destination: \\n                    answer = val\\n                    break   \\n                \\n                for adj, cal in graph[node]:\\n                    if not visited[adj]:\\n                        stack.append((adj, val * cal))\\n                        visited[adj] = True\\n        \\n            result.append(answer)\\n\\n        return result\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/leobang17.github.io/leobang17.github.io/documents/Algorithm/399.Evaluate-Division.md\";\nimport React from 'react';\nimport {graphql} from 'gatsby';\nimport ArticleLayout from 'components/Layout/ArticleLayout';\nimport MarkdownWrapper from 'components/MarkdownWrapper';\nimport ArticleFrontmatter from 'components/ArticleFrontmatter';\nimport ArticlePageContext from 'contexts/ArticlePageContext';\nimport Utterances from 'components/Utterance';\nimport RecentPosts from 'components/RecentPosts/RecentPosts';\nconst isBrowser = typeof window !== undefined;\nconst ArticlePage = ({data, children, serverData}) => {\n  const {prevPost, nextPost} = data;\n  const frontmatters = {\n    ...data.mdx.frontmatter,\n    timeToRead: data.mdx.fields.timeToRead\n  };\n  return React.createElement(ArticlePageContext, {\n    data: data\n  }, React.createElement(ArticleLayout, null, React.createElement(ArticleFrontmatter, frontmatters), React.createElement(MarkdownWrapper, null, children), React.createElement(RecentPosts, {\n    prev: prevPost,\n    next: nextPost\n  }), React.createElement(Utterances)));\n};\nArticlePage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ArticlePage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String, $nextId: String, $prevId: String) {\n    mdx(id: { eq: $id }) {\n      id\n      fields {\n        slug\n        timeToRead\n        categoryDirectory\n      }\n      frontmatter {\n        title\n        createdAt(formatString: \"MMMM DD, YYYY\")\n      }\n      tableOfContents\n    }\n    prevPost: mdx(id: { eq: $prevId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    nextPost: mdx(id: { eq: $nextId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\nexport {ArticlePageHead as Head} from 'components/head';\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","a","div","p","code","blockquote","h4","ul","li","ol","pre","_provideComponents","components","React","id","style","position","href","className","dangerouslySetInnerHTML","__html","target","rel","wrapper","MDXLayout","ArticlePage","data","children","serverData","prevPost","nextPost","frontmatters","mdx","frontmatter","timeToRead","fields","ArticlePageContext","ArticleLayout","ArticleFrontmatter","MarkdownWrapper","RecentPosts","prev","next","Utterances","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}