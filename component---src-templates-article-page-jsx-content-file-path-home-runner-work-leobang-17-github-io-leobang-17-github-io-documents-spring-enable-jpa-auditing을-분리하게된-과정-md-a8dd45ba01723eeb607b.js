"use strict";(self.webpackChunkgatsby_theme_simplex=self.webpackChunkgatsby_theme_simplex||[]).push([[9725],{9909:function(e,t,a){a.r(t),a.d(t,{Head:function(){return h.py},default:function(){return E}});var n=a(1151),l=a(7294);function r(e){const t=Object.assign({h2:"h2",a:"a",div:"div",pre:"pre",code:"code",p:"p",h4:"h4",blockquote:"blockquote",strong:"strong"},(0,n.ah)(),e.components);return l.createElement(l.Fragment,null,l.createElement(t.h2,{id:"에러-내용",style:{position:"relative"}},l.createElement(t.a,{href:"#%EC%97%90%EB%9F%AC-%EB%82%B4%EC%9A%A9","aria-label":"에러 내용 permalink",className:"header-links before"},l.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"에러 내용"),"\n",l.createElement(t.pre,null,l.createElement(t.code,null,"Caused by: java.lang.IllegalArgumentException: JPA metamodel must not be empty!\n\tat org.springframework.util.Assert.notEmpty(Assert.java:464)\n\tat org.springframework.data.jpa.mapping.JpaMetamodelMappingContext.<init>(JpaMetamodelMappingContext.java:58)\n\tat org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean.createInstance(JpaMetamodelMappingContextFactoryBean.java:80)\n\tat org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean.createInstance(JpaMetamodelMappingContextFactoryBean.java:44)\n\tat org.springframework.beans.factory.config.AbstractFactoryBean.afterPropertiesSet(AbstractFactoryBean.java:142)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1830)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1767)\n\t... 52 more\n")),"\n",l.createElement("br"),"\n",l.createElement(t.h2,{id:"when",style:{position:"relative"}},l.createElement(t.a,{href:"#when","aria-label":"when permalink",className:"header-links before"},l.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"When"),"\n",l.createElement(t.p,null,l.createElement(t.code,null,"@WebMvcTest"),"를 이용해 sliced test를 진행하고 있었다. ExceptionHandler가 올바르게 작동하는지에 대한 테스트 였음."),"\n",l.createElement("br"),"\n",l.createElement(t.h2,{id:"why",style:{position:"relative"}},l.createElement(t.a,{href:"#why","aria-label":"why permalink",className:"header-links before"},l.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Why"),"\n",l.createElement(t.p,null,"스프링 부트의 메인클래스, ",l.createElement(t.code,null,"@SpringBootApplication"),"어노테이션이 붙어있는 클래스는 자동으로 모든 테스트들의 기본 설정으로 적용된다."),"\n",l.createElement(t.p,null,"당시 메인클래스에는 ",l.createElement(t.code,null,"@EnableJpaAuditing")," 어노테이션이 적용되어있었다."),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-java"},"@EnableJpaAuditing   // <--\n@SpringBootApplication\npublic class YomojomoApplication {\n  //...\n}\n")),"\n",l.createElement(t.p,null,"따라서 테스트 코드는 실행될 때 ",l.createElement(t.code,null,"@SpringBootApplication"),"이 붙은 나의 ",l.createElement(t.code,null,"~~Application.java"),"를 로딩하는데, 테스트 코드에 붙은 ",l.createElement(t.code,null,"@WebMvcTest")," 은 sliced test로 JPA 관련 bean 들을 로딩하지 않아 ",l.createElement(t.code,null,"@EnableJpaAuditing"),"과 설정이 맞지 않는 문제가 생긴 것."),"\n",l.createElement(t.p,null,l.createElement(t.code,null,"@WebMvcTest")," 역시 Spring 통합 테스트 이기에 스프링 앱을 실행시켜 Application context를 구성해야함. 그래서 ",l.createElement(t.code,null,"@SpringBootApplication"),"이 붙은 메인 클래스의 main 메서드를 실행시켜 앱을 실행시키는데, 이 때 메인 클래스에 붙은 ",l.createElement(t.code,null,"@EnableJpaAuditing"),"이 같이 적용됨. 근데 ",l.createElement(t.code,null,"@WebMvcTest"),"의 경우 ",l.createElement(t.code,null,"@EnableJpaAuditing"),"이 필요로 하는 JPA 관련 Bean들을 ApplicationContext에 로드하지 않으므로 bean을 찾지 못했다는 에러가 뜬 것."),"\n",l.createElement("br"),"\n",l.createElement(t.h2,{id:"how",style:{position:"relative"}},l.createElement(t.a,{href:"#how","aria-label":"how permalink",className:"header-links before"},l.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"How"),"\n",l.createElement(t.h4,{id:"1-configuration-파일-분리-권장",style:{position:"relative"}},l.createElement(t.a,{href:"#1-configuration-%ED%8C%8C%EC%9D%BC-%EB%B6%84%EB%A6%AC-%EA%B6%8C%EC%9E%A5","aria-label":"1 configuration 파일 분리 권장 permalink",className:"header-links before"},l.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"1. configuration 파일 분리 (권장)"),"\n",l.createElement(t.p,null,"임의의 디렉토리에 해당 ",l.createElement(t.code,null,"@EnableJpaAuditing"),"을 위한 설정 파일을 만든다. ",l.createElement(t.code,null,"@SpringBootApplication"),"에 붙은 ",l.createElement(t.code,null,"@ComponentScan"),"에 의해 ",l.createElement(t.code,null,"@Configuration")," 이 등록된 클래스를 빈으로 로드한다. 이 과정에서 ",l.createElement(t.code,null,"@Enable~")," 역시 적용된다."),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-java"},"@EnableJpaAuditing\n@Configuration\npublic class JpaAuditingConfig { }\n")),"\n",l.createElement(t.blockquote,null,"\n",l.createElement(t.p,null,l.createElement(t.strong,null,"테스트 해보니까 안되는데요?")),"\n",l.createElement(t.p,null,"혹시 sliced test를 진행중인지 확인해보자. @Configuration 클래스를 스캔하지 않는 @WebMvcTest나 @DataJpaTest의 경우, 애초에 스캔을 안하므로 적용이 안된다."),"\n",l.createElement(t.p,null,"해당 기능을 확인하고 싶다면 @SpringBootTest를 이용해 완전한 integration test를 진행하자."),"\n"),"\n",l.createElement("br"),"\n",l.createElement(t.h4,{id:"2-필요한-sliced-test마다-mockbean으로-적용",style:{position:"relative"}},l.createElement(t.a,{href:"#2-%ED%95%84%EC%9A%94%ED%95%9C-sliced-test%EB%A7%88%EB%8B%A4-mockbean%EC%9C%BC%EB%A1%9C-%EC%A0%81%EC%9A%A9","aria-label":"2 필요한 sliced test마다 mockbean으로 적용 permalink",className:"header-links before"},l.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"2. 필요한 sliced test마다 @MockBean으로 적용."),"\n",l.createElement(t.p,null,"모든 sliced 테스트 코드마다 적용해주어야 하는 단점이 있다. 또한, main 클래스에 붙은 ",l.createElement(t.code,null,"@Enable~")," 기능이 필요 없는 테스트 마저 해당 기능을 불러오기 때문에 비효율적인 테스트가 될 수 있기 때문에 지양하자."),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-java"},"@WebMvcTest\n@MockBean(JpaMetamodelMappingContext.class)\nclass UserApiControllerTest {  ...  }\n")))}var c=function(e={}){const{wrapper:t}=Object.assign({},(0,n.ah)(),e.components);return t?l.createElement(t,e,l.createElement(r,e)):r(e)},o=a(5670),i=a(1326),s=a(4517),m=a(698),p=a(8627),d=a(662),h=a(1873);const u=({data:e,children:t,serverData:a})=>{const{prevPost:n,nextPost:r}=e,c={...e.mdx.frontmatter,timeToRead:e.mdx.fields.timeToRead};return l.createElement(m.Z,{data:e},l.createElement(o.Z,null,l.createElement(s.Z,c),l.createElement(i.Z,null,t),l.createElement(d.Z,{prev:n,next:r}),l.createElement(p.Z)))};function E(e){return l.createElement(u,e,l.createElement(c,e))}}}]);
//# sourceMappingURL=component---src-templates-article-page-jsx-content-file-path-home-runner-work-leobang-17-github-io-leobang-17-github-io-documents-spring-enable-jpa-auditing을-분리하게된-과정-md-a8dd45ba01723eeb607b.js.map