"use strict";(self.webpackChunkgatsby_theme_simplex=self.webpackChunkgatsby_theme_simplex||[]).push([[571],{2834:function(e,t,n){n.r(t),n.d(t,{Head:function(){return u.py},default:function(){return v}});var l=n(1151),a=n(7294);function r(e){const t=Object.assign({h2:"h2",a:"a",div:"div",p:"p",pre:"pre",code:"code",h4:"h4",ul:"ul",li:"li"},(0,l.ah)(),e.components);return a.createElement(a.Fragment,null,a.createElement(t.h2,{id:"문제",style:{position:"relative"}},a.createElement(t.a,{href:"#%EB%AC%B8%EC%A0%9C","aria-label":"문제 permalink",className:"header-links before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"문제"),"\n",a.createElement(t.p,null,"2 ~ 9의 숫자로 이루어진 문자열이 주어진다. 해당 문자열의 숫자는 옛날 휴대폰의 숫자키에 대응되는 문자키들을 나타낸다."),"\n",a.createElement(t.pre,null,a.createElement(t.code,null,'{ \n  2: "abc",\n  3: "def",\n  4: "ghi",\n  5: "jkl",\n  6: "mno",\n  7: "pqrs",\n  8: "tuv",\n  9: "wxyz"\n}\n')),"\n",a.createElement(t.p,null,"주어진 숫자의 조합으로 만들 수 있는 문자열의 combinations을 배열에 담아 반환하라. 순서는 상관 없다."),"\n",a.createElement(t.h4,{id:"constraints",style:{position:"relative"}},a.createElement(t.a,{href:"#constraints","aria-label":"constraints permalink",className:"header-links before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Constraints"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.code,null,"0 <= digits.length <= 4")),"\n",a.createElement(t.li,null,a.createElement(t.code,null,"digits[i] is a digit in the range ['2', '9'].")),"\n"),"\n",a.createElement(t.h2,{id:"approach---dfs-recursive",style:{position:"relative"}},a.createElement(t.a,{href:"#approach---dfs-recursive","aria-label":"approach   dfs recursive permalink",className:"header-links before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Approach - DFS (recursive)"),"\n",a.createElement(t.p,null,"backtracking으로 태그된 문제였지만 backtracking이 맞나..? 그냥 단순하게 combination을 만드는 재귀식으로 풀었다."),"\n",a.createElement(t.h4,{id:"complexity",style:{position:"relative"}},a.createElement(t.a,{href:"#complexity","aria-label":"complexity permalink",className:"header-links before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Complexity"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,"time complexity:"),"\n",a.createElement(t.li,null,"space complexity:"),"\n"),"\n",a.createElement(t.h4,{id:"code",style:{position:"relative"}},a.createElement(t.a,{href:"#code","aria-label":"code permalink",className:"header-links before"},a.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Code"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-python"},'class Solution:\n    def letterCombinations(self, digits: str) -> List[str]:\n        letter = [False, False, "abc", "def", "ghi", "jkl", "mno", "pqrs", "tuv", "wxyz"]\n        answer = []\n        \n        def recur(digits, str):\n            if len(str) == len(digits):\n                if len(str) != 0: answer.append(str)\n                return \n            for c in letter[int(digits[len(str)])]:\n                recur(digits, str + c)\n\n        recur(digits, "")\n\n        return answer\n')))}var c=function(e={}){const{wrapper:t}=Object.assign({},(0,l.ah)(),e.components);return t?a.createElement(t,e,a.createElement(r,e)):r(e)},i=n(5670),s=n(1326),h=n(4517),o=n(698),d=n(8627),m=n(662),u=n(1873);const p=({data:e,children:t,serverData:n})=>{const{prevPost:l,nextPost:r}=e,c={...e.mdx.frontmatter,timeToRead:e.mdx.fields.timeToRead};return a.createElement(o.Z,{data:e},a.createElement(i.Z,null,a.createElement(h.Z,c),a.createElement(s.Z,null,t),a.createElement(m.Z,{prev:l,next:r}),a.createElement(d.Z)))};function v(e){return a.createElement(p,e,a.createElement(c,e))}}}]);
//# sourceMappingURL=component---src-templates-article-page-jsx-content-file-path-home-runner-work-leobang-17-github-io-leobang-17-github-io-documents-algorithm-17-letter-combinations-of-a-phone-number-md-c31215d78d7530b5132f.js.map